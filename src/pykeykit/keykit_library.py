#!/usr/bin/env python3
# -*- coding: utf-8 -*-

try:
	lib_dict
except NameError:
	lib_dict = dict()

lib_dict['../../../lib/'] = [
	{
		"type": "function",
		"name": " pitchbend",
		"usage": "pitchbend(ch,val)",
		"filename": "lib/basic2.k",
		"fileline": 80,
		"desc": """ Construct a pitchbend message, where ch is the channel (1-based)
 and val is the pitchbend value, input range is -8192 to 8191.
""",
	},
	{
		"type": "function",
		"name": "CsBuildCmd",
		"usage": "CsBuildCmd()",
		"filename": "lib/csound.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "RR",
		"usage": "RR()",
		"filename": "lib/shots.k",
		"fileline": 39,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "S",
		"usage": "S()",
		"filename": "lib/short.k",
		"fileline": 138,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "S1",
		"usage": "S1(n, v)",
		"filename": "lib/short.k",
		"fileline": 106,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "S2",
		"usage": "S2()",
		"filename": "lib/short.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_aeolian",
		"usage": "SMMscale_aeolian()",
		"filename": "lib/smmutils.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_chromatic",
		"usage": "SMMscale_chromatic()",
		"filename": "lib/smmutils.k",
		"fileline": 27,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_harminor",
		"usage": "SMMscale_harminor()",
		"filename": "lib/smmutils.k",
		"fileline": 24,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_ionian",
		"usage": "SMMscale_ionian()",
		"filename": "lib/smmutils.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_melminor",
		"usage": "SMMscale_melminor()",
		"filename": "lib/smmutils.k",
		"fileline": 25,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SMMscale_pentatonic",
		"usage": "SMMscale_pentatonic()",
		"filename": "lib/smmutils.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "SU",
		"usage": "SU()",
		"filename": "lib/shots.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "abs",
		"usage": "abs(n)",
		"filename": "lib/util1.k",
		"fileline": 625,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "actionmf",
		"usage": "actionmf()",
		"filename": "lib/ergox.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "add2tooltypes",
		"usage": "add2tooltypes(fn, ttypes)",
		"filename": "lib/mkmenus.k",
		"fileline": 588,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "addbootfunc",
		"usage": "addbootfunc(func)",
		"filename": "lib/keyrc.k",
		"fileline": 317,
		"desc": """Adds a function to the list of functions that will be
automatically invoked when KeyKit is rebooted.
""",
	},
	{
		"type": "function",
		"name": "addpostrc",
		"usage": "addpostrc(f)",
		"filename": "lib/keyrc.k",
		"fileline": 59,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "addprerc",
		"usage": "addprerc(f)",
		"filename": "lib/keyrc.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "addrecorded",
		"usage": "addrecorded(o, space)",
		"filename": "lib/mkmenus.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "addrootevery",
		"usage": "addrootevery(mel, intrvl)",
		"filename": "lib/basic1.k",
		"fileline": 1081,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "afractal",
		"usage": "afractal(p)",
		"filename": "lib/fracdemo.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "aid_read",
		"usage": "aid_read(fn)",
		"filename": "lib/waid.k",
		"fileline": 491,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "alg_a",
		"usage": "alg_a(word)",
		"filename": "lib/www.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "alg_b",
		"usage": "alg_b(word, leng)",
		"filename": "lib/www.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "allnotesin",
		"usage": "allnotesin(s, key)",
		"filename": "lib/remapper.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "alloff",
		"usage": "alloff()",
		"filename": "lib/basic2.k",
		"fileline": 229,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "allscales",
		"usage": "allscales()",
		"filename": "lib/scales1.k",
		"fileline": 108,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "allsusoff",
		"usage": "allsusoff()",
		"filename": "lib/basic1.k",
		"fileline": 742,
		"desc": """Return a phrase containing a "sustain off" on all channels.
  Useful for resetting things if you have a hanging note.
""",
	},
	{
		"type": "function",
		"name": "allsysextext",
		"usage": "allsysextext(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "alpha_back",
		"usage": "alpha_back()",
		"filename": "lib/alphafun.k",
		"fileline": 145,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "alphafun",
		"usage": "alphafun()",
		"filename": "lib/alphafun.k",
		"fileline": 59,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "amelody",
		"usage": "amelody(n)",
		"filename": "lib/fracdemo.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ano",
		"usage": "ano()",
		"filename": "lib/basic1.k",
		"fileline": 725,
		"desc": """Return a phrase containing all-notes-off messages on each channel.
This does not include note-offs for each individual note, however.
""",
	},
	{
		"type": "function",
		"name": "anoall",
		"usage": "anoall()",
		"filename": "lib/basic2.k",
		"fileline": 233,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "apply",
		"usage": "apply(target,source,apptype,startquant)",
		"filename": "lib/basic1.k",
		"fileline": 865,
		"desc": """Apply stuff (pitch, volume, timing, etc.) from the source phrase
to the target phrase.  The apptype is the bitwise-or of PITCH,
VOLUME, DURATION, TIME, EXACTTIME, CHANNEL.
Default apptype is TIME|DURATION
""",
	},
	{
		"type": "function",
		"name": "applyfunc",
		"usage": "applyfunc(p,func,chunksize)",
		"filename": "lib/basic2.k",
		"fileline": 699,
		"desc": """This function splits a phrase into chunksize-sized chunks,
applies the function func to some of them (every other one,
by default), and returns the result, pasted back together.
""",
	},
	{
		"type": "function",
		"name": "applynear",
		"usage": "applynear(target, source, apptype)",
		"filename": "lib/basic1.k",
		"fileline": 943,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "applyrhythm",
		"usage": "applyrhythm(p, rh, mode)",
		"filename": "lib/players.k",
		"fileline": 830,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "areacontains",
		"usage": "areacontains(area, pt)",
		"filename": "lib/windutil.k",
		"fileline": 526,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "argvlist",
		"usage": "argvlist()",
		"filename": "lib/util1.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "arpeggio",
		"usage": "arpeggio(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 6,
		"desc": """Returns an arpeggiated version of the phrase.  One way of describing
it is that all the notes have been separated and then put back
together, back-to-back.
""",
	},
	{
		"type": "function",
		"name": "arrayclear",
		"usage": "arrayclear(arr)",
		"filename": "lib/bsguide.k",
		"fileline": 125,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "arraycopy",
		"usage": "arraycopy(origarr, copyarr, i)",
		"filename": "lib/util1.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "arraylist",
		"usage": "arraylist()",
		"filename": "lib/util1.k",
		"fileline": 64,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "arrayprint",
		"usage": "arrayprint(array)",
		"filename": "lib/util1.k",
		"fileline": 77,
		"desc": """Prints all the elements in the given array.
Works for arrays of any dimension.
""",
	},
	{
		"type": "function",
		"name": "arraysort",
		"usage": "arraysort",
		"filename": "lib/util1.k",
		"fileline": 42,
		"desc": """Sorts the elements in the given array,
and returns the sorted array.
""",
	},
	{
		"type": "function",
		"name": "arraysortonindex",
		"usage": "arraysortonindex(arr, i)",
		"filename": "lib/util1.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "attacknote",
		"usage": "attacknote(ch, v)",
		"filename": "lib/gm2.k",
		"fileline": 32,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "attime",
		"usage": "attime(phrase,time)",
		"filename": "lib/basic1.k",
		"fileline": 50,
		"desc": """Returns those notes in the specified phrase that are
sounding at the specified time.  If a note ends exactly
at the specified time, it is not included.
""",
	},
	{
		"type": "function",
		"name": "autochord",
		"usage": "autochord(chordfunc, limit)",
		"filename": "lib/demo1.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "autohappy",
		"usage": "autohappy(...)",
		"filename": "lib/happy.k",
		"fileline": 12,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "autopan",
		"usage": "autopan(p, minp, maxp)",
		"filename": "lib/basic2.k",
		"fileline": 917,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "b12",
		"usage": "b12(p)",
		"filename": "lib/short2.k",
		"fileline": 33,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bankselect",
		"usage": "bankselect(ch, mm, ll)",
		"filename": "lib/basic2.k",
		"fileline": 103,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bayareameetup",
		"usage": "bayareameetup()",
		"filename": "lib/bayareameetup.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bbq",
		"usage": "bbq()",
		"filename": "lib/ergox.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bd_round",
		"usage": "bd_round(r)",
		"filename": "lib/gs_utils.k",
		"fileline": 541,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "beam_send",
		"usage": "beam_send(msg)",
		"filename": "lib/gesture.k",
		"fileline": 374,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "beatinfo",
		"usage": "beatinfo(ph)",
		"filename": "lib/util1.k",
		"fileline": 769,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "beau_listen2",
		"usage": "beau_listen2()",
		"filename": "lib/osc.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "beau_test1",
		"usage": "beau_test1()",
		"filename": "lib/osc.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "beau_test2",
		"usage": "beau_test2()",
		"filename": "lib/osc.k",
		"fileline": 27,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bench1",
		"usage": "bench1()",
		"filename": "lib/bench.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "binbits",
		"usage": "binbits()",
		"filename": "lib/short2.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bits2phrase",
		"usage": "bits2phrase(b, p)",
		"filename": "lib/alphafun.k",
		"fileline": 122,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bm2008",
		"usage": "bm2008()",
		"filename": "lib/bm2008.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bnchord",
		"usage": "bnchord(seed)",
		"filename": "lib/bnchord.k",
		"fileline": 165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "boomix_leftarrow",
		"usage": "boomix_leftarrow()",
		"filename": "lib/wboomix.k",
		"fileline": 314,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "boomix_rightarrow",
		"usage": "boomix_rightarrow()",
		"filename": "lib/wboomix.k",
		"fileline": 324,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bpinfo",
		"usage": "bpinfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 71,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bpm",
		"usage": "bpm(beatsperminute)",
		"filename": "lib/util2.k",
		"fileline": 275,
		"desc": """Changes the tempo based on beats per minute,
rather than microseconds per beat
""",
	},
	{
		"type": "function",
		"name": "bpmnum",
		"usage": "bpmnum(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 98,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "brightnote",
		"usage": "brightnote(ch, v)",
		"filename": "lib/gm2.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "broadcastcontrol",
		"usage": "broadcastcontrol(ch, cn, cv)",
		"filename": "lib/util1.k",
		"fileline": 409,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "broadcastprogram",
		"usage": "broadcastprogram(ch, pn)",
		"filename": "lib/util1.k",
		"fileline": 452,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "browsephrase",
		"usage": "browsephrase()",
		"filename": "lib/read1.k",
		"fileline": 136,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "browsesyx",
		"usage": "browsesyx()",
		"filename": "lib/read1.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bs202drum",
		"usage": "bs202drum(leng)",
		"filename": "lib/bs202drum.k",
		"fileline": 101,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bs202drum4",
		"usage": "bs202drum4()",
		"filename": "lib/bs202drum.k",
		"fileline": 175,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bs202drum8",
		"usage": "bs202drum8()",
		"filename": "lib/bs202drum.k",
		"fileline": 178,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bs202drumn",
		"usage": "bs202drumn(b, n)",
		"filename": "lib/bs202drum.k",
		"fileline": 181,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bschoose",
		"usage": "bschoose(arr)",
		"filename": "lib/bs202drum.k",
		"fileline": 91,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bschord",
		"usage": "bschord()",
		"filename": "lib/bschord.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsdemo",
		"usage": "bsdemo()",
		"filename": "lib/bsdemo.k",
		"fileline": 4,
		"desc": """This is an example of using the bsguide() function.
""",
	},
	{
		"type": "function",
		"name": "bsgmdrum",
		"usage": "bsgmdrum(leng)",
		"filename": "lib/bsgmdrum.k",
		"fileline": 69,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsgmdrum4",
		"usage": "bsgmdrum4()",
		"filename": "lib/bsgmdrum.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsgmdrum8",
		"usage": "bsgmdrum8()",
		"filename": "lib/bsgmdrum.k",
		"fileline": 60,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsgmdrumn",
		"usage": "bsgmdrumn(b, n)",
		"filename": "lib/bsgmdrum.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsguide",
		"usage": "bsguide(arr,arrkey,keyguide,noteguide,stepsize,lng)",
		"filename": "lib/bsguide.k",
		"fileline": 58,
		"desc": """Synthesize a monophonic phrase based on these arguments:
#desc
arr
.br
An array whose elements are phrases, each one specifying
the allowable notes that can be used on a given step.
For example, if bsarr contained these elements:
arr[1]='c' ; arr[2]='c,e,g' ; arr[3]='c,g' ; arr[4]='g'
then only a 'c' would be allowed in the first step, and
the second step would allow a 'c', 'e', or 'g'.
The arr array can be of any size; when it runs out,
it is reused from the beginning.  For example, in the
example above, the fifth step would allow only a 'c'.
#desc
arrkey
.br
The key that the phrases in the arr array are meant
to be in.  E.g. in the example above, the value of arrkey
would most likely be 'c'.  This is needed so that
the arr array can be transposed to other keys.
#desc
keyguide
.br
A phrase that will determine the key (or really, chords)
in the final result.  For example, if the value of
keyguide was 'c,c,c,f', the notes picked during the first
three beats would be based in C, and the final beat would
be based in F.  Essentially the phrases in the arr array
are transposed based on these notes.
#desc
noteguide
.br
A phrase whose notes will be used as "guide" points in
picking the pitches in the final result.  For example,
if the guide phrase was 'co5,co4,co3', then the first note
in the final result would be as close as possible to 'co5',
and the note picked on the second beat would be as close as
possible to 'co4'.  If the notes of guide are very close
together, then they will strongly influence the general shape
of the final result.  If instead the notes of guide are
farther apart, then the final result will be allowed to meander
more freely between the guide notes (but still subject to the
contraints of the arr array described above).  E.g. a guide
phrase of 'co5d384,co4' would allow 4 beats of meandering
before being pushed back toward 'co4'.
#desc
stepsize
.br
This is the step size of the final result.  E.g. a value
of 1b/4 means the result would consist of sixteenth notes.
#desc
lng
.br
The desired length of the final result.
#desc
""",
	},
	{
		"type": "function",
		"name": "bsrekey",
		"usage": "bsrekey(bsarr, bskey, newarr, newkey)",
		"filename": "lib/bsguide.k",
		"fileline": 128,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsriff",
		"usage": "bsriff(key, chan1, agitation, direction, maj)",
		"filename": "lib/bsriff.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsriff",
		"usage": "bsriff2()",
		"filename": "lib/bsriff.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bssection",
		"usage": "bssection(bsarr, guide, lng, chan1, chan2)",
		"filename": "lib/bsdemo.k",
		"fileline": 78,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bsstring",
		"usage": "bsstring(str, majmin)",
		"filename": "lib/bsdemo.k",
		"fileline": 95,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bswww",
		"usage": "bswww(str, majmin)",
		"filename": "lib/www.k",
		"fileline": 66,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "bswwwmodif",
		"usage": "bswwwmodif(str, majmin)",
		"filename": "lib/wwwtools.k",
		"fileline": 775,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "canonic",
		"usage": "canonic(note)",
		"filename": "lib/util1.k",
		"fileline": 886,
		"desc": """Returns the canonical pitch of a note,
ie. a number between 0 and 11.
""",
	},
	{
		"type": "function",
		"name": "centre",
		"usage": "centre(r, c)",
		"filename": "lib/wharmony.k",
		"fileline": 405,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chadjust",
		"usage": "chadjust(melody,chords)",
		"filename": "lib/scales1.k",
		"fileline": 5,
		"desc": """Adjusts the notes of the melody phrase so that they fall on the notes
of the chords that are playing (at the same time) in the chords phrase.
""",
	},
	{
		"type": "function",
		"name": "chancolortestphrase",
		"usage": "chancolortestphrase()",
		"filename": "lib/util2.k",
		"fileline": 384,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chanexpressionchange",
		"usage": "chanexpressionchange(c, v)",
		"filename": "lib/basic2.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "changeprogchange",
		"usage": "changeprogchange(p,frompatchnum,topatchnum)",
		"filename": "lib/basic2.k",
		"fileline": 986,
		"desc": """Return p, where every program change message matching
the frompatchnum is changed to topatchnum.
The program change numbers are 1-based.
""",
	},
	{
		"type": "function",
		"name": "chaninfo",
		"usage": "chaninfo(p)",
		"filename": "lib/basic1.k",
		"fileline": 781,
		"desc": """Return a string giving channel information about phrase p.
""",
	},
	{
		"type": "function",
		"name": "chansplit",
		"usage": "chansplit(ph)",
		"filename": "lib/util1.k",
		"fileline": 1223,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chanvolchange",
		"usage": "chanvolchange(c, v)",
		"filename": "lib/basic2.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "char2bits",
		"usage": "char2bits(cn)",
		"filename": "lib/alphafun.k",
		"fileline": 108,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chfilter",
		"usage": "chfilter(melody,chord)",
		"filename": "lib/scales1.k",
		"fileline": 27,
		"desc": """Return a copy of the melody phrase, leaving only those notes that
match the chords that occur in the chord phrase at the same time.
""",
	},
	{
		"type": "function",
		"name": "chord",
		"usage": "chord(root, typ, oct)",
		"filename": "lib/basic1.k",
		"fileline": 1217,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chord",
		"usage": "chord(root,type,oct)",
		"filename": "lib/basic1.k",
		"fileline": 1213,
		"desc": """Return a chord, where root is the root note, oct is the
octave number, and type is a string that identifies the
type of chord - possible values are:
"major", "minor", "maj7", "min7", "maj9", "min9", "sus", "dim", "aug",
"Maj69", "MajB769", "HalfDim", "Dim9",
"NModMaj1", "NModMaj2", "NModMaj3",
"NModDom1", "NModDom2", "NModDom3", "NModDom4",
"ArtDim", "AOVoic1", "AOVoic2", "AllMaj", "Res",
"Vitr1", "Vitr2", "Fourths", "Pr1", "Pr2", "Pr3", "Pr4"
""",
	},
	{
		"type": "function",
		"name": "chordizerand",
		"usage": "chordizerand(p)",
		"filename": "lib/happy.k",
		"fileline": 1538,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chordmel",
		"usage": "chordmel(x, c, chtype)",
		"filename": "lib/basic2.k",
		"fileline": 880,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chordnamed",
		"usage": "chordnamed(s)",
		"filename": "lib/basic1.k",
		"fileline": 1227,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "chromatic",
		"usage": "chromatic(n1, n2)",
		"filename": "lib/example2.k",
		"fileline": 47,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "civ4",
		"usage": "civ4(x, y, z)",
		"filename": "lib/osc.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "clear_all",
		"usage": "clear_all()",
		"filename": "lib/snipper.k",
		"fileline": 139,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "closemidi",
		"usage": "closemidi(o)",
		"filename": "lib/loops.k",
		"fileline": 369,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "closenkill",
		"usage": "closenkill(o, tid)",
		"filename": "lib/wkonnect.k",
		"fileline": 788,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "closest",
		"usage": "closest(note,scale [,direction] )",
		"filename": "lib/basic1.k",
		"fileline": 82,
		"desc": """Returns a note from the specified scale that is closest in pitch
to the specified note.  If the optional direction argument is given,
it specifies the direction (1==up, -1==down) that we want the
chosen note to be in (relative to the original note).  Specifying
the direction also guarantees that a note different from the
original is chosen (if possible).
""",
	},
	{
		"type": "function",
		"name": "closestmap",
		"usage": "closestmap(nt,map)",
		"filename": "lib/basic1.k",
		"fileline": 118,
		"desc": """The map argument is a set of notes.  This function takes the
single note nt and changes its pitch to the closest note in the map set.
""",
	},
	{
		"type": "function",
		"name": "closestt",
		"usage": "closestt(phrase,time,limit)",
		"filename": "lib/basic1.k",
		"fileline": 159,
		"desc": """Return the single note in the specified phrase that is closest
in time to the specified time.  If the limit argument is given,
the search is limited to notes within that amount of time
(i.e. to notes between (time-limit) and (time+limit)).
""",
	},
	{
		"type": "function",
		"name": "cmd_addroot",
		"usage": "cmd_addroot(p, i)",
		"filename": "lib/cmds.k",
		"fileline": 137,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_adjvol",
		"usage": "cmd_adjvol(p, inc)",
		"filename": "lib/cmds.k",
		"fileline": 425,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_applynear",
		"usage": "cmd_applynear(p, type)",
		"filename": "lib/cmds.k",
		"fileline": 211,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_applyseq",
		"usage": "cmd_applyseq(p, type)",
		"filename": "lib/cmds.k",
		"fileline": 215,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_arpeggio",
		"usage": "cmd_arpeggio(p)",
		"filename": "lib/cmds.k",
		"fileline": 145,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_autopan",
		"usage": "cmd_autopan(p, v1, v2)",
		"filename": "lib/cmds.k",
		"fileline": 316,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_average",
		"usage": "cmd_average(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 219,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_bs",
		"usage": "cmd_bs(p, maj)",
		"filename": "lib/cmds.k",
		"fileline": 256,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_chordize",
		"usage": "cmd_chordize(p, key, chtype)",
		"filename": "lib/cmds.k",
		"fileline": 194,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_crescendo",
		"usage": "cmd_crescendo(p)",
		"filename": "lib/cmds.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_debank",
		"usage": "cmd_debank(ph)",
		"filename": "lib/cmds.k",
		"fileline": 233,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_decrescendo",
		"usage": "cmd_decrescendo(p)",
		"filename": "lib/cmds.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_dedup",
		"usage": "cmd_dedup(ph)",
		"filename": "lib/cmds.k",
		"fileline": 230,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_dedupdur",
		"usage": "cmd_dedupdur(ph)",
		"filename": "lib/cmds.k",
		"fileline": 236,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_durscale",
		"usage": "cmd_durscale(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 393,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_echo",
		"usage": "cmd_echo(ph, num, rtime, rfactor)",
		"filename": "lib/cmds.k",
		"fileline": 239,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_eventime",
		"usage": "cmd_eventime(p)",
		"filename": "lib/cmds.k",
		"fileline": 368,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_evolve",
		"usage": "cmd_evolve(p, n)",
		"filename": "lib/cmds.k",
		"fileline": 310,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_expandvol",
		"usage": "cmd_expandvol(p, f)",
		"filename": "lib/cmds.k",
		"fileline": 307,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_fade",
		"usage": "cmd_fade(ph, num, dir)",
		"filename": "lib/cmds.k",
		"fileline": 445,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_flip",
		"usage": "cmd_flip(p)",
		"filename": "lib/cmds.k",
		"fileline": 319,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_fractal",
		"usage": "cmd_fractal(p)",
		"filename": "lib/cmds.k",
		"fileline": 362,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_inverti",
		"usage": "cmd_inverti(p)",
		"filename": "lib/cmds.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_invertidir",
		"usage": "cmd_invertidir(p)",
		"filename": "lib/cmds.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leavechan",
		"usage": "cmd_leavechan(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leavedur",
		"usage": "cmd_leavedur(p, dir, dur)",
		"filename": "lib/cmds.k",
		"fileline": 95,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leavenearbeat",
		"usage": "cmd_leavenearbeat(p, tm1, tm2)",
		"filename": "lib/cmds.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leaventh",
		"usage": "cmd_leaventh(p, n)",
		"filename": "lib/cmds.k",
		"fileline": 88,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leaveonbeat",
		"usage": "cmd_leaveonbeat(p, tm)",
		"filename": "lib/cmds.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leaverand",
		"usage": "cmd_leaverand(p, n)",
		"filename": "lib/cmds.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leavetype",
		"usage": "cmd_leavetype(p, t)",
		"filename": "lib/cmds.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_leavevol",
		"usage": "cmd_leavevol(p, dir, vol)",
		"filename": "lib/cmds.k",
		"fileline": 115,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_legato",
		"usage": "cmd_legato(p)",
		"filename": "lib/cmds.k",
		"fileline": 149,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_mono",
		"usage": "cmd_mono(p, t)",
		"filename": "lib/cmds.k",
		"fileline": 205,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_noise",
		"usage": "cmd_noise(ph, ntype, att, amnt)",
		"filename": "lib/cmds.k",
		"fileline": 461,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_null",
		"usage": "cmd_null(p)",
		"filename": "lib/cmds.k",
		"fileline": 208,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_ornament",
		"usage": "cmd_ornament(ph, t)",
		"filename": "lib/cmds.k",
		"fileline": 466,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_permute",
		"usage": "cmd_permute(p)",
		"filename": "lib/cmds.k",
		"fileline": 294,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_preecho",
		"usage": "cmd_preecho(...)",
		"filename": "lib/cmds.k",
		"fileline": 246,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_quantize",
		"usage": "cmd_quantize(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 372,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_quantizedur",
		"usage": "cmd_quantizedur(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 378,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_quantizefirst",
		"usage": "cmd_quantizefirst(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 375,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removechan",
		"usage": "cmd_removechan(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removedur",
		"usage": "cmd_removedur(p, dir, dur)",
		"filename": "lib/cmds.k",
		"fileline": 105,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removenearbeat",
		"usage": "cmd_removenearbeat(p, tm1, tm2)",
		"filename": "lib/cmds.k",
		"fileline": 77,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removenth",
		"usage": "cmd_removenth(p, n)",
		"filename": "lib/cmds.k",
		"fileline": 91,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removeonbeat",
		"usage": "cmd_removeonbeat(p, tm)",
		"filename": "lib/cmds.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removerand",
		"usage": "cmd_removerand(p, n)",
		"filename": "lib/cmds.k",
		"fileline": 84,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removetype",
		"usage": "cmd_removetype(p, t)",
		"filename": "lib/cmds.k",
		"fileline": 46,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_removevol",
		"usage": "cmd_removevol(p, dir, vol)",
		"filename": "lib/cmds.k",
		"fileline": 126,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_repeat",
		"usage": "cmd_repeat(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 409,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_repeatquant",
		"usage": "cmd_repeatquant(p, n, q)",
		"filename": "lib/cmds.k",
		"fileline": 413,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_replace",
		"usage": "cmd_replace(p, ...)",
		"filename": "lib/cmds.k",
		"fileline": 325,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_reverse",
		"usage": "cmd_reverse(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 436,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_scadjust",
		"usage": "cmd_scadjust(p, nt, scale)",
		"filename": "lib/cmds.k",
		"fileline": 199,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_scafilt",
		"usage": "cmd_scafilt(p, nt, scale)",
		"filename": "lib/cmds.k",
		"fileline": 202,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_scalast",
		"usage": "cmd_scalast(op, cmd, t)",
		"filename": "lib/cmds.k",
		"fileline": 169,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_setchan",
		"usage": "cmd_setchan(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 421,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_setduration",
		"usage": "cmd_setduration(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 381,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_shift",
		"usage": "cmd_shift(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 432,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_shuffle",
		"usage": "cmd_shuffle(p)",
		"filename": "lib/cmds.k",
		"fileline": 365,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_slowdown",
		"usage": "cmd_slowdown(p)",
		"filename": "lib/cmds.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_spread",
		"usage": "cmd_spread(ph, num, rtime, rfactor)",
		"filename": "lib/cmds.k",
		"fileline": 249,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_step",
		"usage": "cmd_step(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 385,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_stutter",
		"usage": "cmd_stutter(p, wid, num)",
		"filename": "lib/cmds.k",
		"fileline": 401,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_stutterrand",
		"usage": "cmd_stutterrand(p)",
		"filename": "lib/cmds.k",
		"fileline": 405,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_swapnotes",
		"usage": "cmd_swapnotes(p)",
		"filename": "lib/cmds.k",
		"fileline": 429,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_thin",
		"usage": "cmd_thin(p, ...)",
		"filename": "lib/cmds.k",
		"fileline": 356,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_thincontrol",
		"usage": "cmd_thincontrol(p, ...)",
		"filename": "lib/cmds.k",
		"fileline": 359,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_timescale",
		"usage": "cmd_timescale(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 389,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_tonerow",
		"usage": "cmd_tonerow(p)",
		"filename": "lib/cmds.k",
		"fileline": 322,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_transpose",
		"usage": "cmd_transpose(p, a)",
		"filename": "lib/cmds.k",
		"fileline": 166,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_transposeseq",
		"usage": "cmd_transposeseq(p, rep)",
		"filename": "lib/cmds.k",
		"fileline": 153,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cmd_volscale",
		"usage": "cmd_volscale(p, arg)",
		"filename": "lib/cmds.k",
		"fileline": 397,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "collectsysexdump",
		"usage": "collectsysexdump(f)",
		"filename": "lib/realutil.k",
		"fileline": 195,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "completescale",
		"usage": "completescale(key,scalename)",
		"filename": "lib/scales1.k",
		"fileline": 159,
		"desc": """Return a phrase which is in the given key and scale, and extends
from the lowest note (in the key/scale) to the highest note.
""",
	},
	{
		"type": "function",
		"name": "completescalephrase",
		"usage": "completescalephrase(p)",
		"filename": "lib/scales1.k",
		"fileline": 193,
		"desc": """Return a phrase which has the notes in p duplicated across all octaves.
""",
	},
	{
		"type": "function",
		"name": "consloop",
		"usage": "consloop()",
		"filename": "lib/loops.k",
		"fileline": 10,
		"desc": """This is intended to be the one-and-only task that reads from
the Consinfifo, a special fifo that is automatically opened
whenever KeyKit is booted, and to which KeyKit sends any characters
typed on the console.  consloop() forwards the characters to whatever
task is supposed to be reading the console.  If Consgrabfifo is
set, it will send them there, otherwise it sends them to the
main command interpreter, which is reading from interpfifo.
""",
	},
	{
		"type": "function",
		"name": "consoleprintf",
		"usage": "consoleprintf(...)",
		"filename": "lib/keyrc.k",
		"fileline": 287,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "consoutloop",
		"usage": "consoutloop()",
		"filename": "lib/loops.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "constant",
		"usage": "constant()",
		"filename": "lib/util1.k",
		"fileline": 93,
		"desc": """This function initializes various constants that
are needed by other funcitons.
""",
	},
	{
		"type": "function",
		"name": "constaskdone",
		"usage": "constaskdone(o, f)",
		"filename": "lib/w4play.k",
		"fileline": 376,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "continuemsg",
		"usage": "continuemsg()",
		"filename": "lib/basic2.k",
		"fileline": 254,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "controller",
		"usage": "controller(ch,cn,val)",
		"filename": "lib/basic2.k",
		"fileline": 65,
		"desc": """Return a controller message, where ch is the channel (1-based),
cn is the controller number, and val is the value.
""",
	},
	{
		"type": "function",
		"name": "controllerlist",
		"usage": "controllerlist(noextra)",
		"filename": "lib/util2.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "controllermon",
		"usage": "controllermon()",
		"filename": "lib/controllermon.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "controllernotes",
		"usage": "controllernotes(ph, t)",
		"filename": "lib/basic2.k",
		"fileline": 571,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "crescendo",
		"usage": "crescendo(ph, start_vol, end_vol)",
		"filename": "lib/basic2.k",
		"fileline": 617,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "csout",
		"usage": "csout(m)",
		"filename": "lib/csound.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cutb",
		"usage": "cutb(p, b)",
		"filename": "lib/short.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cutitdown",
		"usage": "cutitdown(w, desired)",
		"filename": "lib/www.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "datamsg",
		"usage": "datamsg(ch, mm, ll)",
		"filename": "lib/basic2.k",
		"fileline": 99,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "debank",
		"usage": "debank(ph)",
		"filename": "lib/basic2.k",
		"fileline": 1044,
		"desc": """Removes all bank-select controller messages (controller 0
followed by controller 32) from a phrase.
Note that it leaves the program change message
which usually follows.
""",
	},
	{
		"type": "function",
		"name": "debugfile",
		"usage": "debugfile(s)",
		"filename": "lib/util2.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "decaynote",
		"usage": "decaynote(ch, v)",
		"filename": "lib/gm2.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "decpriority",
		"usage": "decpriority()",
		"filename": "lib/util1.k",
		"fileline": 380,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dedup",
		"usage": "dedup(ph)",
		"filename": "lib/basic1.k",
		"fileline": 983,
		"desc": """Remove any duplicate notes (in time and pitch) from a phrase.
""",
	},
	{
		"type": "function",
		"name": "dedupdur",
		"usage": "dedupdur(ph)",
		"filename": "lib/basic1.k",
		"fileline": 1002,
		"desc": """Remove any duplicate notes (including comparison of duration)
from a phrase.
""",
	},
	{
		"type": "function",
		"name": "default_port_for_channel",
		"usage": "default_port_for_channel(ch)",
		"filename": "lib/maps.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "defchord",
		"usage": "defchord(c, p)",
		"filename": "lib/bnchord.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "definecontrol",
		"usage": "definecontrol()",
		"filename": "lib/util1.k",
		"fileline": 400,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "definelocks",
		"usage": "definelocks()",
		"filename": "lib/util1.k",
		"fileline": 673,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "defineprogram",
		"usage": "defineprogram()",
		"filename": "lib/util1.k",
		"fileline": 445,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "delay",
		"usage": "delay(ph,tm)",
		"filename": "lib/basic1.k",
		"fileline": 771,
		"desc": """Return phrase ph, delayed by time tm.
""",
	},
	{
		"type": "function",
		"name": "deletemidiin",
		"usage": "deletemidiin(i)",
		"filename": "lib/loops.k",
		"fileline": 363,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "deleteobject",
		"usage": "deleteobject(o)",
		"filename": "lib/util1.k",
		"fileline": 941,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "derest",
		"usage": "derest(ph)",
		"filename": "lib/basic2.k",
		"fileline": 1106,
		"desc": """Removes all rests (sections where nothing is playing)
from a phrase.
""",
	},
	{
		"type": "function",
		"name": "display",
		"usage": "display(fullscreen)",
		"filename": "lib/display.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dna",
		"usage": "dna(codes, iters)",
		"filename": "lib/dna.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "docmd",
		"usage": "docmd(cmd)",
		"filename": "lib/util1.k",
		"fileline": 1575,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dodemo",
		"usage": "dodemo(fname)",
		"filename": "lib/loops.k",
		"fileline": 252,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dokeylocal",
		"usage": "dokeylocal()",
		"filename": "lib/keyrc.k",
		"fileline": 66,
		"desc": """Set up input/output ports.  Look for a file keylocal.k first,
and if that doesn't exist, use some defaults
""",
	},
	{
		"type": "function",
		"name": "domethod",
		"usage": "domethod(o, meth, ...)",
		"filename": "lib/util1.k",
		"fileline": 679,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dprint",
		"usage": "dprint(s)",
		"filename": "lib/util1.k",
		"fileline": 966,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dr202decode",
		"usage": "dr202decode(ph)",
		"filename": "lib/dr202.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dr202map",
		"usage": "dr202map()",
		"filename": "lib/dr202.k",
		"fileline": 66,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dr202presetkit",
		"usage": "dr202presetkit(ch, n)",
		"filename": "lib/dr202.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dr202userkit",
		"usage": "dr202userkit(ch, n)",
		"filename": "lib/dr202.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "draw_downarrow",
		"usage": "draw_downarrow(o)",
		"filename": "lib/gutil.k",
		"fileline": 12,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "draw_uparrow",
		"usage": "draw_uparrow(o)",
		"filename": "lib/gutil.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drawkeyletter",
		"usage": "drawkeyletter(w, p)",
		"filename": "lib/wkey.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drawsharp",
		"usage": "drawsharp(w, sz)",
		"filename": "lib/wkey.k",
		"fileline": 140,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drawx",
		"usage": "drawx(s, mode)",
		"filename": "lib/windutil.k",
		"fileline": 55,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drummap",
		"usage": "drummap()",
		"filename": "lib/maps.k",
		"fileline": 317,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drummap_for_chan",
		"usage": "drummap_for_chan(ch)",
		"filename": "lib/maps.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drummap_rand",
		"usage": "drummap_rand(ch)",
		"filename": "lib/maps.k",
		"fileline": 391,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drummap_type",
		"usage": "drummap_type(ch, t)",
		"filename": "lib/maps.k",
		"fileline": 405,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drumtypes_for_chan",
		"usage": "drumtypes_for_chan(ch)",
		"filename": "lib/maps.k",
		"fileline": 40,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drumtypes_sc8850",
		"usage": "drumtypes_sc8850(type)",
		"filename": "lib/sc8850.k",
		"fileline": 157,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drumtypes_sd80",
		"usage": "drumtypes_sd80(type)",
		"filename": "lib/sd80.k",
		"fileline": 178,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "drumtypes_virusb",
		"usage": "drumtypes_virusb(type)",
		"filename": "lib/virusb.k",
		"fileline": 1168,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "duffing_wfr",
		"usage": "duffing_wfr(x, y, t)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1408,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dupsof",
		"usage": "dupsof(p)",
		"filename": "lib/basic1.k",
		"fileline": 965,
		"desc": """Return a phrase containing one copy of any notes that
are duplicated in phrase p
""",
	},
	{
		"type": "function",
		"name": "dw2scadjust",
		"usage": "dw2scadjust(mel, scale, tr, sc)",
		"filename": "lib/dwutil.k",
		"fileline": 36,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dwchadjust1",
		"usage": "dwchadjust1(p1)",
		"filename": "lib/wbargen7.k",
		"fileline": 1351,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "dwscadjust",
		"usage": "dwscadjust(mel, scale, tr)",
		"filename": "lib/dwutil.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "eargame",
		"usage": "eargame()",
		"filename": "lib/eargame.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "echo",
		"usage": "echo(ph,num,rtime,rfactor)",
		"filename": "lib/basic1.k",
		"fileline": 1242,
		"desc": """Return phrase ph echoed num times, with rtime delay between
each echo, and with the volume of each echo decreased by rfactor.
NEW BEHAVIOUR - 8/9/99 - the length of the result is
now explicitly set.  This is more "right", but some algorithms
may have been depending (unknowingly) on the old semantic.
""",
	},
	{
		"type": "function",
		"name": "echomaster",
		"usage": "echomaster(ph,fnum,ftime,ffactor,bnum,btime,bfactor)",
		"filename": "lib/basic1.k",
		"fileline": 1298,
		"desc": """Return phrase ph with echoes, forward and back.
fnum is the number of forward echos, ftime is the echo time, ffactor
is the volume reduction factor.  bnum/btime/bfactor is for the
backward echos.
""",
	},
	{
		"type": "function",
		"name": "echoplex",
		"usage": "echoplex(gm)",
		"filename": "lib/echoplex.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "echoplex_console",
		"usage": "echoplex_console(scale, drumchan)",
		"filename": "lib/echoplex.k",
		"fileline": 72,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "echoplex_drums",
		"usage": "echoplex_drums()",
		"filename": "lib/echoplex.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "echoplex_reset",
		"usage": "echoplex_reset()",
		"filename": "lib/echoplex.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "echovariety",
		"usage": "echovariety(w)",
		"filename": "lib/www.k",
		"fileline": 200,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "efunction",
		"usage": "efunction(f)",
		"filename": "lib/util1.k",
		"fileline": 1400,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ell_mkmenu_ellscale",
		"usage": "ell_mkmenu_ellscale(o, po, meth)",
		"filename": "lib/wtr_ellipse.k",
		"fileline": 894,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ell_preset_patches",
		"usage": "ell_preset_patches(v)",
		"filename": "lib/wtr_ellipse.k",
		"fileline": 878,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ell_scale_names",
		"usage": "ell_scale_names(v)",
		"filename": "lib/wtr_ellipse.k",
		"fileline": 835,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ell_scale_names_fr",
		"usage": "ell_scale_names_fr(v)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1346,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "endcs",
		"usage": "endcs()",
		"filename": "lib/csound.k",
		"fileline": 71,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergo",
		"usage": "ergo(standalone)",
		"filename": "lib/ergo.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergo_check",
		"usage": "ergo_check()",
		"filename": "lib/ergo.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergodrive",
		"usage": "ergodrive(standalone)",
		"filename": "lib/ergodrive.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergodrive_check",
		"usage": "ergodrive_check()",
		"filename": "lib/ergodrive.k",
		"fileline": 36,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox",
		"usage": "ergox(timer)",
		"filename": "lib/ergox.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox21",
		"usage": "ergox21(timer)",
		"filename": "lib/ergox21.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox21_midi_restart",
		"usage": "ergox21_midi_restart(o)",
		"filename": "lib/ergox21.k",
		"fileline": 4299,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bayareameetup_actionmf",
		"usage": "ergox_bayareameetup_actionmf()",
		"filename": "lib/bayareameetup.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bayareameetup_midi_restart",
		"usage": "ergox_bayareameetup_midi_restart(o)",
		"filename": "lib/bayareameetup.k",
		"fileline": 5620,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bayareameetup_resetconsole",
		"usage": "ergox_bayareameetup_resetconsole(o)",
		"filename": "lib/bayareameetup.k",
		"fileline": 5616,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bm2008_actionmf",
		"usage": "ergox_bm2008_actionmf()",
		"filename": "lib/bm2008.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bm2008_midi_restart",
		"usage": "ergox_bm2008_midi_restart(o)",
		"filename": "lib/bm2008.k",
		"fileline": 5887,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_bm2008_resetconsole",
		"usage": "ergox_bm2008_resetconsole(o)",
		"filename": "lib/bm2008.k",
		"fileline": 5883,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_eyeful2008_old_midi_restart",
		"usage": "ergox_eyeful2008_old_midi_restart(o)",
		"filename": "lib/eyeful_old.k",
		"fileline": 6866,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_eyeful2008_old_resetconsole",
		"usage": "ergox_eyeful2008_old_resetconsole(o)",
		"filename": "lib/eyeful_old.k",
		"fileline": 6862,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2008_actionmf",
		"usage": "ergox_galaxy2008_actionmf()",
		"filename": "lib/galaxy2008.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2008_midi_restart",
		"usage": "ergox_galaxy2008_midi_restart(o)",
		"filename": "lib/galaxy2008.k",
		"fileline": 5971,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2008_resetconsole",
		"usage": "ergox_galaxy2008_resetconsole(o)",
		"filename": "lib/galaxy2008.k",
		"fileline": 5967,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2009v0_actionmf",
		"usage": "ergox_galaxy2009v0_actionmf()",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2009v0_midi_restart",
		"usage": "ergox_galaxy2009v0_midi_restart(o)",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 2849,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2009v0_osc_restart",
		"usage": "ergox_galaxy2009v0_osc_restart(o)",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 2852,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_galaxy2009v0_resetconsole",
		"usage": "ergox_galaxy2009v0_resetconsole(o)",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 2845,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_google2008_actionmf",
		"usage": "ergox_google2008_actionmf()",
		"filename": "lib/google2008.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_google2008_midi_restart",
		"usage": "ergox_google2008_midi_restart(o)",
		"filename": "lib/google2008.k",
		"fileline": 5887,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_google2008_resetconsole",
		"usage": "ergox_google2008_resetconsole(o)",
		"filename": "lib/google2008.k",
		"fileline": 5883,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_loopsalad_midi_restart",
		"usage": "ergox_loopsalad_midi_restart(o)",
		"filename": "lib/loopsalad.k",
		"fileline": 5929,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_loopsalad_resetconsole",
		"usage": "ergox_loopsalad_resetconsole(o)",
		"filename": "lib/loopsalad.k",
		"fileline": 5925,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_maker2008_actionmf",
		"usage": "ergox_maker2008_actionmf()",
		"filename": "lib/maker2008.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_maker2008_midi_restart",
		"usage": "ergox_maker2008_midi_restart(o)",
		"filename": "lib/maker2008.k",
		"fileline": 5556,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_maker2008_resetconsole",
		"usage": "ergox_maker2008_resetconsole(o)",
		"filename": "lib/maker2008.k",
		"fileline": 5552,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_midi_restart",
		"usage": "ergox_midi_restart(o)",
		"filename": "lib/ergox.k",
		"fileline": 4268,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_neural_resetconsole",
		"usage": "ergox_neural_resetconsole(o)",
		"filename": "lib/neural.k",
		"fileline": 366,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nightlight_actionmf",
		"usage": "ergox_nightlight_actionmf()",
		"filename": "lib/nightlight.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nightlight_midi_restart",
		"usage": "ergox_nightlight_midi_restart(o)",
		"filename": "lib/nightlight.k",
		"fileline": 5597,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nightlight_resetconsole",
		"usage": "ergox_nightlight_resetconsole(o)",
		"filename": "lib/nightlight.k",
		"fileline": 5593,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthcanvas_actionmf",
		"usage": "ergox_nthcanvas_actionmf()",
		"filename": "lib/nthcanvas.k",
		"fileline": 24,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthcanvas_midi_restart",
		"usage": "ergox_nthcanvas_midi_restart(o)",
		"filename": "lib/nthcanvas.k",
		"fileline": 2933,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthcanvas_osc_restart",
		"usage": "ergox_nthcanvas_osc_restart(o)",
		"filename": "lib/nthcanvas.k",
		"fileline": 2936,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthcanvas_resetconsole",
		"usage": "ergox_nthcanvas_resetconsole(o)",
		"filename": "lib/nthcanvas.k",
		"fileline": 2929,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthloop_actionmf",
		"usage": "ergox_nthloop_actionmf()",
		"filename": "lib/nthloop.k",
		"fileline": 24,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthloop_midi_restart",
		"usage": "ergox_nthloop_midi_restart(o)",
		"filename": "lib/nthloop.k",
		"fileline": 2936,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthloop_osc_restart",
		"usage": "ergox_nthloop_osc_restart(o)",
		"filename": "lib/nthloop.k",
		"fileline": 2939,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_nthloop_resetconsole",
		"usage": "ergox_nthloop_resetconsole(o)",
		"filename": "lib/nthloop.k",
		"fileline": 2932,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_redmond2008_actionmf",
		"usage": "ergox_redmond2008_actionmf()",
		"filename": "lib/redmond2008.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_redmond2008_midi_restart",
		"usage": "ergox_redmond2008_midi_restart(o)",
		"filename": "lib/redmond2008.k",
		"fileline": 5910,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_redmond2008_resetconsole",
		"usage": "ergox_redmond2008_resetconsole(o)",
		"filename": "lib/redmond2008.k",
		"fileline": 5906,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_starrynight_actionmf",
		"usage": "ergox_starrynight_actionmf()",
		"filename": "lib/starrynight.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_starrynight_midi_restart",
		"usage": "ergox_starrynight_midi_restart(o)",
		"filename": "lib/starrynight.k",
		"fileline": 5655,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_starrynight_resetconsole",
		"usage": "ergox_starrynight_resetconsole(o)",
		"filename": "lib/starrynight.k",
		"fileline": 5651,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_works",
		"usage": "ergox_works(timer)",
		"filename": "lib/ergox_works.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_works_actionmf",
		"usage": "ergox_works_actionmf()",
		"filename": "lib/ergox_works.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_works_midi_restart",
		"usage": "ergox_works_midi_restart(o)",
		"filename": "lib/ergox_works.k",
		"fileline": 3939,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_works_resetconsole",
		"usage": "ergox_works_resetconsole(o)",
		"filename": "lib/ergox_works.k",
		"fileline": 3935,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_wsh",
		"usage": "ergox_wsh(timer)",
		"filename": "lib/ergox_wsh.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_wsh_actionmf",
		"usage": "ergox_wsh_actionmf()",
		"filename": "lib/ergox_wsh.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_wsh_midi_restart",
		"usage": "ergox_wsh_midi_restart(o)",
		"filename": "lib/ergox_wsh.k",
		"fileline": 3718,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_wsh_resetconsole",
		"usage": "ergox_wsh_resetconsole(o)",
		"filename": "lib/ergox_wsh.k",
		"fileline": 3714,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_yuri_actionmf",
		"usage": "ergox_yuri_actionmf()",
		"filename": "lib/yuri.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_yuri_midi_restart",
		"usage": "ergox_yuri_midi_restart(o)",
		"filename": "lib/yuri.k",
		"fileline": 4949,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergox_yuri_resetconsole",
		"usage": "ergox_yuri_resetconsole(o)",
		"filename": "lib/yuri.k",
		"fileline": 4945,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergoxunion",
		"usage": "ergoxunion(timer)",
		"filename": "lib/ergoxunion.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ergoxunion_midi_restart",
		"usage": "ergoxunion_midi_restart(o)",
		"filename": "lib/ergoxunion.k",
		"fileline": 4326,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "etest",
		"usage": "etest(p)",
		"filename": "lib/expresso.k",
		"fileline": 318,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "eval_number",
		"usage": "eval_number(s)",
		"filename": "lib/util1.k",
		"fileline": 1654,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "evalstring",
		"usage": "evalstring(s)",
		"filename": "lib/util2.k",
		"fileline": 332,
		"desc": """Takes a string and evals it.  Useful when you want to
put something in the background - you just "task evalstring(...)"
""",
	},
	{
		"type": "function",
		"name": "eventime",
		"usage": "eventime(ph)",
		"filename": "lib/basic1.k",
		"fileline": 800,
		"desc": """Return phrase ph with all of its notes evenly spaced in time.
""",
	},
	{
		"type": "function",
		"name": "evolve",
		"usage": "evolve(p1, p2, nsteps, leng)",
		"filename": "lib/basic2.k",
		"fileline": 826,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example10",
		"usage": "example10(infile, outfile)",
		"filename": "lib/example10.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example12",
		"usage": "example12()",
		"filename": "lib/example12.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example12b",
		"usage": "example12b()",
		"filename": "lib/example12.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example13",
		"usage": "example13()",
		"filename": "lib/example13.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example14",
		"usage": "example14()",
		"filename": "lib/example14.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example15",
		"usage": "example15()",
		"filename": "lib/example15.k",
		"fileline": 10,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example16",
		"usage": "example16(ph)",
		"filename": "lib/example16.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example17",
		"usage": "example17(ph)",
		"filename": "lib/example17.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example18",
		"usage": "example18(fname)",
		"filename": "lib/example18.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example19",
		"usage": "example19()",
		"filename": "lib/example19.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example5",
		"usage": "example5()",
		"filename": "lib/example5.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example7",
		"usage": "example7()",
		"filename": "lib/example7.k",
		"fileline": 10,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example8",
		"usage": "example8()",
		"filename": "lib/example8.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example_1",
		"usage": "example_1(p1, n1, s1)",
		"filename": "lib/example1.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example_11",
		"usage": "example_11()",
		"filename": "lib/example11.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example_4",
		"usage": "example_4(p1, p2, p3)",
		"filename": "lib/example4.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example_6",
		"usage": "example_6(p)",
		"filename": "lib/example6.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "example_9",
		"usage": "example_9(p)",
		"filename": "lib/example9.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "expandvol",
		"usage": "expandvol(p, factor)",
		"filename": "lib/basic2.k",
		"fileline": 904,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "expressionnotes",
		"usage": "expressionnotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 585,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "expresso",
		"usage": "expresso(transforms, gen, seed1, x)",
		"filename": "lib/expresso.k",
		"fileline": 327,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "expressomix",
		"usage": "expressomix(transforms, gen, seed1, p, ntracks, patches, scalem, verbose)",
		"filename": "lib/expresso.k",
		"fileline": 195,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "eyeful2008_old",
		"usage": "eyeful2008_old()",
		"filename": "lib/eyeful_old.k",
		"fileline": 12,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "eyeful_looper",
		"usage": "eyeful_looper()",
		"filename": "lib/eyeful_looper.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "f1func",
		"usage": "f1func()",
		"filename": "lib/gridinit.k",
		"fileline": 102,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "faire",
		"usage": "faire(scale, low, high, minvol, maxvol)",
		"filename": "lib/faire.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fakebrowsefiles",
		"usage": "fakebrowsefiles(lbl, expr, mustexist)",
		"filename": "lib/util1.k",
		"fileline": 1555,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fakekeyboardinput",
		"usage": "fakekeyboardinput(s)",
		"filename": "lib/util1.k",
		"fileline": 1625,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ffgetnn",
		"usage": "ffgetnn(note, scale, root)",
		"filename": "lib/hopasong.k",
		"fileline": 113,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ffscal",
		"usage": "ffscal(scp, scn)",
		"filename": "lib/hopasong.k",
		"fileline": 40,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ffscaletotal",
		"usage": "ffscaletotal(scn)",
		"filename": "lib/hopasong.k",
		"fileline": 86,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fib",
		"usage": "fib(n)",
		"filename": "lib/util1.k",
		"fileline": 995,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fileWatch",
		"usage": "fileWatch()",
		"filename": "lib/mac.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "filecat",
		"usage": "filecat(fname)",
		"filename": "lib/util1.k",
		"fileline": 660,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fileexists",
		"usage": "fileexists(fname)",
		"filename": "lib/util1.k",
		"fileline": 656,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fileisreadable",
		"usage": "fileisreadable(fname)",
		"filename": "lib/util1.k",
		"fileline": 157,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "filetopitches",
		"usage": "filetopitches(filename)",
		"filename": "lib/read1.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fillspace",
		"usage": "fillspace(s, wexisting, dir)",
		"filename": "lib/windutil.k",
		"fileline": 60,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "finalneil",
		"usage": "finalneil()",
		"filename": "lib/www.k",
		"fileline": 284,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "finalwein",
		"usage": "finalwein()",
		"filename": "lib/www.k",
		"fileline": 279,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "findroot",
		"usage": "findroot(ph)",
		"filename": "lib/basic1.k",
		"fileline": 1025,
		"desc": """Given a phrase, try to guess the root of what's being played.
The algorithm was given to me by Christopher John Rolfe (rolfe@sfu.ca),
who says it was culled from W.Russo, Jazz Composition and Orchestration,
p.25, ex.7.
""",
	},
	{
		"type": "function",
		"name": "findtask",
		"usage": "findtask(function_name)",
		"filename": "lib/util1.k",
		"fileline": 147,
		"desc": """This function looks for a running task that is executing
the named function (which is specified as a string, not as
a function value).  If found, the task id is returned.
If not found, the return value is -1.
""",
	},
	{
		"type": "function",
		"name": "firstbars",
		"usage": "firstbars(a, bars)",
		"filename": "lib/shots.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "firsthalf",
		"usage": "firsthalf(p)",
		"filename": "lib/basic1.k",
		"fileline": 1151,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fit2root",
		"usage": "fit2root(sz)",
		"filename": "lib/windutil.k",
		"fileline": 508,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fiverandomfiles",
		"usage": "fiverandomfiles()",
		"filename": "lib/example2.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "flip",
		"usage": "flip(phrase [,about])",
		"filename": "lib/basic1.k",
		"fileline": 202,
		"desc": """Flip the pitches of the specified phrase about some intermediate
pitch (i.e. high notes become lower, and low notes become higher).
Given a single argument, the flip is done about the average pitch
of the original phrase.  A second argument can specify a particular
pitch about which to flip.
""",
	},
	{
		"type": "function",
		"name": "floor",
		"usage": "floor(f)",
		"filename": "lib/basic1.k",
		"fileline": 1325,
		"desc": """Returns the floor (maximum integer that is less than f).
""",
	},
	{
		"type": "function",
		"name": "fractal",
		"usage": "fractal(ph,depth)",
		"filename": "lib/basic2.k",
		"fileline": 284,
		"desc": """Returns phrase ph fractalized - each note becomes a miniature
version of the entire phrase, transposed by the note's pitch.
The depth determines how many times this process is repeated.
Watch out, this will produce huge phrases.
""",
	},
	{
		"type": "function",
		"name": "freeframe_send",
		"usage": "freeframe_send()",
		"filename": "lib/osc.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fresco",
		"usage": "fresco(fingdev)",
		"filename": "lib/fresco.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fresco2",
		"usage": "fresco2(dt, q, plimit, fingdev)",
		"filename": "lib/fresco.k",
		"fileline": 76,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fresco3",
		"usage": "fresco3(dt, q, fingdev)",
		"filename": "lib/fresco.k",
		"fileline": 202,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fullinfo",
		"usage": "fullinfo(iph)",
		"filename": "lib/util1.k",
		"fileline": 1038,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fulltrace",
		"usage": "fulltrace()",
		"filename": "lib/util1.k",
		"fileline": 962,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fxy",
		"usage": "fxy(fx0, fy0, fx1, fy1)",
		"filename": "lib/util2.k",
		"fileline": 348,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "g9v0",
		"usage": "g9v0()",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 25,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "galaxy",
		"usage": "galaxy()",
		"filename": "lib/galaxy2008.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "galaxy2008",
		"usage": "galaxy2008()",
		"filename": "lib/galaxy2008.k",
		"fileline": 24,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "galaxy2009v0",
		"usage": "galaxy2009v0()",
		"filename": "lib/galaxy2009v0.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gauss",
		"usage": "gauss()",
		"filename": "lib/util1.k",
		"fileline": 1462,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gcd",
		"usage": "gcd(n1,...)",
		"filename": "lib/util2.k",
		"fileline": 305,
		"desc": """Returns the greatest common divisor of all of its arguments
""",
	},
	{
		"type": "function",
		"name": "gcd2",
		"usage": "gcd2(n1,n2)",
		"filename": "lib/util2.k",
		"fileline": 285,
		"desc": """Returns the greatest common divisor of two integers
""",
	},
	{
		"type": "function",
		"name": "gcontrol",
		"usage": "gcontrol(ch, cnum)",
		"filename": "lib/gcontrol.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gdrum",
		"usage": "gdrum()",
		"filename": "lib/gesture.k",
		"fileline": 1073,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gdrum_task",
		"usage": "gdrum_task()",
		"filename": "lib/gesture.k",
		"fileline": 1065,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_expresso",
		"usage": "gen_expresso(transforms, ng, x, verbose)",
		"filename": "lib/expresso.k",
		"fileline": 398,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_init_transforms",
		"usage": "gen_init_transforms(transforms)",
		"filename": "lib/expresso.k",
		"fileline": 363,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_isbinop",
		"usage": "gen_isbinop(c)",
		"filename": "lib/expresso.k",
		"fileline": 427,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_match",
		"usage": "gen_match(c)",
		"filename": "lib/expresso.k",
		"fileline": 648,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_mutate",
		"usage": "gen_mutate(pn)",
		"filename": "lib/expresso.k",
		"fileline": 465,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_parsexp",
		"usage": "gen_parsexp(s)",
		"filename": "lib/expresso.k",
		"fileline": 420,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_subvar",
		"usage": "gen_subvar(oldvarname, subvarname, subexpr)",
		"filename": "lib/expresso.k",
		"fileline": 431,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gen_tokens",
		"usage": "gen_tokens(s)",
		"filename": "lib/expresso.k",
		"fileline": 658,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "genchord",
		"usage": "genchord(s)",
		"filename": "lib/bnchord.k",
		"fileline": 25,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "generateclock",
		"usage": "generateclock()",
		"filename": "lib/realutil.k",
		"fileline": 113,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "geopostrc",
		"usage": "geopostrc()",
		"filename": "lib/geomaestro.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "geoprerc",
		"usage": "geoprerc()",
		"filename": "lib/geomaestro.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesture_status_for_dev",
		"usage": "gesture_status_for_dev(dev)",
		"filename": "lib/gesture.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturebeam",
		"usage": "gesturebeam(verbose, full)",
		"filename": "lib/gesture.k",
		"fileline": 377,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gestureclear",
		"usage": "gestureclear()",
		"filename": "lib/gesture.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturedevices",
		"usage": "gesturedevices()",
		"filename": "lib/gesture.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturefifo",
		"usage": "gesturefifo()",
		"filename": "lib/gesture.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturemon",
		"usage": "gesturemon(verbose, full)",
		"filename": "lib/gesture.k",
		"fileline": 268,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturemonrc",
		"usage": "gesturemonrc(r, c, verbose, full)",
		"filename": "lib/gesture.k",
		"fileline": 281,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturenotify",
		"usage": "gesturenotify(obj)",
		"filename": "lib/gesture.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturenotifyrc",
		"usage": "gesturenotifyrc(obj, r, c)",
		"filename": "lib/gesture.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturenotifytask",
		"usage": "gesturenotifytask(queuelimit)",
		"filename": "lib/gesture.k",
		"fileline": 75,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturestart",
		"usage": "gesturestart()",
		"filename": "lib/gesture.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturestatus",
		"usage": "gesturestatus()",
		"filename": "lib/gesture.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gesturestop",
		"usage": "gesturestop()",
		"filename": "lib/gesture.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gestureunnotify",
		"usage": "gestureunnotify(obj)",
		"filename": "lib/gesture.k",
		"fileline": 51,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_interval_name",
		"usage": "get_interval_name(int)",
		"filename": "lib/statfunc.k",
		"fileline": 411,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_note_name",
		"usage": "get_note_name(p)",
		"filename": "lib/statfunc.k",
		"fileline": 376,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_noteoff",
		"usage": "get_noteoff(f)",
		"filename": "lib/wmonolith2b.k",
		"fileline": 3620,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_nuance",
		"usage": "get_nuance(v)",
		"filename": "lib/statfunc.k",
		"fileline": 399,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_percent_ratio",
		"usage": "get_percent_ratio(np)",
		"filename": "lib/statfunc.k",
		"fileline": 451,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_phrase_notes",
		"usage": "get_phrase_notes(p)",
		"filename": "lib/statfunc.k",
		"fileline": 444,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get_rhythm",
		"usage": "get_rhythm(d)",
		"filename": "lib/statfunc.k",
		"fileline": 347,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getanote",
		"usage": "getanote()",
		"filename": "lib/realutil.k",
		"fileline": 212,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getastr",
		"usage": "getastr(pr, def, firstchar)",
		"filename": "lib/util1.k",
		"fileline": 532,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getjoymonitor",
		"usage": "getjoymonitor()",
		"filename": "lib/joymonitor.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getpnmword",
		"usage": "getpnmword(f)",
		"filename": "lib/image.k",
		"fileline": 133,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getppmline",
		"usage": "getppmline(f)",
		"filename": "lib/image.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getrange",
		"usage": "getrange(range)",
		"filename": "lib/gifjam.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "getsysexdump",
		"usage": "getsysexdump(sx)",
		"filename": "lib/realutil.k",
		"fileline": 141,
		"desc": """Get a sysex dump.  The sx argument is the sysex message
that will be output, presumably causing the device to respond
with a dump.
This function retrieves a sysex dump from an attached MIDI device.
The 'sendmessage' argument is expected to be a sysex message that,
when sent to the device, will cause it to send back a sysex dump
(or any sysex message, really).  For example, for a TX81Z, the
value of 'xf0432004f7' will cause it to send back a sysex dump
containing all patches.  The 'tmout' parameter is a timeout value
in milliseconds - if this time elapses without receiving any output
from MIDI input, the function will abort and return an empty phrase.
""",
	},
	{
		"type": "function",
		"name": "gettid",
		"usage": "gettid()",
		"filename": "lib/util1.k",
		"fileline": 669,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gexpressionchange",
		"usage": "gexpressionchange(v)",
		"filename": "lib/basic2.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrab",
		"usage": "ggrab(...)",
		"filename": "lib/gesture.k",
		"fileline": 760,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabdemo1",
		"usage": "ggrabdemo1()",
		"filename": "lib/gesture.k",
		"fileline": 1166,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabdemo2",
		"usage": "ggrabdemo2()",
		"filename": "lib/gesture.k",
		"fileline": 1159,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabdemo3",
		"usage": "ggrabdemo3()",
		"filename": "lib/gesture.k",
		"fileline": 1153,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabdemo4",
		"usage": "ggrabdemo4(stepit)",
		"filename": "lib/gesture.k",
		"fileline": 1143,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabdemo5",
		"usage": "ggrabdemo5(stepit)",
		"filename": "lib/gesture.k",
		"fileline": 1129,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabplay",
		"usage": "ggrabplay(sz)",
		"filename": "lib/gesture.k",
		"fileline": 885,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ggrabset",
		"usage": "ggrabset(p, gsize, delta, onstarts)",
		"filename": "lib/gesture.k",
		"fileline": 847,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gifjam",
		"usage": "gifjam(fname, xval, yval, scantype, redrange, greenrange, bluerange)",
		"filename": "lib/gifjam.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ginterval",
		"usage": "ginterval(...)",
		"filename": "lib/gesture.k",
		"fileline": 969,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "glinn",
		"usage": "glinn(...)",
		"filename": "lib/gesture.k",
		"fileline": 657,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "globalvalue",
		"usage": "globalvalue(nm)",
		"filename": "lib/util1.k",
		"fileline": 1605,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "globvarlist",
		"usage": "globvarlist()",
		"filename": "lib/globvars.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gm2a",
		"usage": "gm2a()",
		"filename": "lib/gm2.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gm2on",
		"usage": "gm2on()",
		"filename": "lib/gm2.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gm2reverbtime",
		"usage": "gm2reverbtime(n)",
		"filename": "lib/gm2.k",
		"fileline": 52,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gm2reverbtype",
		"usage": "gm2reverbtype(n)",
		"filename": "lib/gm2.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gmastervol",
		"usage": "gmastervol(v)",
		"filename": "lib/basic2.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gmdrumnamed",
		"usage": "gmdrumnamed(s)",
		"filename": "lib/maps.k",
		"fileline": 369,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gmresetall",
		"usage": "gmresetall()",
		"filename": "lib/basic2.k",
		"fileline": 182,
		"desc": """Returns a phrase containing controller messages that reset
everything appropriately for the beginning of
a General MIDI piece.
""",
	},
	{
		"type": "function",
		"name": "goodenough_sqrt",
		"usage": "goodenough_sqrt(x)",
		"filename": "lib/bnchord.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "google2008",
		"usage": "google2008()",
		"filename": "lib/google2008.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gplay",
		"usage": "gplay()",
		"filename": "lib/gesture.k",
		"fileline": 443,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "grab_snippet",
		"usage": "grab_snippet(tm)",
		"filename": "lib/snipper.k",
		"fileline": 62,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "grabmouse",
		"usage": "grabmouse()",
		"filename": "lib/windutil.k",
		"fileline": 448,
		"desc": """This function arranges for all mouse messages to be intercepted and
sent to a particular window, rather than being routed to the windows
underneath the mouse.  When you want to restore things to normal,
call ungrabmouse().
""",
	},
	{
		"type": "function",
		"name": "grabmousefifo",
		"usage": "grabmousefifo()",
		"filename": "lib/windutil.k",
		"fileline": 486,
		"desc": """This function arranges for all mouse messages to be intercepted and
sent to a new fifo, rather than being routed to the windows underneath
the mouse.  The fifo id of this new fifo is returned as the value
of grabmousefifo().  When you want to restore things to normal,
call ungrabmousefifo().
""",
	},
	{
		"type": "function",
		"name": "gradinclude",
		"usage": "gradinclude(p, startprob, endprob, curve)",
		"filename": "lib/bsdemo.k",
		"fileline": 191,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gran",
		"usage": "gran(transforms, g)",
		"filename": "lib/expresso.k",
		"fileline": 388,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gridinit",
		"usage": "gridinit()",
		"filename": "lib/gridinit.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gridinit",
		"usage": "gridinit()",
		"filename": "lib/gridinit.k",
		"fileline": 16,
		"desc": """This is the code that initializes the graphics mode of KeyKit.
It starts up things like the mouseloop() task, which handles
mouse input, and sets up the screen with the initial tool set
by calling toolrc().
""",
	},
	{
		"type": "function",
		"name": "gs_chksum",
		"usage": "gs_chksum(...)",
		"filename": "lib/gs_utils.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_coarsetune",
		"usage": "gs_coarsetune(chnum, semi, addr)",
		"filename": "lib/gs_utils.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_finetune",
		"usage": "gs_finetune(chnum, dcent, addr)",
		"filename": "lib/gs_utils.k",
		"fileline": 84,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_mastertune",
		"usage": "gs_mastertune(shift)",
		"filename": "lib/gs_utils.k",
		"fileline": 416,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_mfxpara",
		"usage": "gs_mfxpara(paranum, val)",
		"filename": "lib/gs_utils.k",
		"fileline": 515,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_mfxpart",
		"usage": "gs_mfxpart(chnum, mode, addr)",
		"filename": "lib/gs_utils.k",
		"fileline": 500,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_mfxtype",
		"usage": "gs_mfxtype(val1, val2)",
		"filename": "lib/gs_utils.k",
		"fileline": 484,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpnattack",
		"usage": "gs_nrpnattack(chnum, iattack)",
		"filename": "lib/gs_utils.k",
		"fileline": 267,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpncombi",
		"usage": "gs_nrpncombi(chnum, icutoff, ireso, iattack, idecay)",
		"filename": "lib/gs_utils.k",
		"fileline": 160,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpnctrl",
		"usage": "gs_nrpnctrl(from_ch, to_ch, nrpnmsb, nrpnlsb, ival)",
		"filename": "lib/gs_utils.k",
		"fileline": 193,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpncutoff",
		"usage": "gs_nrpncutoff(chnum, icutoff)",
		"filename": "lib/gs_utils.k",
		"fileline": 219,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpndecay",
		"usage": "gs_nrpndecay(chnum, idecay)",
		"filename": "lib/gs_utils.k",
		"fileline": 289,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpnrelease",
		"usage": "gs_nrpnrelease(chnum, irel)",
		"filename": "lib/gs_utils.k",
		"fileline": 311,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpnreso",
		"usage": "gs_nrpnreso(chnum, ireso)",
		"filename": "lib/gs_utils.k",
		"fileline": 243,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_nrpnvibrato",
		"usage": "gs_nrpnvibrato(chnum, ival)",
		"filename": "lib/gs_utils.k",
		"fileline": 138,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_partmode",
		"usage": "gs_partmode(chnum, mode, addr)",
		"filename": "lib/gs_utils.k",
		"fileline": 468,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_reset",
		"usage": "gs_reset()",
		"filename": "lib/gs_utils.k",
		"fileline": 33,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_scaletune",
		"usage": "gs_scaletune(chnum, c, db, d, eb, e, f, gb, g, ab, a, bb, h, addr)",
		"filename": "lib/gs_utils.k",
		"fileline": 72,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_strangemap",
		"usage": "gs_strangemap()",
		"filename": "lib/gs_utils.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_toneselect",
		"usage": "gs_toneselect(chnum, bank, prog, addr, toneset)",
		"filename": "lib/gs_utils.k",
		"fileline": 442,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_turnoff",
		"usage": "gs_turnoff(...)",
		"filename": "lib/gs_utils.k",
		"fileline": 59,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gs_turnon",
		"usage": "gs_turnon(...)",
		"filename": "lib/gs_utils.k",
		"fileline": 45,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gscale",
		"usage": "gscale(...)",
		"filename": "lib/gesture.k",
		"fileline": 496,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "gvolchange",
		"usage": "gvolchange(v)",
		"filename": "lib/basic2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy",
		"usage": "happy(...)",
		"filename": "lib/happy.k",
		"fileline": 38,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_drumsets6snares",
		"usage": "happy_drumsets6snares()",
		"filename": "lib/happysets.k",
		"fileline": 151,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_drumsets6soft",
		"usage": "happy_drumsets6soft()",
		"filename": "lib/happysets.k",
		"fileline": 186,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_patchset6_bass",
		"usage": "happy_patchset6_bass()",
		"filename": "lib/happysets.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_patchset6_light",
		"usage": "happy_patchset6_light()",
		"filename": "lib/happysets.k",
		"fileline": 136,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_patchset6_pads",
		"usage": "happy_patchset6_pads()",
		"filename": "lib/happysets.k",
		"fileline": 141,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_patchset6_rhythmic",
		"usage": "happy_patchset6_rhythmic()",
		"filename": "lib/happysets.k",
		"fileline": 126,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_patchset6_slow",
		"usage": "happy_patchset6_slow()",
		"filename": "lib/happysets.k",
		"fileline": 146,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_rhythmsets4",
		"usage": "happy_rhythmsets4()",
		"filename": "lib/happysets.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_rhythmsets6",
		"usage": "happy_rhythmsets6()",
		"filename": "lib/happysets.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happy_riffsets6",
		"usage": "happy_riffsets6()",
		"filename": "lib/happysets.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happydo",
		"usage": "happydo(f, padmon, ...)",
		"filename": "lib/happy.k",
		"fileline": 328,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happyend",
		"usage": "happyend()",
		"filename": "lib/happy.k",
		"fileline": 301,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "happyfeet",
		"usage": "happyfeet(fn)",
		"filename": "lib/happy.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "harmonicnote",
		"usage": "harmonicnote(ch, v)",
		"filename": "lib/gm2.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "haschannel",
		"usage": "haschannel(nt)",
		"filename": "lib/util1.k",
		"fileline": 1618,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hc",
		"usage": "hc()",
		"filename": "lib/hoops1c.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hc2",
		"usage": "hc2()",
		"filename": "lib/hoops2.k",
		"fileline": 10,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "head",
		"usage": "head(ph, n)",
		"filename": "lib/util1.k",
		"fileline": 720,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hidserver_listen",
		"usage": "hidserver_listen()",
		"filename": "lib/osc.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hidserver_send",
		"usage": "hidserver_send()",
		"filename": "lib/osc.k",
		"fileline": 66,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "highest",
		"usage": "highest(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 225,
		"desc": """Returns the highest-pitched note in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "highestnt",
		"usage": "highestnt(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 309,
		"desc": """Returns the highest-pitched note in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "hoops",
		"usage": "hoops(fname, timer, t)",
		"filename": "lib/hoops.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hoops1b",
		"usage": "hoops1b(fname, timer, t)",
		"filename": "lib/hoops1b.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hoops1c",
		"usage": "hoops1c()",
		"filename": "lib/hoops1c.k",
		"fileline": 27,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hoops1c_server",
		"usage": "hoops1c_server()",
		"filename": "lib/hoops1c.k",
		"fileline": 16,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hoops2",
		"usage": "hoops2()",
		"filename": "lib/hoops2.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hoops2_server",
		"usage": "hoops2_server()",
		"filename": "lib/hoops2.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hopasong",
		"usage": "hopasong(n, root, chrd, d, hpa, hpb)",
		"filename": "lib/hopasong.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "http_client",
		"usage": "http_client()",
		"filename": "lib/sock.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "hydra",
		"usage": "hydra()",
		"filename": "lib/hydra.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "in_c",
		"usage": "in_c()",
		"filename": "lib/in_c.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "incpriority",
		"usage": "incpriority()",
		"filename": "lib/util1.k",
		"fileline": 371,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "initfunkeys",
		"usage": "initfunkeys()",
		"filename": "lib/gridinit.k",
		"fileline": 117,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "initial_task",
		"usage": "initial_task(s)",
		"filename": "lib/gridinit.k",
		"fileline": 75,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "initialcontrollers",
		"usage": "initialcontrollers()",
		"filename": "lib/happy.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "inport",
		"usage": "inport(port)",
		"filename": "lib/util2.k",
		"fileline": 189,
		"desc": """Open a MIDI input port
""",
	},
	{
		"type": "function",
		"name": "interploop",
		"usage": "interploop()",
		"filename": "lib/loops.k",
		"fileline": 40,
		"desc": """This is the main command interpreter that executes the statements
that a user types interactively on the console.  It reads from
the interpfifo fifo, and characters are normally put on this fifo
by consloop().
""",
	},
	{
		"type": "function",
		"name": "inverti",
		"usage": "inverti(ph)",
		"filename": "lib/inverti.k",
		"fileline": 37,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "invertidir",
		"usage": "invertidir(ph)",
		"filename": "lib/inverti.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "irrational",
		"usage": "irrational(pos)",
		"filename": "lib/pi.k",
		"fileline": 228,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "irrational_too",
		"usage": "irrational_too(pos)",
		"filename": "lib/pi.k",
		"fileline": 280,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "iserasechar",
		"usage": "iserasechar(c)",
		"filename": "lib/util1.k",
		"fileline": 1066,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "iserasechar",
		"usage": "iserasechar(c)",
		"filename": "lib/util1.k",
		"fileline": 1062,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "isinarea",
		"usage": "isinarea(x, y, area)",
		"filename": "lib/util1.k",
		"fileline": 222,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "isinscale",
		"usage": "isinscale(note,scale)",
		"filename": "lib/util1.k",
		"fileline": 242,
		"desc": """Return true (non-zero) if the specified note exists in the
specified scale.  The scale phrase need only specify a give pitch
once - it is assumed to be duplicated over all octaves.
""",
	},
	{
		"type": "function",
		"name": "isnearbeat",
		"usage": "isnearbeat(note ,beat_interval, tolerance )",
		"filename": "lib/util1.k",
		"fileline": 207,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "isonbeat",
		"usage": "isonbeat(note [,beat_interval] )",
		"filename": "lib/util1.k",
		"fileline": 187,
		"desc": """Returns true (non-zero) if the given note lands on the beat.
The default beat interval is 1b; a second argument can specify an
different interval (e.g. isonbeat(note,4b) would return
true if the note fell on any 4-beat mark).
""",
	},
	{
		"type": "function",
		"name": "joydrums",
		"usage": "joydrums()",
		"filename": "lib/joystuff.k",
		"fileline": 137,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho1",
		"usage": "joyecho1(fn)",
		"filename": "lib/joyecho1.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho1file",
		"usage": "joyecho1file()",
		"filename": "lib/joyecho1.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho2",
		"usage": "joyecho2(fn)",
		"filename": "lib/joyecho2.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho2file",
		"usage": "joyecho2file()",
		"filename": "lib/joyecho2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho3",
		"usage": "joyecho3(fn)",
		"filename": "lib/joyecho3.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyecho3file",
		"usage": "joyecho3file()",
		"filename": "lib/joyecho3.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyfile",
		"usage": "joyfile()",
		"filename": "lib/joystuff.k",
		"fileline": 200,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyinit",
		"usage": "joyinit(millipoll)",
		"filename": "lib/joystuff.k",
		"fileline": 84,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joymapinit",
		"usage": "joymapinit()",
		"filename": "lib/joystuff.k",
		"fileline": 44,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joymon",
		"usage": "joymon()",
		"filename": "lib/joytest.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joypad",
		"usage": "joypad()",
		"filename": "lib/joypad.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joypad_name2index",
		"usage": "joypad_name2index(nm)",
		"filename": "lib/joystuff.k",
		"fileline": 32,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyplay",
		"usage": "joyplay()",
		"filename": "lib/joystuff.k",
		"fileline": 96,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joyrelease",
		"usage": "joyrelease()",
		"filename": "lib/joystuff.k",
		"fileline": 92,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "joytest",
		"usage": "joytest()",
		"filename": "lib/joytest.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jv_bank_patch",
		"usage": "jv_bank_patch(ch, s, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jvpatch_A",
		"usage": "jvpatch_A(ch, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jvpatch_B",
		"usage": "jvpatch_B(ch, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jvpatch_C",
		"usage": "jvpatch_C(ch, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jvpatch_D",
		"usage": "jvpatch_D(ch, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "jvpatch_E",
		"usage": "jvpatch_E(ch, pn)",
		"filename": "lib/jvutil.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_beatend",
		"usage": "kb2_beatend(o)",
		"filename": "lib/wkboom2.k",
		"fileline": 1777,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_kb_mkmenu",
		"usage": "kb2_kb_mkmenu(o, po, dn, dmap, dnote)",
		"filename": "lib/wkboom2.k",
		"fileline": 1624,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kbbar",
		"usage": "kb2_mkmenu_kbbar(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1661,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kbkonnect",
		"usage": "kb2_mkmenu_kbkonnect(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1653,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom1",
		"usage": "kb2_mkmenu_kboom1(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1632,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom2",
		"usage": "kb2_mkmenu_kboom2(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1767,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom2layout",
		"usage": "kb2_mkmenu_kboom2layout(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1771,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom4",
		"usage": "kb2_mkmenu_kboom4(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1750,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom5",
		"usage": "kb2_mkmenu_kboom5(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1756,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboom6",
		"usage": "kb2_mkmenu_kboom6(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1762,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomload",
		"usage": "kb2_mkmenu_kboomload(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1715,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomquant",
		"usage": "kb2_mkmenu_kboomquant(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1675,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomread",
		"usage": "kb2_mkmenu_kboomread(o, po, reset)",
		"filename": "lib/wkboom2.k",
		"fileline": 1720,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomreadpt",
		"usage": "kb2_mkmenu_kboomreadpt(o, po, pt, reset)",
		"filename": "lib/wkboom2.k",
		"fileline": 1733,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomstartquant",
		"usage": "kb2_mkmenu_kboomstartquant(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1687,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomstepsize",
		"usage": "kb2_mkmenu_kboomstepsize(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1669,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kboomtrans",
		"usage": "kb2_mkmenu_kboomtrans(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1744,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kbrand",
		"usage": "kb2_mkmenu_kbrand(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1705,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_mkmenu_kbshift",
		"usage": "kb2_mkmenu_kbshift(o, po)",
		"filename": "lib/wkboom2.k",
		"fileline": 1699,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb2_setupdrummaps",
		"usage": "kb2_setupdrummaps()",
		"filename": "lib/wkboom2.k",
		"fileline": 1589,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb_beatend",
		"usage": "kb_beatend(o)",
		"filename": "lib/wkboom.k",
		"fileline": 1221,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kb_mkmenu",
		"usage": "kb_mkmenu(o, po, dn, dmap, dnote)",
		"filename": "lib/wkboom.k",
		"fileline": 1090,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kbutton_drawtext",
		"usage": "kbutton_drawtext(o, v)",
		"filename": "lib/kbutton.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kerror",
		"usage": "kerror()",
		"filename": "lib/wkonnect.k",
		"fileline": 793,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keykithostname",
		"usage": "keykithostname()",
		"filename": "lib/sockutil.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keylocal",
		"usage": "keylocal()",
		"filename": "lib/keylocal.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keylocalOrig",
		"usage": "keylocalOrig()",
		"filename": "lib/keylocal.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keymapdemo",
		"usage": "keymapdemo()",
		"filename": "lib/keymapdemo.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keyrc",
		"usage": "keyrc()",
		"filename": "lib/keyrc.k",
		"fileline": 9,
		"desc": """This is the very first function called by KeyKit,
unless the -r option is specified when KeyKit is invoked.
This function must initialize everything necessary
for the proper running of KeyKit.  This is normally done
by calling normboot() to set up the command interpreter and
start other primary tasks.
""",
	},
	{
		"type": "function",
		"name": "keyshowtask",
		"usage": "keyshowtask(o)",
		"filename": "lib/wkey.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keysigsinfo",
		"usage": "keysigsinfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keywalktask",
		"usage": "keywalktask(o)",
		"filename": "lib/wkeywalk.k",
		"fileline": 117,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keywatchtask",
		"usage": "keywatchtask(o, ch)",
		"filename": "lib/wkeywalk.k",
		"fileline": 148,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "keywatchtask_quit",
		"usage": "keywatchtask_quit(o, mf)",
		"filename": "lib/wkeywalk.k",
		"fileline": 144,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "killtids",
		"usage": "killtids(arr)",
		"filename": "lib/util1.k",
		"fileline": 921,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kmsbutton_mkmenu",
		"usage": "kmsbutton_mkmenu(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "konnectinterp",
		"usage": "konnectinterp(interpfifo, cons, o)",
		"filename": "lib/wkonnect.k",
		"fileline": 813,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_do",
		"usage": "korg_do(fnc)",
		"filename": "lib/korg.k",
		"fileline": 168,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_dump",
		"usage": "korg_dump(ch)",
		"filename": "lib/korg.k",
		"fileline": 268,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_filter",
		"usage": "korg_filter()",
		"filename": "lib/korg.k",
		"fileline": 318,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_init",
		"usage": "korg_init()",
		"filename": "lib/korg.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_inq",
		"usage": "korg_inq(ch)",
		"filename": "lib/korg.k",
		"fileline": 256,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_label",
		"usage": "korg_label(s)",
		"filename": "lib/korg.k",
		"fileline": 90,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_lcd",
		"usage": "korg_lcd(ch)",
		"filename": "lib/korg.k",
		"fileline": 287,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_led",
		"usage": "korg_led(ch, led, d)",
		"filename": "lib/korg.k",
		"fileline": 278,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_native_off",
		"usage": "korg_native_off()",
		"filename": "lib/korg.k",
		"fileline": 242,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_native_on",
		"usage": "korg_native_on()",
		"filename": "lib/korg.k",
		"fileline": 109,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_noise",
		"usage": "korg_noise(kk)",
		"filename": "lib/korg.k",
		"fileline": 491,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_portdetect",
		"usage": "korg_portdetect(ch)",
		"filename": "lib/korg.k",
		"fileline": 262,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_push_labels",
		"usage": "korg_push_labels(f)",
		"filename": "lib/korg.k",
		"fileline": 183,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_push_table3",
		"usage": "korg_push_table3(f)",
		"filename": "lib/korg.k",
		"fileline": 130,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_router",
		"usage": "korg_router()",
		"filename": "lib/korgrouter.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_router_cleanup",
		"usage": "korg_router_cleanup()",
		"filename": "lib/korgrouter.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_router_stop",
		"usage": "korg_router_stop()",
		"filename": "lib/korgrouter.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_send",
		"usage": "korg_send(p, f)",
		"filename": "lib/korg.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_set_label",
		"usage": "korg_set_label(n, label, color)",
		"filename": "lib/korg.k",
		"fileline": 156,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_set_pad",
		"usage": "korg_set_pad(n, onoff)",
		"filename": "lib/korg.k",
		"fileline": 178,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korg_try",
		"usage": "korg_try()",
		"filename": "lib/korg.k",
		"fileline": 303,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korgcontrol",
		"usage": "korgcontrol(complain)",
		"filename": "lib/korgcontrol.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korgmon",
		"usage": "korgmon()",
		"filename": "lib/korg.k",
		"fileline": 475,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "korgrouteron",
		"usage": "korgrouteron()",
		"filename": "lib/korgrouter.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kserver",
		"usage": "kserver(prt, dbg)",
		"filename": "lib/wkonnect.k",
		"fileline": 797,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ksinfo",
		"usage": "ksinfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 169,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ksinfo2",
		"usage": "ksinfo2(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 207,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kvalbutton_mkmenu",
		"usage": "kvalbutton_mkmenu(o, po)",
		"filename": "lib/kvalbutt.k",
		"fileline": 61,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lastbunch",
		"usage": "lastbunch(ph,spc,types)",
		"filename": "lib/basic1.k",
		"fileline": 239,
		"desc": """Return the last "bunch" of notes in ph.  The value of spc is the time
that determines where the bunch ends - as soon as a blank space of
that size is detected, the bunch has ended.  This is useful for
grabbing the last little bit of the Recorded phrase.
If a third argument is given, it is a bitmask of note types
to look for - all other types are ignored.
""",
	},
	{
		"type": "function",
		"name": "lastnotechord",
		"usage": "lastnotechord()",
		"filename": "lib/basic2.k",
		"fileline": 548,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "latest",
		"usage": "latest(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 267,
		"desc": """Return the ending time of the latest note in the given phrase.
""",
	},
	{
		"type": "function",
		"name": "launchpad_flash",
		"usage": "launchpad_flash(row, col, dur, color)",
		"filename": "lib/launchpad.k",
		"fileline": 54,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchpad_init",
		"usage": "launchpad_init()",
		"filename": "lib/launchpad.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchpad_off",
		"usage": "launchpad_off(row, col)",
		"filename": "lib/launchpad.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchpad_on",
		"usage": "launchpad_on(row, col, color)",
		"filename": "lib/launchpad.k",
		"fileline": 60,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchpad_realtime",
		"usage": "launchpad_realtime(p)",
		"filename": "lib/launchpad.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchpad_reset",
		"usage": "launchpad_reset()",
		"filename": "lib/launchpad.k",
		"fileline": 48,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "launchrand",
		"usage": "launchrand()",
		"filename": "lib/launchpad.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "layout_horizontal",
		"usage": "layout_horizontal(xyarr, ...)",
		"filename": "lib/layout.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "layout_vertical",
		"usage": "layout_vertical(xyarr, ...)",
		"filename": "lib/layout.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_demo",
		"usage": "lcd_demo()",
		"filename": "lib/lcd.k",
		"fileline": 41,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_demo2",
		"usage": "lcd_demo2()",
		"filename": "lib/lcd.k",
		"fileline": 49,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_flash",
		"usage": "lcd_flash()",
		"filename": "lib/lcd.k",
		"fileline": 69,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_multiline",
		"usage": "lcd_multiline(lcd, msg)",
		"filename": "lib/lcd.k",
		"fileline": 93,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_test",
		"usage": "lcd_test(nlcd)",
		"filename": "lib/lcd.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_test1",
		"usage": "lcd_test1(lcdnum)",
		"filename": "lib/lcd.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcd_write",
		"usage": "lcd_write(n1)",
		"filename": "lib/lcd.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lcm",
		"usage": "lcm(...)",
		"filename": "lib/util2.k",
		"fileline": 294,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "leasttense",
		"usage": "leasttense(p, t)",
		"filename": "lib/var.k",
		"fileline": 60,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "legato",
		"usage": "legato(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 30,
		"desc": """Extends the duration of each note to abutt the start of the next note.
Doesn't modify the duration of the last note.
""",
	},
	{
		"type": "function",
		"name": "lfovalue",
		"usage": "lfovalue(stepnum, nsteps, lfotype, v0, v1)",
		"filename": "lib/wroller.k",
		"fileline": 484,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "limitval",
		"usage": "limitval(v,minv,maxv)",
		"filename": "lib/util2.k",
		"fileline": 339,
		"desc": """Takes a number and limits it to the specified range.
""",
	},
	{
		"type": "function",
		"name": "line2phrase",
		"usage": "line2phrase(line, sz, sz2, stepsize)",
		"filename": "lib/wquix.k",
		"fileline": 291,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "linesout",
		"usage": "linesout(p, fn)",
		"filename": "lib/util1.k",
		"fileline": 1564,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "linux_listen",
		"usage": "linux_listen()",
		"filename": "lib/osc.k",
		"fileline": 153,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "linux_send",
		"usage": "linux_send()",
		"filename": "lib/osc.k",
		"fileline": 146,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "listen",
		"usage": "listen()",
		"filename": "lib/listen.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "listports",
		"usage": "listports()",
		"filename": "lib/util2.k",
		"fileline": 160,
		"desc": """A simple utility that lists the available MIDI ports to the console.
""",
	},
	{
		"type": "function",
		"name": "localpostrc",
		"usage": "localpostrc()",
		"filename": "lib/keylocal.k",
		"fileline": 71,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "localprerc",
		"usage": "localprerc()",
		"filename": "lib/keylocal.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "logit",
		"usage": "logit(s)",
		"filename": "lib/util1.k",
		"fileline": 1597,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookandtranspose",
		"usage": "lookandtranspose(p)",
		"filename": "lib/example6.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookforandopen",
		"usage": "lookforandopen(iotype, port, verbose)",
		"filename": "lib/util2.k",
		"fileline": 221,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookfornote",
		"usage": "lookfornote(p1, n1)",
		"filename": "lib/example1.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookforport",
		"usage": "lookforport(iotype, port)",
		"filename": "lib/util2.k",
		"fileline": 244,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookforstartstopcont",
		"usage": "lookforstartstopcont(p1, p2, p3)",
		"filename": "lib/example4.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lookup",
		"usage": "lookup(arr, val, undef, i)",
		"filename": "lib/util1.k",
		"fileline": 258,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "loophack",
		"usage": "loophack()",
		"filename": "lib/realutil.k",
		"fileline": 189,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "loopsalad",
		"usage": "loopsalad()",
		"filename": "lib/loopsalad.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "loopycam",
		"usage": "loopycam()",
		"filename": "lib/loopycam.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lorenz_wfr",
		"usage": "lorenz_wfr(x, y, z)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1397,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "lowest",
		"usage": "lowest(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 279,
		"desc": """Returns the lowest pitch in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "lowestnt",
		"usage": "lowestnt(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 291,
		"desc": """Returns the lowest-pitched note in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "m_top",
		"usage": "m_top()",
		"filename": "lib/mkmenus.k",
		"fileline": 661,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mailresponse",
		"usage": "mailresponse(line)",
		"filename": "lib/sendmail.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mainhelp",
		"usage": "mainhelp()",
		"filename": "lib/gridinit.k",
		"fileline": 96,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "major",
		"usage": "major(nt)",
		"filename": "lib/demo1.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makeholdernote",
		"usage": "makeholdernote(x0, x1, h)",
		"filename": "lib/util2.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makenote",
		"usage": "makenote(pitch [,duration [,volume [,chan]]] )",
		"filename": "lib/basic1.k",
		"fileline": 372,
		"desc": """A simple utility for generating a single-note phrase.
The pitch is the only required argument; additional
arguments specify the duration, velocity, and channel.
""",
	},
	{
		"type": "function",
		"name": "maker",
		"usage": "maker()",
		"filename": "lib/maker2008.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maker2008",
		"usage": "maker2008()",
		"filename": "lib/maker2008.k",
		"fileline": 24,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makerootevery",
		"usage": "makerootevery(melody,intrvl)",
		"filename": "lib/basic1.k",
		"fileline": 1051,
		"desc": """Figure out a root note (using findroot()) every intrvl beats,
and return it.
""",
	},
	{
		"type": "function",
		"name": "makescale",
		"usage": "makescale(p)",
		"filename": "lib/scales1.k",
		"fileline": 142,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makesim",
		"usage": "makesim(num, type)",
		"filename": "lib/setsim.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makesimpitch",
		"usage": "makesimpitch(num, r, left, rnd, right, nright)",
		"filename": "lib/setsim.k",
		"fileline": 183,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makesimrhythm",
		"usage": "makesimrhythm(num, r, currbeat, ph, left, rnd, right, nright)",
		"filename": "lib/setsim.k",
		"fileline": 207,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "makestoch",
		"usage": "makestoch(cnt)",
		"filename": "lib/stochgen.k",
		"fileline": 44,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maketoolholdername",
		"usage": "maketoolholdername()",
		"filename": "lib/toolholder.k",
		"fileline": 627,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maketoolname",
		"usage": "maketoolname()",
		"filename": "lib/toolholder.k",
		"fileline": 620,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "map_scale",
		"usage": "map_scale(m, ch)",
		"filename": "lib/snipper.k",
		"fileline": 175,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "map_scale_chan2",
		"usage": "map_scale_chan2(m)",
		"filename": "lib/snipper.k",
		"fileline": 162,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "map_scale_chan3",
		"usage": "map_scale_chan3(m)",
		"filename": "lib/snipper.k",
		"fileline": 165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "map_scale_chan4",
		"usage": "map_scale_chan4(m)",
		"filename": "lib/snipper.k",
		"fileline": 168,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "map_scale_chan5",
		"usage": "map_scale_chan5(m)",
		"filename": "lib/snipper.k",
		"fileline": 171,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mapport",
		"usage": "mapport(ip, op)",
		"filename": "lib/util2.k",
		"fileline": 201,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maptoscale",
		"usage": "maptoscale(s, key)",
		"filename": "lib/remapper.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mapwalktask",
		"usage": "mapwalktask(o)",
		"filename": "lib/wmapwalk.k",
		"fileline": 88,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "max_send",
		"usage": "max_send()",
		"filename": "lib/osc.k",
		"fileline": 87,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maxduration",
		"usage": "maxduration(p)",
		"filename": "lib/statfunc.k",
		"fileline": 338,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "maxvolume",
		"usage": "maxvolume(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 342,
		"desc": """Returns the largest volume in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "melodymerge",
		"usage": "melodymerge(starting, target, intervals)",
		"filename": "lib/melodymerge.k",
		"fileline": 16,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "melodymerge_text",
		"usage": "melodymerge_text(starting, target, intervals)",
		"filename": "lib/melodymerge.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_add",
		"usage": "meme_add(m, inst)",
		"filename": "lib/meme.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_eval",
		"usage": "meme_eval(m)",
		"filename": "lib/meme.k",
		"fileline": 138,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_fromphrase",
		"usage": "meme_fromphrase(p)",
		"filename": "lib/meme.k",
		"fileline": 75,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_gen",
		"usage": "meme_gen(ninst)",
		"filename": "lib/meme.k",
		"fileline": 126,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_init",
		"usage": "meme_init()",
		"filename": "lib/meme.k",
		"fileline": 244,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_mate",
		"usage": "meme_mate(m1, m2, mtype)",
		"filename": "lib/meme.k",
		"fileline": 172,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_mate_1",
		"usage": "meme_mate_1(m1, m2)",
		"filename": "lib/meme.k",
		"fileline": 180,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_mate_2",
		"usage": "meme_mate_2(m1, m2)",
		"filename": "lib/meme.k",
		"fileline": 198,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_mate_3",
		"usage": "meme_mate_3(m1, m2)",
		"filename": "lib/meme.k",
		"fileline": 221,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_newmate",
		"usage": "meme_newmate(f, nm)",
		"filename": "lib/meme.k",
		"fileline": 116,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_newop",
		"usage": "meme_newop(f, args)",
		"filename": "lib/meme.k",
		"fileline": 111,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "meme_print",
		"usage": "meme_print(m)",
		"filename": "lib/meme.k",
		"fileline": 155,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mergeonly",
		"usage": "mergeonly(ch)",
		"filename": "lib/realutil.k",
		"fileline": 240,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mergeonoff",
		"usage": "mergeonoff(p)",
		"filename": "lib/basic2.k",
		"fileline": 668,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "methodbroadcast",
		"usage": "methodbroadcast(...)",
		"filename": "lib/util1.k",
		"fileline": 739,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "methodforward2first",
		"usage": "methodforward2first(...)",
		"filename": "lib/util1.k",
		"fileline": 730,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midiloop",
		"usage": "midiloop()",
		"filename": "lib/loops.k",
		"fileline": 318,
		"desc": """This is intended to be the one-and-only task which reads messages
from the Midiinfifo, a special fifo that is opened whenever KeyKit
is rebooted, and to which KeyKit sends messages containing
all MIDI input.  Any task wanting to read MIDI input should add
an entry to the Midiin array.  The index of the Midiin array
is normally the task id, and the value of the array element
is the fifo id.
""",
	},
	{
		"type": "function",
		"name": "midimon",
		"usage": "midimon(verbose)",
		"filename": "lib/midimon.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midirouter",
		"usage": "midirouter()",
		"filename": "lib/midirouter.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midirouter_cleanup",
		"usage": "midirouter_cleanup()",
		"filename": "lib/midirouter.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "milliclicks",
		"usage": "milliclicks(milli)",
		"filename": "lib/util1.k",
		"fileline": 899,
		"desc": """Returns the number of clicks equivalent to the specified
number of milliseconds.  Note that this is dependent upon
the current tempo().
""",
	},
	{
		"type": "function",
		"name": "millisince",
		"usage": "millisince(tm)",
		"filename": "lib/util1.k",
		"fileline": 915,
		"desc": """Returns the number of milliseconds since a given time
""",
	},
	{
		"type": "function",
		"name": "millisleep",
		"usage": "millisleep(milli)",
		"filename": "lib/util1.k",
		"fileline": 254,
		"desc": """Sleep (i.e. pause the task which calls this function)
for the specified number of milliseconds.
""",
	},
	{
		"type": "function",
		"name": "minduration",
		"usage": "minduration(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 357,
		"desc": """Returns the smallest duration in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "minvolume",
		"usage": "minvolume(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 327,
		"desc": """Returns the lowest volume in the specified phrase.
""",
	},
	{
		"type": "function",
		"name": "mix26",
		"usage": "mix26()",
		"filename": "lib/typo.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mix26b",
		"usage": "mix26b()",
		"filename": "lib/typob.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_dur",
		"usage": "mkmenu_ab_dur(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 232,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_dur_above",
		"usage": "mkmenu_ab_dur_above(o, po, d)",
		"filename": "lib/statfunc.k",
		"fileline": 238,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_dur_below",
		"usage": "mkmenu_ab_dur_below(o, po, d)",
		"filename": "lib/statfunc.k",
		"fileline": 251,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_intervals",
		"usage": "mkmenu_ab_intervals(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 194,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches",
		"usage": "mkmenu_ab_pitches(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 132,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_intervals_above",
		"usage": "mkmenu_ab_pitches_intervals_above(o, po, ni)",
		"filename": "lib/statfunc.k",
		"fileline": 200,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_intervals_below",
		"usage": "mkmenu_ab_pitches_intervals_below(o, po, ni)",
		"filename": "lib/statfunc.k",
		"fileline": 215,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_note_above",
		"usage": "mkmenu_ab_pitches_note_above(o, po, ntstr)",
		"filename": "lib/statfunc.k",
		"fileline": 138,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_note_below",
		"usage": "mkmenu_ab_pitches_note_below(o, po, ntstr)",
		"filename": "lib/statfunc.k",
		"fileline": 165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_octave_above",
		"usage": "mkmenu_ab_pitches_octave_above(o, po, ntstr, octstr)",
		"filename": "lib/statfunc.k",
		"fileline": 153,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_pitches_octave_below",
		"usage": "mkmenu_ab_pitches_octave_below(o, po, ntstr, octstr)",
		"filename": "lib/statfunc.k",
		"fileline": 180,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_vel",
		"usage": "mkmenu_ab_vel(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 266,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_vel_above",
		"usage": "mkmenu_ab_vel_above(o, po, v)",
		"filename": "lib/statfunc.k",
		"fileline": 272,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ab_vel_below",
		"usage": "mkmenu_ab_vel_below(o, po, v)",
		"filename": "lib/statfunc.k",
		"fileline": 284,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_above_below",
		"usage": "mkmenu_above_below(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 125,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_addroot",
		"usage": "mkmenu_addroot(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 362,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_appdur",
		"usage": "mkmenu_appdur(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 287,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_apply",
		"usage": "mkmenu_apply(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 346,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_apply_attr",
		"usage": "mkmenu_apply_attr(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 264,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_applyread",
		"usage": "mkmenu_applyread(o, po, n)",
		"filename": "lib/wapply.k",
		"fileline": 259,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_apppitch",
		"usage": "mkmenu_apppitch(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 282,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_apptime",
		"usage": "mkmenu_apptime(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 292,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_appvel",
		"usage": "mkmenu_appvel(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 297,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_arrange",
		"usage": "mkmenu_arrange(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 619,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_autoapply",
		"usage": "mkmenu_autoapply(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 794,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_autodur",
		"usage": "mkmenu_autodur(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 769,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_autolength",
		"usage": "mkmenu_autolength(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 778,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_autosnarf",
		"usage": "mkmenu_autosnarf(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 724,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_autostep",
		"usage": "mkmenu_autostep(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 760,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_average",
		"usage": "mkmenu_average(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 356,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bang",
		"usage": "mkmenu_bang(o, po)",
		"filename": "lib/wbang.k",
		"fileline": 190,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_blocks1",
		"usage": "mkmenu_blocks1(o, po)",
		"filename": "lib/wblocks.k",
		"fileline": 282,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_blocks3",
		"usage": "mkmenu_blocks3(o, po)",
		"filename": "lib/wblocks.k",
		"fileline": 293,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_blocks4",
		"usage": "mkmenu_blocks4(o, po)",
		"filename": "lib/wblocks.k",
		"fileline": 299,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bmxnum",
		"usage": "mkmenu_bmxnum(o, po)",
		"filename": "lib/wboomix.k",
		"fileline": 353,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bmxsweepspeed",
		"usage": "mkmenu_bmxsweepspeed(o, po)",
		"filename": "lib/wboomix.k",
		"fileline": 357,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_board1",
		"usage": "mkmenu_board1(o, po)",
		"filename": "lib/wboard.k",
		"fileline": 246,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_boardcell",
		"usage": "mkmenu_boardcell(o, po, n, row)",
		"filename": "lib/wboard.k",
		"fileline": 251,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_boomix1",
		"usage": "mkmenu_boomix1(o, po)",
		"filename": "lib/wboomix.k",
		"fileline": 307,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bs",
		"usage": "mkmenu_bs(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 342,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bsguideinput",
		"usage": "mkmenu_bsguideinput(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 758,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bskeyguide",
		"usage": "mkmenu_bskeyguide(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 752,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bskeynote",
		"usage": "mkmenu_bskeynote(o, po, ntstr)",
		"filename": "lib/wwwtools.k",
		"fileline": 727,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bskeyoctave",
		"usage": "mkmenu_bskeyoctave(o, po, ntstr, octstr)",
		"filename": "lib/wwwtools.k",
		"fileline": 741,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_bswww",
		"usage": "mkmenu_bswww(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 721,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_burn",
		"usage": "mkmenu_burn(o, po)",
		"filename": "lib/wburn.k",
		"fileline": 1291,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttappend",
		"usage": "mkmenu_buttappend(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 37,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttaud",
		"usage": "mkmenu_buttaud(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 48,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttdrag",
		"usage": "mkmenu_buttdrag(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttinsert",
		"usage": "mkmenu_buttinsert(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 32,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttpaste",
		"usage": "mkmenu_buttpaste(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 27,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_buttpick",
		"usage": "mkmenu_buttpick(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 54,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascade1",
		"usage": "mkmenu_cascade1(o, po)",
		"filename": "lib/wcascade.k",
		"fileline": 614,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascade2",
		"usage": "mkmenu_cascade2(o, po)",
		"filename": "lib/wcascade.k",
		"fileline": 575,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadefunc",
		"usage": "mkmenu_cascadefunc(o, po, fill)",
		"filename": "lib/wcascade.k",
		"fileline": 630,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadeload",
		"usage": "mkmenu_cascadeload(o, po)",
		"filename": "lib/wcascade.k",
		"fileline": 626,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadepauserepeat",
		"usage": "mkmenu_cascadepauserepeat(o, po, meth)",
		"filename": "lib/wcascade.k",
		"fileline": 593,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadeqvals",
		"usage": "mkmenu_cascadeqvals(o, po, meth)",
		"filename": "lib/wcascade.k",
		"fileline": 580,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascaderepeat",
		"usage": "mkmenu_cascaderepeat(o, po, meth)",
		"filename": "lib/wcascade.k",
		"fileline": 587,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadescale",
		"usage": "mkmenu_cascadescale(o, po)",
		"filename": "lib/wcascade.k",
		"fileline": 646,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_cascadesize",
		"usage": "mkmenu_cascadesize(o, po)",
		"filename": "lib/wcascade.k",
		"fileline": 606,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_checkquant",
		"usage": "mkmenu_checkquant(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 786,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chordize",
		"usage": "mkmenu_chordize(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chordize2",
		"usage": "mkmenu_chordize2(o, po, nt)",
		"filename": "lib/mkmenus.k",
		"fileline": 145,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chpal1",
		"usage": "mkmenu_chpal1(o, ...)",
		"filename": "lib/wchord.k",
		"fileline": 182,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chpalchan",
		"usage": "mkmenu_chpalchan(o, po)",
		"filename": "lib/wchord.k",
		"fileline": 208,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chpalchords",
		"usage": "mkmenu_chpalchords(o, po)",
		"filename": "lib/wchord.k",
		"fileline": 189,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chpalmode",
		"usage": "mkmenu_chpalmode(o, po)",
		"filename": "lib/wchord.k",
		"fileline": 197,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_chpaloct",
		"usage": "mkmenu_chpaloct(o, po)",
		"filename": "lib/wchord.k",
		"fileline": 204,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_console",
		"usage": "mkmenu_console(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_control1",
		"usage": "mkmenu_control1(o, po)",
		"filename": "lib/wcontrol.k",
		"fileline": 109,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_curvedensity",
		"usage": "mkmenu_curvedensity(o, po)",
		"filename": "lib/wcurve.k",
		"fileline": 269,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_curvemore",
		"usage": "mkmenu_curvemore(o, po)",
		"filename": "lib/wcurve.k",
		"fileline": 256,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_curvetype",
		"usage": "mkmenu_curvetype(o, po)",
		"filename": "lib/wcurve.k",
		"fileline": 261,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_debug",
		"usage": "mkmenu_debug(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 59,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_dedup",
		"usage": "mkmenu_dedup(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 127,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_demo",
		"usage": "mkmenu_demo(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 654,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_draw",
		"usage": "mkmenu_draw(o, po, meth, bn, ...)",
		"filename": "lib/kmsbutt.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_drums",
		"usage": "mkmenu_drums(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 729,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_durations_minmax",
		"usage": "mkmenu_durations_minmax(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_durintervals_minmax",
		"usage": "mkmenu_durintervals_minmax(o, po, param_i)",
		"filename": "lib/statfunc.k",
		"fileline": 54,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_durvalues_minmax",
		"usage": "mkmenu_durvalues_minmax(o, po, param)",
		"filename": "lib/statfunc.k",
		"fileline": 47,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_echo",
		"usage": "mkmenu_echo(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 53,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_echoedit",
		"usage": "mkmenu_echoedit(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 111,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_echovals",
		"usage": "mkmenu_echovals(o, po, n, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 479,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_edit",
		"usage": "mkmenu_edit(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 149,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_epchan",
		"usage": "mkmenu_epchan(o, po, cmdstr)",
		"filename": "lib/mkmenus.k",
		"fileline": 282,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_evolve",
		"usage": "mkmenu_evolve(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 87,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_expand",
		"usage": "mkmenu_expand(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 93,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_expand2",
		"usage": "mkmenu_expand2(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 100,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_expresso1",
		"usage": "mkmenu_expresso1(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 817,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_expressoqvals",
		"usage": "mkmenu_expressoqvals(o, po, meth)",
		"filename": "lib/wexpresso.k",
		"fileline": 752,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_fade",
		"usage": "mkmenu_fade(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 240,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_faden",
		"usage": "mkmenu_faden(o, po, dir)",
		"filename": "lib/mkmenus.k",
		"fileline": 244,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_file",
		"usage": "mkmenu_file(o, po)",
		"filename": "lib/smmutils.k",
		"fileline": 230,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_foreback",
		"usage": "mkmenu_foreback(o, po, dir)",
		"filename": "lib/mkmenus.k",
		"fileline": 332,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepool1",
		"usage": "mkmenu_genepool1(o, po)",
		"filename": "lib/wgene.k",
		"fileline": 754,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepool2",
		"usage": "mkmenu_genepool2(o, po)",
		"filename": "lib/wgene.k",
		"fileline": 710,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepoolfunc",
		"usage": "mkmenu_genepoolfunc(o, po)",
		"filename": "lib/wgene.k",
		"fileline": 769,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepoolpauserepeat",
		"usage": "mkmenu_genepoolpauserepeat(o, po, meth)",
		"filename": "lib/wgene.k",
		"fileline": 733,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepoolqvals",
		"usage": "mkmenu_genepoolqvals(o, po, meth)",
		"filename": "lib/wgene.k",
		"fileline": 715,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepoolrepeat",
		"usage": "mkmenu_genepoolrepeat(o, po, meth)",
		"filename": "lib/wgene.k",
		"fileline": 727,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_genepoolsize",
		"usage": "mkmenu_genepoolsize(o, po)",
		"filename": "lib/wgene.k",
		"fileline": 746,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_generate",
		"usage": "mkmenu_generate(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 696,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gesture1",
		"usage": "mkmenu_gesture1(o, po)",
		"filename": "lib/wgesture.k",
		"fileline": 431,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gesturepreview",
		"usage": "mkmenu_gesturepreview(o, po)",
		"filename": "lib/wgesture.k",
		"fileline": 417,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gesturesize",
		"usage": "mkmenu_gesturesize(o, po)",
		"filename": "lib/wgesture.k",
		"fileline": 425,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gesturetype",
		"usage": "mkmenu_gesturetype(o, po)",
		"filename": "lib/wgesture.k",
		"fileline": 421,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_getword",
		"usage": "mkmenu_getword(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 717,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ginsu",
		"usage": "mkmenu_ginsu(o, po)",
		"filename": "lib/wginsu.k",
		"fileline": 283,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ginsu1",
		"usage": "mkmenu_ginsu1(o, po)",
		"filename": "lib/wginsu.k",
		"fileline": 278,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbag1",
		"usage": "mkmenu_grabbag1(o, po)",
		"filename": "lib/wgrabbag.k",
		"fileline": 861,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbag2",
		"usage": "mkmenu_grabbag2(o, po)",
		"filename": "lib/wgrabbag.k",
		"fileline": 803,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagfunc",
		"usage": "mkmenu_grabbagfunc(o, po, fill)",
		"filename": "lib/wgrabbag.k",
		"fileline": 877,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagload",
		"usage": "mkmenu_grabbagload(o, po)",
		"filename": "lib/wgrabbag.k",
		"fileline": 873,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagpauserepeat",
		"usage": "mkmenu_grabbagpauserepeat(o, po, meth)",
		"filename": "lib/wgrabbag.k",
		"fileline": 840,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagqvals",
		"usage": "mkmenu_grabbagqvals(o, po, meth)",
		"filename": "lib/wgrabbag.k",
		"fileline": 808,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagrepeat",
		"usage": "mkmenu_grabbagrepeat(o, po, meth)",
		"filename": "lib/wgrabbag.k",
		"fileline": 834,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagscale",
		"usage": "mkmenu_grabbagscale(o, po)",
		"filename": "lib/wgrabbag.k",
		"fileline": 893,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagsize",
		"usage": "mkmenu_grabbagsize(o, po)",
		"filename": "lib/wgrabbag.k",
		"fileline": 853,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grabbagstartvals",
		"usage": "mkmenu_grabbagstartvals(o, po, meth)",
		"filename": "lib/wgrabbag.k",
		"fileline": 820,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gradual",
		"usage": "mkmenu_gradual(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 273,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_gridder1",
		"usage": "mkmenu_gridder1(o, po)",
		"filename": "lib/wloopy.k",
		"fileline": 350,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grind1",
		"usage": "mkmenu_grind1(o, po)",
		"filename": "lib/wgrind.k",
		"fileline": 2007,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grindleng",
		"usage": "mkmenu_grindleng(o, po)",
		"filename": "lib/wgrind.k",
		"fileline": 2017,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_grindnum",
		"usage": "mkmenu_grindnum(o, po)",
		"filename": "lib/wgrind.k",
		"fileline": 2027,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_group1",
		"usage": "mkmenu_group1(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_groupview",
		"usage": "mkmenu_groupview(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 286,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_holder",
		"usage": "mkmenu_holder(o, po)",
		"filename": "lib/toolholder.k",
		"fileline": 596,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_holdertype",
		"usage": "mkmenu_holdertype(o, po)",
		"filename": "lib/toolholder.k",
		"fileline": 606,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_hoops1",
		"usage": "mkmenu_hoops1(o, po)",
		"filename": "lib/whoops.k",
		"fileline": 332,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_hoops2",
		"usage": "mkmenu_hoops2(o, po)",
		"filename": "lib/whoops2.k",
		"fileline": 407,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_info",
		"usage": "mkmenu_info(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 277,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_invertii",
		"usage": "mkmenu_invertii(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 201,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_1",
		"usage": "mkmenu_joyballs_1(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1891,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_gridsize",
		"usage": "mkmenu_joyballs_gridsize(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1938,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_joynum",
		"usage": "mkmenu_joyballs_joynum(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1959,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_key",
		"usage": "mkmenu_joyballs_key(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1913,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_moving",
		"usage": "mkmenu_joyballs_moving(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1943,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_playquant",
		"usage": "mkmenu_joyballs_playquant(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1963,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_randwalls",
		"usage": "mkmenu_joyballs_randwalls(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1908,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_scale",
		"usage": "mkmenu_joyballs_scale(o, po, k)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1927,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_joyballs_size",
		"usage": "mkmenu_joyballs_size(o, po)",
		"filename": "lib/wjoyballs.k",
		"fileline": 1951,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kbkonnect",
		"usage": "mkmenu_kbkonnect(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1119,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom1",
		"usage": "mkmenu_kboom1(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1098,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom2",
		"usage": "mkmenu_kboom2(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1211,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom2layout",
		"usage": "mkmenu_kboom2layout(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1216,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom3",
		"usage": "mkmenu_kboom3(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1193,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom4",
		"usage": "mkmenu_kboom4(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1198,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboom5",
		"usage": "mkmenu_kboom5(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1204,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomload",
		"usage": "mkmenu_kboomload(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomquant",
		"usage": "mkmenu_kboomquant(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomread",
		"usage": "mkmenu_kboomread(o, po, reset)",
		"filename": "lib/wkboom.k",
		"fileline": 1170,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomreadpt",
		"usage": "mkmenu_kboomreadpt(o, po, pt, reset)",
		"filename": "lib/wkboom.k",
		"fileline": 1177,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomstartquant",
		"usage": "mkmenu_kboomstartquant(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1143,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomstepsize",
		"usage": "mkmenu_kboomstepsize(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1126,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kboomtrans",
		"usage": "mkmenu_kboomtrans(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1187,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kbrand",
		"usage": "mkmenu_kbrand(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1158,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kbshift",
		"usage": "mkmenu_kbshift(o, po)",
		"filename": "lib/wkboom.k",
		"fileline": 1152,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_kbtype",
		"usage": "mkmenu_kbtype(o, po)",
		"filename": "lib/wboomix.k",
		"fileline": 349,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_konnectdebug",
		"usage": "mkmenu_konnectdebug(o, po)",
		"filename": "lib/wkonnect.k",
		"fileline": 770,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_konnectmore",
		"usage": "mkmenu_konnectmore(o, po)",
		"filename": "lib/wkonnect.k",
		"fileline": 758,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_konnectmouse",
		"usage": "mkmenu_konnectmouse(o, po)",
		"filename": "lib/wkonnect.k",
		"fileline": 781,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_life1",
		"usage": "mkmenu_life1(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1271,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifecolor",
		"usage": "mkmenu_lifecolor(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1233,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifeerase",
		"usage": "mkmenu_lifeerase(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1218,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifekey",
		"usage": "mkmenu_lifekey(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1293,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifeletter",
		"usage": "mkmenu_lifeletter(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1239,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifelimit",
		"usage": "mkmenu_lifelimit(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1249,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifepreview",
		"usage": "mkmenu_lifepreview(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1214,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifescale",
		"usage": "mkmenu_lifescale(o, po, k)",
		"filename": "lib/wlife.k",
		"fileline": 1307,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifesize",
		"usage": "mkmenu_lifesize(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1226,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifespeed",
		"usage": "mkmenu_lifespeed(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1253,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_lifetype",
		"usage": "mkmenu_lifetype(o, po)",
		"filename": "lib/wlife.k",
		"fileline": 1222,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_listentokey",
		"usage": "mkmenu_listentokey(o, po)",
		"filename": "lib/wriff.k",
		"fileline": 219,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_load",
		"usage": "mkmenu_load(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 84,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_loadgen",
		"usage": "mkmenu_loadgen(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 803,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_loadgrab",
		"usage": "mkmenu_loadgrab(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 810,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_loadtarget",
		"usage": "mkmenu_loadtarget(o, po)",
		"filename": "lib/wapply.k",
		"fileline": 275,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_make",
		"usage": "mkmenu_make(o, po)",
		"filename": "lib/smmutils.k",
		"fileline": 236,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mark1",
		"usage": "mkmenu_mark1(o, po)",
		"filename": "lib/wmark.k",
		"fileline": 132,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mark2",
		"usage": "mkmenu_mark2(o, po)",
		"filename": "lib/wmark.k",
		"fileline": 160,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mark3",
		"usage": "mkmenu_mark3(o, po)",
		"filename": "lib/wmark.k",
		"fileline": 165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_markread",
		"usage": "mkmenu_markread(o, po)",
		"filename": "lib/wmark.k",
		"fileline": 155,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_markset",
		"usage": "mkmenu_markset(o, po)",
		"filename": "lib/wmark.k",
		"fileline": 138,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_markset2",
		"usage": "mkmenu_markset2(o, po, win)",
		"filename": "lib/wmark.k",
		"fileline": 146,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_match1",
		"usage": "mkmenu_match1(o, po)",
		"filename": "lib/wmatch.k",
		"fileline": 89,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_match_limit",
		"usage": "mkmenu_match_limit(o, po)",
		"filename": "lib/wmatch.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_misc",
		"usage": "mkmenu_misc(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mm",
		"usage": "mkmenu_mm(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_monitor1",
		"usage": "mkmenu_monitor1(o, po)",
		"filename": "lib/wmonitor.k",
		"fileline": 159,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_monitor_limit",
		"usage": "mkmenu_monitor_limit(o, po)",
		"filename": "lib/wmonitor.k",
		"fileline": 150,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mono",
		"usage": "mkmenu_mono(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 248,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_most",
		"usage": "mkmenu_most(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 314,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_most_dur",
		"usage": "mkmenu_most_dur(o, po, param1)",
		"filename": "lib/statfunc.k",
		"fileline": 330,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_most_intervals",
		"usage": "mkmenu_most_intervals(o, po, param1)",
		"filename": "lib/statfunc.k",
		"fileline": 325,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_most_notes",
		"usage": "mkmenu_most_notes(o, po, param1)",
		"filename": "lib/statfunc.k",
		"fileline": 320,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mouse",
		"usage": "mkmenu_mouse(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 631,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mousey1",
		"usage": "mkmenu_mousey1(o, po)",
		"filename": "lib/wmousey.k",
		"fileline": 266,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mouseychan",
		"usage": "mkmenu_mouseychan(o, po)",
		"filename": "lib/wmousey.k",
		"fileline": 272,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mouseyscale",
		"usage": "mkmenu_mouseyscale(o, po)",
		"filename": "lib/wmousey.k",
		"fileline": 277,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_mouseysize",
		"usage": "mkmenu_mouseysize(o, po)",
		"filename": "lib/wmousey.k",
		"fileline": 288,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_muse1",
		"usage": "mkmenu_muse1(o, po)",
		"filename": "lib/wmuse.k",
		"fileline": 152,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_muse2",
		"usage": "mkmenu_muse2(o, po)",
		"filename": "lib/wmuse.k",
		"fileline": 179,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_muse3",
		"usage": "mkmenu_muse3(o, po)",
		"filename": "lib/wmuse.k",
		"fileline": 184,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_museread",
		"usage": "mkmenu_museread(o, po)",
		"filename": "lib/wmuse.k",
		"fileline": 174,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_museset",
		"usage": "mkmenu_museset(o, po)",
		"filename": "lib/wmuse.k",
		"fileline": 157,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_museset2",
		"usage": "mkmenu_museset2(o, po, win)",
		"filename": "lib/wmuse.k",
		"fileline": 165,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_nearbeat",
		"usage": "mkmenu_nearbeat(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2879,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_nearbeat2",
		"usage": "mkmenu_nearbeat2(o, po, cmd, tm1)",
		"filename": "lib/wgroup.k",
		"fileline": 2887,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_newtrack",
		"usage": "mkmenu_newtrack(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_noise",
		"usage": "mkmenu_noise(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 210,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_noise2",
		"usage": "mkmenu_noise2(o, po, t)",
		"filename": "lib/mkmenus.k",
		"fileline": 215,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_noise3",
		"usage": "mkmenu_noise3(o, po, ntype, type)",
		"filename": "lib/mkmenus.k",
		"fileline": 223,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_noise4",
		"usage": "mkmenu_noise4(o, po, ntype, type)",
		"filename": "lib/mkmenus.k",
		"fileline": 230,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_notes_pint",
		"usage": "mkmenu_notes_pint(o, po, param_pc)",
		"filename": "lib/statfunc.k",
		"fileline": 116,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_onbeat",
		"usage": "mkmenu_onbeat(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2898,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ondur",
		"usage": "mkmenu_ondur(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2856,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ondur2",
		"usage": "mkmenu_ondur2(o, po, cmd, dir)",
		"filename": "lib/wgroup.k",
		"fileline": 2868,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_onevery",
		"usage": "mkmenu_onevery(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2851,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_onrand",
		"usage": "mkmenu_onrand(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2846,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_onvol",
		"usage": "mkmenu_onvol(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2862,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ornament",
		"usage": "mkmenu_ornament(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 205,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ornament1",
		"usage": "mkmenu_ornament1(o, po)",
		"filename": "lib/procs.k",
		"fileline": 360,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_page",
		"usage": "mkmenu_page(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 515,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_party1",
		"usage": "mkmenu_party1(o, po)",
		"filename": "lib/wparty.k",
		"fileline": 272,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_party3",
		"usage": "mkmenu_party3(o, po)",
		"filename": "lib/wparty.k",
		"fileline": 278,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_percent",
		"usage": "mkmenu_percent(o, po, param_pc)",
		"filename": "lib/statfunc.k",
		"fileline": 110,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pi1",
		"usage": "mkmenu_pi1(o, po)",
		"filename": "lib/wpi.k",
		"fileline": 699,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pickleave",
		"usage": "mkmenu_pickleave(o, po)",
		"filename": "lib/wgroup.k",
		"fileline": 2808,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pickremove",
		"usage": "mkmenu_pickremove(o, po)",
		"filename": "lib/wgroup.k",
		"fileline": 2819,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pict1",
		"usage": "mkmenu_pict1(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 313,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictfilter",
		"usage": "mkmenu_pictfilter(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 370,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictkey",
		"usage": "mkmenu_pictkey(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 324,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictline",
		"usage": "mkmenu_pictline(o, po)",
		"filename": "lib/wpictthis.k",
		"fileline": 1063,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictlinescale",
		"usage": "mkmenu_pictlinescale(o, po)",
		"filename": "lib/wpictthis.k",
		"fileline": 1057,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictnsteps",
		"usage": "mkmenu_pictnsteps(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 356,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictonly",
		"usage": "mkmenu_pictonly(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 364,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictscale",
		"usage": "mkmenu_pictscale(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 338,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictshow",
		"usage": "mkmenu_pictshow(o, po)",
		"filename": "lib/wpictthis.k",
		"fileline": 1052,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictstepsize",
		"usage": "mkmenu_pictstepsize(o, po)",
		"filename": "lib/wpict.k",
		"fileline": 349,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pictthis1",
		"usage": "mkmenu_pictthis1(o, po)",
		"filename": "lib/wpictthis.k",
		"fileline": 1069,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pitches_minmax",
		"usage": "mkmenu_pitches_minmax(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pitchintervals_minmax",
		"usage": "mkmenu_pitchintervals_minmax(o, po, param_i)",
		"filename": "lib/statfunc.k",
		"fileline": 37,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pitchvalues_minmax",
		"usage": "mkmenu_pitchvalues_minmax(o, po, param)",
		"filename": "lib/statfunc.k",
		"fileline": 30,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_pktype",
		"usage": "mkmenu_pktype(o, po, cmd)",
		"filename": "lib/wgroup.k",
		"fileline": 2830,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_preecho",
		"usage": "mkmenu_preecho(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 123,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_ptool_ornament",
		"usage": "mkmenu_ptool_ornament(o, po)",
		"filename": "lib/procs.k",
		"fileline": 365,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_quantize",
		"usage": "mkmenu_quantize(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 432,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_quixbounce",
		"usage": "mkmenu_quixbounce(o, po, meth)",
		"filename": "lib/wquix.k",
		"fileline": 330,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_quixleng",
		"usage": "mkmenu_quixleng(o, po, meth)",
		"filename": "lib/wquix.k",
		"fileline": 342,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_quixqvals",
		"usage": "mkmenu_quixqvals(o, po, meth)",
		"filename": "lib/wquix.k",
		"fileline": 334,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_randpatches",
		"usage": "mkmenu_randpatches(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 747,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_raw2phrase_size",
		"usage": "mkmenu_raw2phrase_size(o, po)",
		"filename": "lib/draw2phrase.k",
		"fileline": 369,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_read",
		"usage": "mkmenu_read(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 30,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_repeat",
		"usage": "mkmenu_repeat(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 375,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_replace",
		"usage": "mkmenu_replace(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 368,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_repquant",
		"usage": "mkmenu_repquant(o, po, n)",
		"filename": "lib/mkmenus.k",
		"fileline": 379,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_resize",
		"usage": "mkmenu_resize(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 627,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_reverse",
		"usage": "mkmenu_reverse(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 408,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_reworkphrase",
		"usage": "mkmenu_reworkphrase(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 703,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riff1",
		"usage": "mkmenu_riff1(o, po)",
		"filename": "lib/wriff.k",
		"fileline": 232,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riff2",
		"usage": "mkmenu_riff2(o, po)",
		"filename": "lib/wriff.k",
		"fileline": 215,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffnames_add",
		"usage": "mkmenu_riffnames_add(o, po, addit)",
		"filename": "lib/wriffnames.k",
		"fileline": 328,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffnames_fill",
		"usage": "mkmenu_riffnames_fill(o, po)",
		"filename": "lib/wriffnames.k",
		"fileline": 334,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffnames_listentokey",
		"usage": "mkmenu_riffnames_listentokey(o, po)",
		"filename": "lib/wriffnames.k",
		"fileline": 316,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffnames_more",
		"usage": "mkmenu_riffnames_more(o, po)",
		"filename": "lib/wriffnames.k",
		"fileline": 340,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffnamesqvals",
		"usage": "mkmenu_riffnamesqvals(o, po, meth)",
		"filename": "lib/wriffnames.k",
		"fileline": 321,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffqvals",
		"usage": "mkmenu_riffqvals(o, po, meth)",
		"filename": "lib/wriff.k",
		"fileline": 224,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_riffraf1",
		"usage": "mkmenu_riffraf1(o, po)",
		"filename": "lib/wriffraf.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_roller1",
		"usage": "mkmenu_roller1(o, po)",
		"filename": "lib/wroller.k",
		"fileline": 471,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_roller5",
		"usage": "mkmenu_roller5(o, po)",
		"filename": "lib/wroller.k",
		"fileline": 477,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_root",
		"usage": "mkmenu_root(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 488,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_rrsub",
		"usage": "mkmenu_rrsub(o, po, rn)",
		"filename": "lib/wriffraf.k",
		"fileline": 61,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_save",
		"usage": "mkmenu_save(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 89,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_save_build",
		"usage": "mkmenu_save_build(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 102,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_save_modify",
		"usage": "mkmenu_save_modify(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 97,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sca",
		"usage": "mkmenu_sca(o, po, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 307,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sca2",
		"usage": "mkmenu_sca2(o, po, nt, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 323,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_scale",
		"usage": "mkmenu_scale(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 447,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_scaleit",
		"usage": "mkmenu_scaleit(o, po, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 453,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_scalem",
		"usage": "mkmenu_scalem(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 734,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sect1",
		"usage": "mkmenu_sect1(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 305,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sect2",
		"usage": "mkmenu_sect2(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 264,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sect3",
		"usage": "mkmenu_sect3(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 268,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_sectscales",
		"usage": "mkmenu_sectscales(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 291,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_selectphrase1",
		"usage": "mkmenu_selectphrase1(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 707,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_selectphrase2",
		"usage": "mkmenu_selectphrase2(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 712,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_set",
		"usage": "mkmenu_set(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 390,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_setchan",
		"usage": "mkmenu_setchan(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 396,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_setstep",
		"usage": "mkmenu_setstep(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 300,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_setstrip",
		"usage": "mkmenu_setstrip(o, po)",
		"filename": "lib/wsect.k",
		"fileline": 296,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_settool",
		"usage": "mkmenu_settool(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 504,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_setvol",
		"usage": "mkmenu_setvol(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 400,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_shift",
		"usage": "mkmenu_shift(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 303,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_show",
		"usage": "mkmenu_show(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 38,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_spreadedit",
		"usage": "mkmenu_spreadedit(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 119,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_stut2",
		"usage": "mkmenu_stut2(o, po, num)",
		"filename": "lib/mkmenus.k",
		"fileline": 417,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_stutter",
		"usage": "mkmenu_stutter(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 412,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_switch",
		"usage": "mkmenu_switch(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 525,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_techno1",
		"usage": "mkmenu_techno1(o, po)",
		"filename": "lib/wtechno.k",
		"fileline": 355,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_techno3",
		"usage": "mkmenu_techno3(o, po)",
		"filename": "lib/wtechno.k",
		"fileline": 366,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_techno4",
		"usage": "mkmenu_techno4(o, po)",
		"filename": "lib/wtechno.k",
		"fileline": 372,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoB_1",
		"usage": "mkmenu_technoB_1(o, po)",
		"filename": "lib/wtechno2.k",
		"fileline": 325,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoB_3",
		"usage": "mkmenu_technoB_3(o, po)",
		"filename": "lib/wtechno2.k",
		"fileline": 336,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoB_4",
		"usage": "mkmenu_technoB_4(o, po)",
		"filename": "lib/wtechno2.k",
		"fileline": 342,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoC_1",
		"usage": "mkmenu_technoC_1(o, po)",
		"filename": "lib/wtechno3.k",
		"fileline": 414,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoC_3",
		"usage": "mkmenu_technoC_3(o, po)",
		"filename": "lib/wtechno3.k",
		"fileline": 425,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_technoC_4",
		"usage": "mkmenu_technoC_4(o, po)",
		"filename": "lib/wtechno3.k",
		"fileline": 431,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_tempo",
		"usage": "mkmenu_tempo(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 50,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_timeintervals_minmax",
		"usage": "mkmenu_timeintervals_minmax(o, po, param_i)",
		"filename": "lib/statfunc.k",
		"fileline": 64,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_timevals",
		"usage": "mkmenu_timevals(o, po, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 437,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_timevals2",
		"usage": "mkmenu_timevals2(o, po, cmd)",
		"filename": "lib/mkmenus.k",
		"fileline": 465,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_toolbroadcast",
		"usage": "mkmenu_toolbroadcast(o, po)",
		"filename": "lib/wkonnect.k",
		"fileline": 776,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_tools",
		"usage": "mkmenu_tools(o, i)",
		"filename": "lib/mkmenus.k",
		"fileline": 611,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_tracktools",
		"usage": "mkmenu_tracktools(o, wt, tn)",
		"filename": "lib/mkmenus.k",
		"fileline": 500,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trails1",
		"usage": "mkmenu_trails1(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 507,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trailspreview",
		"usage": "mkmenu_trailspreview(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 483,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trailsread",
		"usage": "mkmenu_trailsread(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 502,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trailssegsize",
		"usage": "mkmenu_trailssegsize(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 496,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trailssize",
		"usage": "mkmenu_trailssize(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 491,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trailstype",
		"usage": "mkmenu_trailstype(o, po)",
		"filename": "lib/wtrails.k",
		"fileline": 487,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_transpose",
		"usage": "mkmenu_transpose(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 253,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_transposeit",
		"usage": "mkmenu_transposeit(o, po, d)",
		"filename": "lib/mkmenus.k",
		"fileline": 259,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trapped1",
		"usage": "mkmenu_trapped1(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 667,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedchan",
		"usage": "mkmenu_trappedchan(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 677,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedgridsize",
		"usage": "mkmenu_trappedgridsize(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 713,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedincfactor",
		"usage": "mkmenu_trappedincfactor(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 707,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedkey",
		"usage": "mkmenu_trappedkey(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 682,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedmoving",
		"usage": "mkmenu_trappedmoving(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 718,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedplayquant",
		"usage": "mkmenu_trappedplayquant(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 736,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedscale",
		"usage": "mkmenu_trappedscale(o, po, k)",
		"filename": "lib/wtrapped.k",
		"fileline": 696,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trappedsize",
		"usage": "mkmenu_trappedsize(o, po)",
		"filename": "lib/wtrapped.k",
		"fileline": 728,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trk",
		"usage": "mkmenu_trk(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2928,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkappend",
		"usage": "mkmenu_trkappend(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2923,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkaud",
		"usage": "mkmenu_trkaud(o, po)",
		"filename": "lib/wgroup.k",
		"fileline": 2906,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkmisc",
		"usage": "mkmenu_trkmisc(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trknamed",
		"usage": "mkmenu_trknamed(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 44,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkpaste",
		"usage": "mkmenu_trkpaste(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2917,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkpick",
		"usage": "mkmenu_trkpick(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2798,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trkshow",
		"usage": "mkmenu_trkshow(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2940,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trksnarf",
		"usage": "mkmenu_trksnarf(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2911,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trktool1",
		"usage": "mkmenu_trktool1(o, po, dn)",
		"filename": "lib/wgroup.k",
		"fileline": 2945,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_trktool2",
		"usage": "mkmenu_trktool2(o, po, dn, w)",
		"filename": "lib/wgroup.k",
		"fileline": 2950,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_velvalues_minmax",
		"usage": "mkmenu_velvalues_minmax(o, po, param)",
		"filename": "lib/statfunc.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_video1",
		"usage": "mkmenu_video1(o, po)",
		"filename": "lib/wvideo.k",
		"fileline": 464,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_videopreview",
		"usage": "mkmenu_videopreview(o, po)",
		"filename": "lib/wvideo.k",
		"fileline": 450,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_videosize",
		"usage": "mkmenu_videosize(o, po)",
		"filename": "lib/wvideo.k",
		"fileline": 458,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_videotype",
		"usage": "mkmenu_videotype(o, po)",
		"filename": "lib/wvideo.k",
		"fileline": 454,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wind",
		"usage": "mkmenu_wind(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 638,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_windfile",
		"usage": "mkmenu_windfile(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 650,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wkeywalkmore",
		"usage": "mkmenu_wkeywalkmore(o, po)",
		"filename": "lib/wkeywalk.k",
		"fileline": 125,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wkeywalkwalktime",
		"usage": "mkmenu_wkeywalkwalktime(o, po, meth)",
		"filename": "lib/wkeywalk.k",
		"fileline": 136,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wkeywalkwalktype",
		"usage": "mkmenu_wkeywalkwalktype(o, po, meth)",
		"filename": "lib/wkeywalk.k",
		"fileline": 130,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wmapwalkmore",
		"usage": "mkmenu_wmapwalkmore(o, po)",
		"filename": "lib/wmapwalk.k",
		"fileline": 96,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wmapwalkwalktime",
		"usage": "mkmenu_wmapwalkwalktime(o, po, meth)",
		"filename": "lib/wmapwalk.k",
		"fileline": 100,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_woffwalkmore",
		"usage": "mkmenu_woffwalkmore(o, po)",
		"filename": "lib/woffwalk.k",
		"fileline": 140,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_woffwalkwalktime",
		"usage": "mkmenu_woffwalkwalktime(o, po, meth)",
		"filename": "lib/woffwalk.k",
		"fileline": 151,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_woffwalkwalktype",
		"usage": "mkmenu_woffwalkwalktype(o, po, meth)",
		"filename": "lib/woffwalk.k",
		"fileline": 145,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wpxmore",
		"usage": "mkmenu_wpxmore(o, po)",
		"filename": "lib/wprogchx.k",
		"fileline": 190,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wpxpatches",
		"usage": "mkmenu_wpxpatches(o, po)",
		"filename": "lib/wprogchx.k",
		"fileline": 201,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wpxsnarf",
		"usage": "mkmenu_wpxsnarf(o, po)",
		"filename": "lib/wprogchx.k",
		"fileline": 197,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wquix",
		"usage": "mkmenu_wquix(o, po)",
		"filename": "lib/wquix.k",
		"fileline": 325,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_write",
		"usage": "mkmenu_write(o, po)",
		"filename": "lib/mkmenus.k",
		"fileline": 26,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_write_col",
		"usage": "mkmenu_write_col(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 302,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_writelog",
		"usage": "mkmenu_writelog(o, po)",
		"filename": "lib/statfunc.k",
		"fileline": 296,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wrquantvals",
		"usage": "mkmenu_wrquantvals(o, po, meth)",
		"filename": "lib/wsect.k",
		"fileline": 273,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wrsectvals",
		"usage": "mkmenu_wrsectvals(o, po, meth)",
		"filename": "lib/wsect.k",
		"fileline": 283,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_activate_audio",
		"usage": "mkmenu_wtr_activate_audio(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1522,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_bipolar",
		"usage": "mkmenu_wtr_bipolar(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1527,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_def_pchange",
		"usage": "mkmenu_wtr_def_pchange(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1491,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_bkgcol",
		"usage": "mkmenu_wtr_fract_bkgcol(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1565,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_displ",
		"usage": "mkmenu_wtr_fract_displ(o, po)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1418,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_drwcol",
		"usage": "mkmenu_wtr_fract_drwcol(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1496,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_intensity",
		"usage": "mkmenu_wtr_fract_intensity(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1513,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_mus",
		"usage": "mkmenu_wtr_fract_mus(o, po)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1425,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_ptsize",
		"usage": "mkmenu_wtr_fract_ptsize(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1507,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_scale",
		"usage": "mkmenu_wtr_fract_scale(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1441,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_type",
		"usage": "mkmenu_wtr_fract_type(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1480,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_fract_view",
		"usage": "mkmenu_wtr_fract_view(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1558,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_notel",
		"usage": "mkmenu_wtr_notel(o, po)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1435,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_select_gmpatch",
		"usage": "mkmenu_wtr_select_gmpatch(o, po)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1553,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_set_l1",
		"usage": "mkmenu_wtr_set_l1(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1532,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_set_l2",
		"usage": "mkmenu_wtr_set_l2(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1539,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wtr_set_l3",
		"usage": "mkmenu_wtr_set_l3(o, po, meth)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1546,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wvirusmore",
		"usage": "mkmenu_wvirusmore(o, po)",
		"filename": "lib/wvirus.k",
		"fileline": 178,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_wwwaddroot",
		"usage": "mkmenu_wwwaddroot(o, po)",
		"filename": "lib/wwwtools.k",
		"fileline": 762,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_xautoloop",
		"usage": "mkmenu_xautoloop(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 742,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mkmenu_xautoplay",
		"usage": "mkmenu_xautoplay(o, po)",
		"filename": "lib/wexpresso.k",
		"fileline": 738,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "modulationnotes",
		"usage": "modulationnotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 591,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mono",
		"usage": "mono(phrase,type)",
		"filename": "lib/basic1.k",
		"fileline": 398,
		"desc": """Returns a monophonic version of the specified phrase.
If type==0, high notes are given priority (e.g. if two notes are
playing simultaneously, the higher note will be chosen).
If type==1, low notes are given priority.  If type==2,
the priority is randomized.
""",
	},
	{
		"type": "function",
		"name": "monolith_id",
		"usage": "monolith_id()",
		"filename": "lib/wmonolith2b.k",
		"fileline": 3630,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mousedemo",
		"usage": "mousedemo(fname)",
		"filename": "lib/loops.k",
		"fileline": 257,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mousedo",
		"usage": "mousedo(m)",
		"filename": "lib/loops.k",
		"fileline": 285,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mouseforward",
		"usage": "mouseforward(m, mtype)",
		"filename": "lib/util1.k",
		"fileline": 751,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mouseloop",
		"usage": "mouseloop()",
		"filename": "lib/loops.k",
		"fileline": 180,
		"desc": """This task is intended to be the one-and-only task that reads
directly from the Mousefifo, a special fifo that is opened
whenever KeyKit is rebooted, and to which KeyKit sends messages
about changes in the mouse state.  mouseloop() normally figures
out which window is underneath the mouse, and sends the message
to the Mousein fifo for that window.  If someone wants to grab the
mouse, they should set Mousegrabwind, and mouseloop() will instead
send the mouse messages to that window.  This procedure should be done
with the grabmouse() and ungrabmouse() functions.
""",
	},
	{
		"type": "function",
		"name": "mouseplay",
		"usage": "mouseplay()",
		"filename": "lib/loops.k",
		"fileline": 263,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mouseplaytask",
		"usage": "mouseplaytask()",
		"filename": "lib/loops.k",
		"fileline": 267,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mousereadfile",
		"usage": "mousereadfile()",
		"filename": "lib/loops.k",
		"fileline": 246,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mouserec",
		"usage": "mouserec(v)",
		"filename": "lib/loops.k",
		"fileline": 203,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mousewritefile",
		"usage": "mousewritefile()",
		"filename": "lib/loops.k",
		"fileline": 231,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mt",
		"usage": "mt(n)",
		"filename": "lib/meme.k",
		"fileline": 162,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mx202drum",
		"usage": "mx202drum(leng)",
		"filename": "lib/mx202drum.k",
		"fileline": 98,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mx202drum4",
		"usage": "mx202drum4()",
		"filename": "lib/mx202drum.k",
		"fileline": 86,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mx202drum8",
		"usage": "mx202drum8()",
		"filename": "lib/mx202drum.k",
		"fileline": 89,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mx202drumn",
		"usage": "mx202drumn(b, n)",
		"filename": "lib/mx202drum.k",
		"fileline": 92,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mxchoose",
		"usage": "mxchoose(arr)",
		"filename": "lib/mx202drum.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mystartup",
		"usage": "mystartup()",
		"filename": "lib/keylocal.k",
		"fileline": 16,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nanopatch",
		"usage": "nanopatch(ch,bank,prog)",
		"filename": "lib/nano.k",
		"fileline": 9,
		"desc": """Return sysex that changes a parts bank/program.
Assumes that the 16 parts are assigned to channels 1-16.
ch is 1-based
bank is 0-based
prog is 0-based
""",
	},
	{
		"type": "function",
		"name": "neural",
		"usage": "neural()",
		"filename": "lib/neural.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "newpagename",
		"usage": "newpagename()",
		"filename": "lib/page.k",
		"fileline": 59,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nextquant",
		"usage": "nextquant(number,quantize)",
		"filename": "lib/util1.k",
		"fileline": 307,
		"desc": """This function quantizes the specified number using the specified
quantize value, and returns the result.  The result is guaranteed to
be greater than the original number; if quantization would produce
a smaller number, it is increased by the quantize value.  This is
typically used when you want to quantize a time value, and want to
guarantee that the result will refer to some time in the future,
not in the past.
""",
	},
	{
		"type": "function",
		"name": "nexttime",
		"usage": "nexttime(ph,st)",
		"filename": "lib/basic1.k",
		"fileline": 60,
		"desc": """Return the time of the next note AFTER time 'st', in phrase 'ph'
If there are no notes after it, returns -1;
""",
	},
	{
		"type": "function",
		"name": "nightlight",
		"usage": "nightlight()",
		"filename": "lib/nightlight.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "noise",
		"usage": "noise(ph, type, amount, att)",
		"filename": "lib/basic2.k",
		"fileline": 381,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "noiseval",
		"usage": "noiseval(type, amount)",
		"filename": "lib/util1.k",
		"fileline": 1424,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nonnotes",
		"usage": "nonnotes(ph)",
		"filename": "lib/basic1.k",
		"fileline": 763,
		"desc": """Return all non-notes (i.e. controller, sysex, etc) of ph.
""",
	},
	{
		"type": "function",
		"name": "normboot",
		"usage": "normboot()",
		"filename": "lib/keyrc.k",
		"fileline": 291,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "normboot",
		"usage": "normboot()",
		"filename": "lib/keyrc.k",
		"fileline": 270,
		"desc": """This is intended to be the default function that gets called
when KeyKit initially boots or reboots.  KeyKit calls
Rebootfunc() when it reboots, so in order for this function
to be used, the statement "Rebootfunc=normboot" should be
included in keyrc().  Any tasks that must always be
active (for example, the loops that monitor mouse and
console input) should be started here.  To register a
function that will be automatically restarted upon a reboot,
you should add it to the Rebootfuncs array.
""",
	},
	{
		"type": "function",
		"name": "normexit",
		"usage": "normexit()",
		"filename": "lib/util1.k",
		"fileline": 828,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "normintr",
		"usage": "normintr()",
		"filename": "lib/keyrc.k",
		"fileline": 331,
		"desc": """This function is intended to be the default value of Intrfunc,
which KeyKit calls when an interrupt is received, typically
when the user presses the interrupt character on the console.
This function forces a reboot.  If graphics mode is enabled,
an attempt is made to save the current tool configuration
in the file "keydump.lst", which will then be restored after
the reboot.  In this way, a fairly clean restart is performed.
""",
	},
	{
		"type": "function",
		"name": "normredraw",
		"usage": "normredraw()",
		"filename": "lib/util1.k",
		"fileline": 819,
		"desc": """This function is intended to be the default value of Redrawfunc,
which KeyKit calls whenever the screen must be redrawn.
It redraws the root window (i.e. erasing the screen), and
then sends a redraw message to all children windows (i.e. all
the active tools).
""",
	},
	{
		"type": "function",
		"name": "normresize",
		"usage": "normresize()",
		"filename": "lib/util1.k",
		"fileline": 842,
		"desc": """This function is intended to be the default value of Resizefunc,
which KeyKit calls whenever the screen is resized.  Normally
this function does nothing.  By setting the variable Autoresize
to 1 (e.g. in liblocal/prerc.k), you can cause this function to
automatically resize all the active tools to fit within the new
screen size.
""",
	},
	{
		"type": "function",
		"name": "note2holder",
		"usage": "note2holder(nt)",
		"filename": "lib/util2.k",
		"fileline": 88,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "note2text",
		"usage": "note2text(p)",
		"filename": "lib/melodymerge.k",
		"fileline": 90,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "noticecontrollers",
		"usage": "noticecontrollers(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 29,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "noticeprogram",
		"usage": "noticeprogram(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 48,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nrpn",
		"usage": "nrpn(ch,mm,ll)",
		"filename": "lib/basic2.k",
		"fileline": 93,
		"desc": """Return an NRPN message constructed from ch (channel, 1-based),
mm (most-significant byte) and ll (least-significant byte).
""",
	},
	{
		"type": "function",
		"name": "nsimul",
		"usage": "nsimul(ph)",
		"filename": "lib/basic2.k",
		"fileline": 264,
		"desc": """Return the maximum number of simultaneously-sounding notes in a phrase.
""",
	},
	{
		"type": "function",
		"name": "nslooperb",
		"usage": "nslooperb()",
		"filename": "lib/nslooperb.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nth",
		"usage": "nth()",
		"filename": "lib/nthloop.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nthcanvas",
		"usage": "nthcanvas()",
		"filename": "lib/nthcanvas.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nthevent_listen",
		"usage": "nthevent_listen()",
		"filename": "lib/osc.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nthloop",
		"usage": "nthloop()",
		"filename": "lib/nthloop.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nudge_back",
		"usage": "nudge_back(tm, t)",
		"filename": "lib/wnudge.k",
		"fileline": 123,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nullfunction",
		"usage": "nullfunction()",
		"filename": "lib/util1.k",
		"fileline": 1397,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nummidibytes",
		"usage": "nummidibytes(p)",
		"filename": "lib/korg.k",
		"fileline": 76,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "numquant",
		"usage": "numquant(number,quantize)",
		"filename": "lib/util1.k",
		"fileline": 598,
		"desc": """This function quantizes the specified number using the specified
quantize value, and returns the result.  The result may be less
than the original number.  If you want to guarantee that the
result is not less than the original (which is typical when you are
quantizing a time value and want to guarantee that the result is
some time in the future), use nextquant().
""",
	},
	{
		"type": "function",
		"name": "octavefence",
		"usage": "octavefence(ph, p1, p2)",
		"filename": "lib/basic2.k",
		"fileline": 306,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "octbits",
		"usage": "octbits(v, p)",
		"filename": "lib/short2.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "offwalktask",
		"usage": "offwalktask(o)",
		"filename": "lib/woffwalk.k",
		"fileline": 132,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "offwatchtask",
		"usage": "offwatchtask(o, ch)",
		"filename": "lib/woffwalk.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "offwatchtask_quit",
		"usage": "offwatchtask_quit(o, mf)",
		"filename": "lib/woffwalk.k",
		"fileline": 159,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldcontrolthin",
		"usage": "oldcontrolthin(origp, mintm, smooth)",
		"filename": "lib/basic2.k",
		"fileline": 419,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldhappy",
		"usage": "oldhappy(state)",
		"filename": "lib/oldhappy.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldhappyfeet",
		"usage": "oldhappyfeet()",
		"filename": "lib/happy.k",
		"fileline": 41,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldwritelines",
		"usage": "oldwritelines(p, fn)",
		"filename": "lib/www.k",
		"fileline": 181,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oneovrf",
		"usage": "oneovrf(last, amount)",
		"filename": "lib/util1.k",
		"fileline": 1522,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "onlynotes",
		"usage": "onlynotes(ph)",
		"filename": "lib/basic1.k",
		"fileline": 755,
		"desc": """Return only the regular notes (non-controller, non-sysex, etc) of ph.
""",
	},
	{
		"type": "function",
		"name": "op_dinc",
		"usage": "op_dinc(arg)",
		"filename": "lib/meme.k",
		"fileline": 61,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_dset",
		"usage": "op_dset(arg)",
		"filename": "lib/meme.k",
		"fileline": 65,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_pinc",
		"usage": "op_pinc(arg)",
		"filename": "lib/meme.k",
		"fileline": 45,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_tinc",
		"usage": "op_tinc(arg)",
		"filename": "lib/meme.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_trig",
		"usage": "op_trig(arg)",
		"filename": "lib/meme.k",
		"fileline": 69,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_vinc",
		"usage": "op_vinc(arg)",
		"filename": "lib/meme.k",
		"fileline": 49,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "op_vset",
		"usage": "op_vset(arg)",
		"filename": "lib/meme.k",
		"fileline": 53,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ornament",
		"usage": "ornament(ph,orn,doscaleng)",
		"filename": "lib/basic2.k",
		"fileline": 1013,
		"desc": """Apply phrase orn to each note of phrase ph - i.e. each note of
phrase ph will be turned into a copy of phrase orn.
If doscaleng is non-zero, then the copy will be scaled to the
duration of the notes in phrase orn.  If doscaleng is zero,
the copy will have the original timing.
""",
	},
	{
		"type": "function",
		"name": "osc_listen",
		"usage": "osc_listen(host, port)",
		"filename": "lib/osc.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "osc_panto",
		"usage": "osc_panto()",
		"filename": "lib/osc.k",
		"fileline": 94,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "osc_sean",
		"usage": "osc_sean()",
		"filename": "lib/osc.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "osc_send",
		"usage": "osc_send(msg, host, port)",
		"filename": "lib/osc.k",
		"fileline": 97,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "osc_sendto",
		"usage": "osc_sendto(port)",
		"filename": "lib/osc.k",
		"fileline": 114,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oscgroup_listen",
		"usage": "oscgroup_listen()",
		"filename": "lib/osc.k",
		"fileline": 137,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oscgroup_send",
		"usage": "oscgroup_send()",
		"filename": "lib/osc.k",
		"fileline": 130,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "outport",
		"usage": "outport(port)",
		"filename": "lib/util2.k",
		"fileline": 197,
		"desc": """Opena a MIDI output port
""",
	},
	{
		"type": "function",
		"name": "padbuttons",
		"usage": "padbuttons()",
		"filename": "lib/joystuff.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "padbuttonsbynum",
		"usage": "padbuttonsbynum()",
		"filename": "lib/joystuff.k",
		"fileline": 75,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "padorder",
		"usage": "padorder()",
		"filename": "lib/joystuff.k",
		"fileline": 39,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_label",
		"usage": "page_label()",
		"filename": "lib/page.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_new",
		"usage": "page_new()",
		"filename": "lib/page.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_post",
		"usage": "page_post()",
		"filename": "lib/page.k",
		"fileline": 262,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_readmerge",
		"usage": "page_readmerge()",
		"filename": "lib/page.k",
		"fileline": 267,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_readnew",
		"usage": "page_readnew(fname)",
		"filename": "lib/page.k",
		"fileline": 154,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_switch",
		"usage": "page_switch(o)",
		"filename": "lib/page.k",
		"fileline": 76,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_switchto",
		"usage": "page_switchto(pgobj, pgname)",
		"filename": "lib/page.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "page_write",
		"usage": "page_write(fname, pg, nm)",
		"filename": "lib/page.k",
		"fileline": 88,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pagecol_write",
		"usage": "pagecol_write(fname)",
		"filename": "lib/pagecol.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pannote",
		"usage": "pannote(ch, v)",
		"filename": "lib/basic2.k",
		"fileline": 72,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pannotes",
		"usage": "pannotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 603,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patch_lookup",
		"usage": "patch_lookup(s, ch, pmap)",
		"filename": "lib/maps.k",
		"fileline": 83,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patch_lookup_bynum",
		"usage": "patch_lookup_bynum(num, ch, pmap)",
		"filename": "lib/maps.k",
		"fileline": 99,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchchange",
		"usage": "patchchange(...)",
		"filename": "lib/basic2.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap",
		"usage": "patchmap()",
		"filename": "lib/maps.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_bynum",
		"usage": "patchmap_bynum(n, ch)",
		"filename": "lib/maps.k",
		"fileline": 427,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_bynum_pmap",
		"usage": "patchmap_bynum_pmap(n, ch, pmap)",
		"filename": "lib/maps.k",
		"fileline": 438,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_drums_rand",
		"usage": "patchmap_drums_rand(ch)",
		"filename": "lib/maps.k",
		"fileline": 379,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_drums_sc8850",
		"usage": "patchmap_drums_sc8850()",
		"filename": "lib/sc8850.k",
		"fileline": 174,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_drums_sd80",
		"usage": "patchmap_drums_sd80()",
		"filename": "lib/sd80.k",
		"fileline": 195,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_drums_virusb",
		"usage": "patchmap_drums_virusb()",
		"filename": "lib/virusb.k",
		"fileline": 1161,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_for_chan",
		"usage": "patchmap_for_chan(ch)",
		"filename": "lib/maps.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_gm",
		"usage": "patchmap_gm()",
		"filename": "lib/maps.k",
		"fileline": 157,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_gm_real",
		"usage": "patchmap_gm_real()",
		"filename": "lib/maps.k",
		"fileline": 163,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_jv1010",
		"usage": "patchmap_jv1010()",
		"filename": "lib/jv1010.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_jv1010_all",
		"usage": "patchmap_jv1010_all()",
		"filename": "lib/jv1010.k",
		"fileline": 16,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_nano",
		"usage": "patchmap_nano()",
		"filename": "lib/nano.k",
		"fileline": 45,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_phrase",
		"usage": "patchmap_phrase(arr, ch)",
		"filename": "lib/maps.k",
		"fileline": 449,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_rand",
		"usage": "patchmap_rand(ch)",
		"filename": "lib/maps.k",
		"fileline": 387,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_rand_real",
		"usage": "patchmap_rand_real(ch, map)",
		"filename": "lib/maps.k",
		"fileline": 414,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_sc8850",
		"usage": "patchmap_sc8850()",
		"filename": "lib/sc8850.k",
		"fileline": 217,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_sd80",
		"usage": "patchmap_sd80()",
		"filename": "lib/sd80.k",
		"fileline": 238,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_trrack",
		"usage": "patchmap_trrack()",
		"filename": "lib/trrack.k",
		"fileline": 117,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_type",
		"usage": "patchmap_type(ch, t)",
		"filename": "lib/maps.k",
		"fileline": 396,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_gm",
		"usage": "patchmap_types_gm(type)",
		"filename": "lib/maps.k",
		"fileline": 115,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_nano",
		"usage": "patchmap_types_nano(type)",
		"filename": "lib/nano.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_sc8850",
		"usage": "patchmap_types_sc8850(type)",
		"filename": "lib/sc8850.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_sd80",
		"usage": "patchmap_types_sd80(type)",
		"filename": "lib/sd80.k",
		"fileline": 50,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_trrack",
		"usage": "patchmap_types_trrack(type)",
		"filename": "lib/trrack.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_types_virusb",
		"usage": "patchmap_types_virusb(type)",
		"filename": "lib/virusb.k",
		"fileline": 1074,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmap_virusb",
		"usage": "patchmap_virusb()",
		"filename": "lib/virusb.k",
		"fileline": 33,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmapnames",
		"usage": "patchmapnames(pmap)",
		"filename": "lib/maps.k",
		"fileline": 297,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchmapnums",
		"usage": "patchmapnums()",
		"filename": "lib/maps.k",
		"fileline": 307,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchnamed",
		"usage": "patchnamed(nm, ch)",
		"filename": "lib/maps.k",
		"fileline": 52,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchnamed_msg",
		"usage": "patchnamed_msg(s, ch, pmap)",
		"filename": "lib/maps.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchnumed",
		"usage": "patchnumed(num, ch, pmap)",
		"filename": "lib/maps.k",
		"fileline": 73,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchrandom",
		"usage": "patchrandom(ch)",
		"filename": "lib/maps.k",
		"fileline": 48,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchtypes_for_chan",
		"usage": "patchtypes_for_chan(ch)",
		"filename": "lib/maps.k",
		"fileline": 32,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "patchunmap_sc8850",
		"usage": "patchunmap_sc8850(p)",
		"filename": "lib/sc8850.k",
		"fileline": 18,
		"desc": """If p is a patch change message, return its entry in the patchmap
Return 0 if it's not a patch message.
""",
	},
	{
		"type": "function",
		"name": "patchunmap_sd80",
		"usage": "patchunmap_sd80(p)",
		"filename": "lib/sd80.k",
		"fileline": 31,
		"desc": """If p is a patch change message, return its entry in the patchmap
Return 0 if it's not a patch message.
""",
	},
	{
		"type": "function",
		"name": "pathescape",
		"usage": "pathescape(s)",
		"filename": "lib/util2.k",
		"fileline": 317,
		"desc": """Takes a file pathname, and returns a version of
the string that can be safely printed to a file and re-read.
""",
	},
	{
		"type": "function",
		"name": "permutations",
		"usage": "permutations(phr, stepit)",
		"filename": "lib/util2.k",
		"fileline": 108,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "permutations_visit",
		"usage": "permutations_visit(k, nn, values, level, phr, results, stepit)",
		"filename": "lib/util2.k",
		"fileline": 125,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pfunc_null",
		"usage": "pfunc_null(n, t)",
		"filename": "lib/wginsu.k",
		"fileline": 290,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pfunc_process",
		"usage": "pfunc_process(n, t)",
		"filename": "lib/wginsu.k",
		"fileline": 287,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pi1",
		"usage": "pi1()",
		"filename": "lib/pi.k",
		"fileline": 334,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "picknote",
		"usage": "picknote(phrase, n)",
		"filename": "lib/rand1.k",
		"fileline": 5,
		"desc": """Returns n random notes from the specified phrase.  If n is omitted,
a single random note is returned.
""",
	},
	{
		"type": "function",
		"name": "pickphr",
		"usage": "pickphr(phrase1,phrase2,phrase3...)",
		"filename": "lib/rand1.k",
		"fileline": 27,
		"desc": """Randomly chooses and returns one of its argument phrases.
""",
	},
	{
		"type": "function",
		"name": "pickrandbeat",
		"usage": "pickrandbeat(r, beat)",
		"filename": "lib/setsim.k",
		"fileline": 198,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pickrandleft",
		"usage": "pickrandleft(r, left)",
		"filename": "lib/setsim.k",
		"fileline": 173,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "picnic",
		"usage": "picnic()",
		"filename": "lib/picnic.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "picnic2",
		"usage": "picnic2()",
		"filename": "lib/picnic.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "picnic_reset",
		"usage": "picnic_reset(set)",
		"filename": "lib/picnic.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "picnicmedley",
		"usage": "picnicmedley()",
		"filename": "lib/picnic.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pidigits",
		"usage": "pidigits()",
		"filename": "lib/pi.k",
		"fileline": 214,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pipatches",
		"usage": "pipatches(pos)",
		"filename": "lib/pi.k",
		"fileline": 166,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "piscan",
		"usage": "piscan(pos, nnotes, sectsize, startnt, secs, dopatches)",
		"filename": "lib/pi.k",
		"fileline": 93,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pitch_allowed_remap",
		"usage": "pitch_allowed_remap(m, currentallowed)",
		"filename": "lib/remapper.k",
		"fileline": 95,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pitchbendnotes",
		"usage": "pitchbendnotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 564,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pitchlimit",
		"usage": "pitchlimit(p,p1,p2)",
		"filename": "lib/basic1.k",
		"fileline": 1090,
		"desc": """Adjust the pitches of notes in phrase p so that they
fall between p1 and p2, by shifting the notes in octave increments.
""",
	},
	{
		"type": "function",
		"name": "pitry",
		"usage": "pitry()",
		"filename": "lib/pi.k",
		"fileline": 366,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "playChordstask",
		"usage": "playChordstask()",
		"filename": "lib/playchords.k",
		"fileline": 36,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "play_wgpluck",
		"usage": "play_wgpluck()",
		"filename": "lib/csound.k",
		"fileline": 98,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "playchords",
		"usage": "playchords()",
		"filename": "lib/playchords.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "playmonolithwave",
		"usage": "playmonolithwave(fn)",
		"filename": "lib/wmonolith2b.k",
		"fileline": 3762,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "playmonolithwave_sync",
		"usage": "playmonolithwave_sync(fn)",
		"filename": "lib/wmonolith2b.k",
		"fileline": 3769,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "polishit",
		"usage": "polishit(w)",
		"filename": "lib/www.k",
		"fileline": 229,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "portsopened",
		"usage": "portsopened()",
		"filename": "lib/util2.k",
		"fileline": 207,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "preecho",
		"usage": "preecho(ph,num,rtime,factor)",
		"filename": "lib/basic1.k",
		"fileline": 1283,
		"desc": """Return phrase ph with each note preceeded by 'pre' echoes.
num is the number of echoes, rtime is the time between them,
and rfactor is the volume factor (between 0.0 and 1.0)
If not provided, rtime and rfactor default to 1b and 0.9
""",
	},
	{
		"type": "function",
		"name": "preechorand",
		"usage": "preechorand(p, echolikely, necho, percent, echoprestep)",
		"filename": "lib/happy.k",
		"fileline": 1511,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "prelocaldefaults",
		"usage": "prelocaldefaults()",
		"filename": "lib/keyrc.k",
		"fileline": 136,
		"desc": """This sets any default values before keylocal.k is called.
""",
	},
	{
		"type": "function",
		"name": "prevquant",
		"usage": "prevquant(number,quantize)",
		"filename": "lib/util1.k",
		"fileline": 329,
		"desc": """This function quantizes the specified number using the specified
quantize value, and returns a result that is equal to or less than
the original number.
""",
	},
	{
		"type": "function",
		"name": "print",
		"usage": "print(...)",
		"filename": "lib/util1.k",
		"fileline": 975,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "print_cs32_msg",
		"usage": "print_cs32_msg(m)",
		"filename": "lib/midimon.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "print_guide",
		"usage": "print_guide()",
		"filename": "lib/statfunc.k",
		"fileline": 440,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "printit",
		"usage": "printit(p)",
		"filename": "lib/mkmenus.k",
		"fileline": 83,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "printsimpitch",
		"usage": "printsimpitch()",
		"filename": "lib/setsim.k",
		"fileline": 146,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "printsimrhythm",
		"usage": "printsimrhythm()",
		"filename": "lib/setsim.k",
		"fileline": 155,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "printstoch",
		"usage": "printstoch()",
		"filename": "lib/stochgen.k",
		"fileline": 38,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "proc_list",
		"usage": "proc_list()",
		"filename": "lib/procs.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "progchange",
		"usage": "progchange(patchnum,ch)",
		"filename": "lib/basic2.k",
		"fileline": 39,
		"desc": """Return a program change message, where patchnum is the
patch number (1-based), and ch is the channel (1-based).
""",
	},
	{
		"type": "function",
		"name": "progchangenotes",
		"usage": "progchangenotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 609,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "quantize",
		"usage": "quantize(phrase,quant [,limit] )",
		"filename": "lib/basic1.k",
		"fileline": 435,
		"desc": """Quantize a phrase.  Each note's starting time will be
quantized by the specified quant value.  If a limit
is specified, notes that would need to be moved by an
amount larger than this limit will not be adjusted at all.
""",
	},
	{
		"type": "function",
		"name": "quantizedur",
		"usage": "quantizedur(ph,qnt)",
		"filename": "lib/basic1.k",
		"fileline": 477,
		"desc": """Quantize the duration of all notes in ph.
""",
	},
	{
		"type": "function",
		"name": "quantizefirst",
		"usage": "quantizefirst(ph,qnt)",
		"filename": "lib/basic1.k",
		"fileline": 463,
		"desc": """Quantize the first note of ph, and shift the
rest of the phrase by the same amount.
""",
	},
	{
		"type": "function",
		"name": "quasar",
		"usage": "quasar(standalone)",
		"filename": "lib/quasar.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "querycontrol",
		"usage": "querycontrol(ch, cn)",
		"filename": "lib/util1.k",
		"fileline": 427,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "queryprogram",
		"usage": "queryprogram(ch)",
		"filename": "lib/util1.k",
		"fileline": 465,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "radio",
		"usage": "radio()",
		"filename": "lib/radio.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rand20",
		"usage": "rand20()",
		"filename": "lib/example2.k",
		"fileline": 37,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rand_channel",
		"usage": "rand_channel(p)",
		"filename": "lib/example9.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "randchord",
		"usage": "randchord()",
		"filename": "lib/bnchord.k",
		"fileline": 52,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "randdur",
		"usage": "randdur(phrase,range)",
		"filename": "lib/rand1.k",
		"fileline": 38,
		"desc": """Returns the phrase with the duration of its notes randomly
varied within the specified range.  For example, if the
range value is 2, the note durations will be adjusted by
values ranging from +2 to -2.
""",
	},
	{
		"type": "function",
		"name": "randmel",
		"usage": "randmel(len, nvoices, ptch, depth)",
		"filename": "lib/bnchord.k",
		"fileline": 82,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "randominclude",
		"usage": "randominclude(a, m, n)",
		"filename": "lib/expresso.k",
		"fileline": 752,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "randpitch",
		"usage": "randpitch(phrase,range)",
		"filename": "lib/rand1.k",
		"fileline": 58,
		"desc": """Returns the phrase with the pitch of its notes randomly
varied within the specified range.  For example, if the
range value is 2, the note pitches will be adjusted by
values ranging from +2 to -2.
""",
	},
	{
		"type": "function",
		"name": "randvol",
		"usage": "randvol(phrase,range)",
		"filename": "lib/rand1.k",
		"fileline": 78,
		"desc": """Returns the phrase with the velocity of its notes randomly
varied within the specified range.  For example, if the
range value is 2, the note velocities will be adjusted by
values ranging from +2 to -2.
""",
	},
	{
		"type": "function",
		"name": "rcdefaults",
		"usage": "rcdefaults()",
		"filename": "lib/keyrc.k",
		"fileline": 175,
		"desc": """This sets any default values for which it is intended that
they can be overridden by postrc().
""",
	},
	{
		"type": "function",
		"name": "rcdefaults_mdep",
		"usage": "rcdefaults_mdep()",
		"filename": "lib/keyrc.k",
		"fileline": 237,
		"desc": """Machine-dependent rcdefault things
""",
	},
	{
		"type": "function",
		"name": "rcpostboot",
		"usage": "rcpostboot()",
		"filename": "lib/keyrc.k",
		"fileline": 229,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "read_transforms",
		"usage": "read_transforms(fname)",
		"filename": "lib/expresso.k",
		"fileline": 375,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readandsend",
		"usage": "readandsend()",
		"filename": "lib/mkmenus.k",
		"fileline": 77,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readedit",
		"usage": "readedit(fifo,prompt [,history] )",
		"filename": "lib/util1.k",
		"fileline": 1079,
		"desc": """This function reads from a fifo, allowing line editing.
When a complete line has been entered, it is returned.
The optional third argument lets you access and maintain
a history of previous lines (this feature is not yet implemented).
""",
	},
	{
		"type": "function",
		"name": "readedit2",
		"usage": "readedit2(fifo,prompt)",
		"filename": "lib/util1.k",
		"fileline": 1130,
		"desc": """This is a variation of readedit that allows you to press ESC
and get put into "notepad" on the history.  To activate,
set ConsoleReadedit=readedit2 in your liblocal/postrc.k
When you're done writing your script in the text editor, save the file,
close the editor (optional), then press ESC again. The whole KeyKit code
you edited will be evaluated as a single line (so take care to end your
  lines with a ";")
#desc
  Another feature of readedit2 is the TAB key which recalls previous
commands (you are first prompted for an index value in the Hist array,
but if you go on pressing TAB you will have the commands recalled
from the most recent to the oldest one)
""",
	},
	{
		"type": "function",
		"name": "readeveryfile",
		"usage": "readeveryfile(path)",
		"filename": "lib/updatelib.k",
		"fileline": 94,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readfile",
		"usage": "readfile(filename)",
		"filename": "lib/read1.k",
		"fileline": 24,
		"desc": """This function reads an entire file (all lines of it)
and returns it as a single string.
""",
	},
	{
		"type": "function",
		"name": "readkey",
		"usage": "readkey(filename)",
		"filename": "lib/read1.k",
		"fileline": 6,
		"desc": """This function reads a phrase from the specified file, which is
is expected to contain a phrase in KeyKit format, i.e. the
same as a phrase constant in the KeyKit language.
""",
	},
	{
		"type": "function",
		"name": "readmf",
		"usage": "readmf(filename)",
		"filename": "lib/read1.k",
		"fileline": 93,
		"desc": """Reads the specified Standard MIDI File and returns its
contents as a single phrase (with all tracks merged).
""",
	},
	{
		"type": "function",
		"name": "readmfchan",
		"usage": "readmfchan(fname, a, n, r, mfarr, i, x)",
		"filename": "lib/read1.k",
		"fileline": 114,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readmid",
		"usage": "readmid(fname)",
		"filename": "lib/read1.k",
		"fileline": 109,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readpifile",
		"usage": "readpifile(fname, desired)",
		"filename": "lib/pi.k",
		"fileline": 190,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readpnm",
		"usage": "readpnm(fname)",
		"filename": "lib/image.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readppm",
		"usage": "readppm(fname)",
		"filename": "lib/image.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readraw",
		"usage": "readraw(filename)",
		"filename": "lib/read1.k",
		"fileline": 40,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readrawplay",
		"usage": "readrawplay(fname)",
		"filename": "lib/read1.k",
		"fileline": 78,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realexpr",
		"usage": "realexpr(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 68,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realexprtask",
		"usage": "realexprtask(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 72,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realgmreset",
		"usage": "realgmreset()",
		"filename": "lib/basic2.k",
		"fileline": 248,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realmidi",
		"usage": "realmidi(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realmidifilter",
		"usage": "realmidifilter(p, f)",
		"filename": "lib/example9.k",
		"fileline": 16,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realmiditask",
		"usage": "realmiditask(p, stime)",
		"filename": "lib/realutil.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realslow",
		"usage": "realslow(p)",
		"filename": "lib/realutil.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "recfilteron",
		"usage": "recfilteron(ch)",
		"filename": "lib/realutil.k",
		"fileline": 249,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rectresize",
		"usage": "rectresize(arr, inc)",
		"filename": "lib/util1.k",
		"fileline": 1610,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "redmond",
		"usage": "redmond()",
		"filename": "lib/redmond2008.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "redmond2008",
		"usage": "redmond2008()",
		"filename": "lib/redmond2008.k",
		"fileline": 25,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "regicontrol",
		"usage": "regicontrol(o)",
		"filename": "lib/util1.k",
		"fileline": 389,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "regiprogram",
		"usage": "regiprogram(o)",
		"filename": "lib/util1.k",
		"fileline": 431,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "registop",
		"usage": "registop(tid)",
		"filename": "lib/util1.k",
		"fileline": 350,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "relay",
		"usage": "relay(n)",
		"filename": "lib/relay.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "relays",
		"usage": "relays(n1, n2)",
		"filename": "lib/relay.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "relayscan",
		"usage": "relayscan()",
		"filename": "lib/relay.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "releasenote",
		"usage": "releasenote(ch, v)",
		"filename": "lib/gm2.k",
		"fileline": 38,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "remapper",
		"usage": "remapper(chantomap)",
		"filename": "lib/remapper.k",
		"fileline": 32,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "remotecons",
		"usage": "remotecons(port)",
		"filename": "lib/remotecons.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "remotecons_loop",
		"usage": "remotecons_loop(x)",
		"filename": "lib/remotecons.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "remotecons_task",
		"usage": "remotecons_task(port)",
		"filename": "lib/remotecons.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "repeat",
		"usage": "repeat(phrase,num_times)",
		"filename": "lib/basic1.k",
		"fileline": 495,
		"desc": """Repeat a phrase as many times as specified.  The length attribute
of the phrase determines the offset of the repetitions.
""",
	},
	{
		"type": "function",
		"name": "repfade",
		"usage": "repfade(p,ntimes,inout)",
		"filename": "lib/basic2.k",
		"fileline": 346,
		"desc": """Repeat the phrase the specified number of times, gradually fading it
in or out (by including or excluding more notes on each repeat).
If inout>0, it starts out including only a couple of notes, and ends by
including the entire phrase - ie. a fade in.  If inout is less than 0,
it's a fade out.
""",
	},
	{
		"type": "function",
		"name": "repleng",
		"usage": "repleng(phrase,length)",
		"filename": "lib/basic1.k",
		"fileline": 518,
		"desc": """Repeat the specified phrase as many times as it takes
to fill the specified length of time.  The resultant
phrase is truncated to the exact length, if it doesn't
come out evenly.
""",
	},
	{
		"type": "function",
		"name": "rereadlib",
		"usage": "rereadlib()",
		"filename": "lib/updatelib.k",
		"fileline": 134,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rereadlibs",
		"usage": "rereadlibs()",
		"filename": "lib/util1.k",
		"fileline": 955,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "resetall",
		"usage": "resetall()",
		"filename": "lib/basic2.k",
		"fileline": 157,
		"desc": """Returns a phrase containing controller messages that reset
pitch bend, modulation, breath control, sustain, and channel pressure
on all 16 channels to nominal values (i.e. 0, or in the case
of pitch bend, 0x40).
""",
	},
	{
		"type": "function",
		"name": "resetconsole",
		"usage": "resetconsole(o)",
		"filename": "lib/ergox.k",
		"fileline": 4264,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "resetconsole21",
		"usage": "resetconsole21(o)",
		"filename": "lib/ergox21.k",
		"fileline": 4295,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "resetconsoleunion",
		"usage": "resetconsoleunion(o)",
		"filename": "lib/ergoxunion.k",
		"fileline": 4322,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "restartconfig",
		"usage": "restartconfig()",
		"filename": "lib/page.k",
		"fileline": 286,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "reverse",
		"usage": "reverse(ph)",
		"filename": "lib/basic1.k",
		"fileline": 538,
		"desc": """Reverse the phrase in time, so the first notes come last,
and the last notes come first.
""",
	},
	{
		"type": "function",
		"name": "revpitch",
		"usage": "revpitch(phrase)",
		"filename": "lib/basic1.k",
		"fileline": 558,
		"desc": """Reverse the pitches of a phrase (e.g. the pitch of the first note
will become the pitch of the last note).  The timing is left intact.
""",
	},
	{
		"type": "function",
		"name": "riffraff",
		"usage": "riffraff(r1, r2)",
		"filename": "lib/riffraff.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rootmon",
		"usage": "rootmon()",
		"filename": "lib/rootmon.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rootreleaseconsole",
		"usage": "rootreleaseconsole()",
		"filename": "lib/wpage.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rossler_wfr",
		"usage": "rossler_wfr(x, y, z)",
		"filename": "lib/wkeychaos.k",
		"fileline": 1388,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "round",
		"usage": "round(f)",
		"filename": "lib/basic1.k",
		"fileline": 1335,
		"desc": """Returns the rounded integer value of f.
""",
	},
	{
		"type": "function",
		"name": "router_send",
		"usage": "router_send(currmode, n)",
		"filename": "lib/korgrouter.k",
		"fileline": 87,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rpn_bendrange",
		"usage": "rpn_bendrange(chnum, semi)",
		"filename": "lib/gs_utils.k",
		"fileline": 397,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rpn_coarsetune",
		"usage": "rpn_coarsetune(chnum, semi)",
		"filename": "lib/gs_utils.k",
		"fileline": 373,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rpn_finetune",
		"usage": "rpn_finetune(chnum, dcent)",
		"filename": "lib/gs_utils.k",
		"fileline": 333,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rpnmsg",
		"usage": "rpnmsg(ch, mm, ll)",
		"filename": "lib/basic2.k",
		"fileline": 96,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rr",
		"usage": "rr()",
		"filename": "lib/riffraff.k",
		"fileline": 40,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rrtask1",
		"usage": "rrtask1(starttm, delta)",
		"filename": "lib/riffraff.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rrtask2",
		"usage": "rrtask2(ph, starttm, delta)",
		"filename": "lib/riffraff.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "runtask",
		"usage": "runtask(tsk)",
		"filename": "lib/csound.k",
		"fileline": 112,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "salvationlooper",
		"usage": "salvationlooper()",
		"filename": "lib/salvationlooper.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7chksum",
		"usage": "sc7chksum(...)",
		"filename": "lib/sc7util.k",
		"fileline": 45,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7only",
		"usage": "sc7only(chnum)",
		"filename": "lib/sc7util.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7strangemap",
		"usage": "sc7strangemap()",
		"filename": "lib/sc7util.k",
		"fileline": 29,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7turnoff",
		"usage": "sc7turnoff(...)",
		"filename": "lib/sc7util.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7turnon",
		"usage": "sc7turnon(...)",
		"filename": "lib/sc7util.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc7voicereserve",
		"usage": "sc7voicereserve()",
		"filename": "lib/sc7util.k",
		"fileline": 56,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc8850patch",
		"usage": "sc8850patch(channel,patchnum,variation)",
		"filename": "lib/sc8850.k",
		"fileline": 5,
		"desc": """Return the message that will set an sc8850/sc8820/scd-70 patch
channel and patchnum are 1-based, variation is 0-based (to match
the LCD display of the SC-8850.
""",
	},
	{
		"type": "function",
		"name": "sc8850patch0",
		"usage": "sc8850patch0(channel, patchnum0, variation)",
		"filename": "lib/sc8850.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sc8850patch_drum",
		"usage": "sc8850patch_drum(channel, patchnum0, variation)",
		"filename": "lib/sc8850.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scadjust",
		"usage": "scadjust(melody,scale)",
		"filename": "lib/scales1.k",
		"fileline": 40,
		"desc": """Adjust the notes in the melody phrase so that each note falls on
the closest note in the scale phrase.
""",
	},
	{
		"type": "function",
		"name": "scadjust_last",
		"usage": "scadjust_last(p)",
		"filename": "lib/basic2.k",
		"fileline": 733,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scadjustseqinplace",
		"usage": "scadjustseqinplace(p, seq, scale)",
		"filename": "lib/basic1.k",
		"fileline": 1134,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scadur",
		"usage": "scadur(phrase,factor)",
		"filename": "lib/basic1.k",
		"fileline": 627,
		"desc": """Scale the durations of a phrase by multiplying the duration of
each note by a specified factor.
""",
	},
	{
		"type": "function",
		"name": "scafilt",
		"usage": "scafilt(melody,scale)",
		"filename": "lib/scales1.k",
		"fileline": 84,
		"desc": """Return a copy of the melody phrase, leaving only those notes
that fall on the scale specified by the scale phrase.
""",
	},
	{
		"type": "function",
		"name": "scale_aeolian",
		"usage": "scale_aeolian()",
		"filename": "lib/scales1.k",
		"fileline": 117,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_chromatic",
		"usage": "scale_chromatic()",
		"filename": "lib/scales1.k",
		"fileline": 123,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_dorian",
		"usage": "scale_dorian()",
		"filename": "lib/scales1.k",
		"fileline": 113,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_fifths",
		"usage": "scale_fifths()",
		"filename": "lib/scales1.k",
		"fileline": 120,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_harminor",
		"usage": "scale_harminor()",
		"filename": "lib/scales1.k",
		"fileline": 121,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_ionian",
		"usage": "scale_ionian()",
		"filename": "lib/scales1.k",
		"fileline": 112,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_last",
		"usage": "scale_last()",
		"filename": "lib/scales1.k",
		"fileline": 134,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_locrian",
		"usage": "scale_locrian()",
		"filename": "lib/scales1.k",
		"fileline": 118,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_lydian",
		"usage": "scale_lydian()",
		"filename": "lib/scales1.k",
		"fileline": 115,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_melminor",
		"usage": "scale_melminor()",
		"filename": "lib/scales1.k",
		"fileline": 122,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_mixolydian",
		"usage": "scale_mixolydian()",
		"filename": "lib/scales1.k",
		"fileline": 116,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_newage",
		"usage": "scale_newage()",
		"filename": "lib/scales1.k",
		"fileline": 119,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scale_phrygian",
		"usage": "scale_phrygian()",
		"filename": "lib/scales1.k",
		"fileline": 114,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scalenamed",
		"usage": "scalenamed(s)",
		"filename": "lib/scales1.k",
		"fileline": 125,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scaleng",
		"usage": "scaleng(phrase,length)",
		"filename": "lib/basic1.k",
		"fileline": 583,
		"desc": """Scale the phrase to the specified length by expanding it length-wise,
adjusting both the time and duration of the notes.
""",
	},
	{
		"type": "function",
		"name": "scalevertical",
		"usage": "scalevertical(p, rangelow, rangehigh)",
		"filename": "lib/basic2.k",
		"fileline": 804,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scalexy",
		"usage": "scalexy(x, y, sz, sz2)",
		"filename": "lib/wquix.k",
		"fileline": 313,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scanline",
		"usage": "scanline(y)",
		"filename": "lib/gifjam.k",
		"fileline": 154,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scatimes",
		"usage": "scatimes(phrase,factor)",
		"filename": "lib/basic1.k",
		"fileline": 611,
		"desc": """Scale a phrase by multiplying the time and duration of
each note by a specified factor.
""",
	},
	{
		"type": "function",
		"name": "scavol",
		"usage": "scavol(phrase,factor)",
		"filename": "lib/basic1.k",
		"fileline": 641,
		"desc": """Scale the volume of a phrase by multiplying the volume of
each note by a specified factor.
""",
	},
	{
		"type": "function",
		"name": "scratch",
		"usage": "scratch(fn)",
		"filename": "lib/scratch.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scratch2",
		"usage": "scratch2(fn)",
		"filename": "lib/scratch2.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scratch2file",
		"usage": "scratch2file()",
		"filename": "lib/scratch2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scratch3",
		"usage": "scratch3(fn)",
		"filename": "lib/scratch3.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scratch3file",
		"usage": "scratch3file()",
		"filename": "lib/scratch3.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scratchfile",
		"usage": "scratchfile()",
		"filename": "lib/scratch.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "scriptWatch",
		"usage": "scriptWatch()",
		"filename": "lib/mac.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sd80_nativeon",
		"usage": "sd80_nativeon()",
		"filename": "lib/sd80.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sd80patch",
		"usage": "sd80patch(channel,patchnum,variation)",
		"filename": "lib/sd80.k",
		"fileline": 18,
		"desc": """Return the message that will set an sd80/sc8820/scd-70 patch
channel is 1-based, patchnum is 0-based (because the sd80
patch list used 0-based), and variation is 0-based (to match
the LCD display of the sd80.
The soundset value is
 80 (special 1)
 81 (special 2)
 96 (classical)
 97 (contemporary)
 98 (solo)
 99 (enhanced)
 87 (user)
""",
	},
	{
		"type": "function",
		"name": "sd80patch_drum",
		"usage": "sd80patch_drum(channel, patchnum0, variation)",
		"filename": "lib/sd80.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "secondhalf",
		"usage": "secondhalf(p)",
		"filename": "lib/basic1.k",
		"fileline": 1158,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "seconds",
		"usage": "seconds(secs)",
		"filename": "lib/util1.k",
		"fileline": 907,
		"desc": """Returns the number of clicks in a given number of seconds.
""",
	},
	{
		"type": "function",
		"name": "sendNoteOffs",
		"usage": "sendNoteOffs(theNote, thePhrase)",
		"filename": "lib/playchords.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sendmail",
		"usage": "sendmail(mailto, subject, msg)",
		"filename": "lib/sendmail.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setbendrange",
		"usage": "setbendrange(n, range)",
		"filename": "lib/basic2.k",
		"fileline": 650,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setdefaultchancolormap",
		"usage": "setdefaultchancolormap()",
		"filename": "lib/util2.k",
		"fileline": 357,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setdefaults",
		"usage": "setdefaults()",
		"filename": "lib/util1.k",
		"fileline": 137,
		"desc": """This function sets various global default values.
""",
	},
	{
		"type": "function",
		"name": "setsfromjoy",
		"usage": "setsfromjoy(arr)",
		"filename": "lib/happy.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setsim",
		"usage": "setsim(inphrase, wind, increment, type)",
		"filename": "lib/setsim.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setsimpitch",
		"usage": "setsimpitch(inphrase, wind, increment)",
		"filename": "lib/setsim.k",
		"fileline": 49,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setsimrhythm",
		"usage": "setsimrhythm(inphrase, measure, increment)",
		"filename": "lib/setsim.k",
		"fileline": 105,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setsnarf",
		"usage": "setsnarf(ph, txt)",
		"filename": "lib/util1.k",
		"fileline": 1389,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setupdrummaps",
		"usage": "setupdrummaps()",
		"filename": "lib/wkboom.k",
		"fileline": 1053,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "shots",
		"usage": "shots()",
		"filename": "lib/shots.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "shots_AA",
		"usage": "shots_AA(xval, seed, numgens, fname)",
		"filename": "lib/shots.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "shots_B",
		"usage": "shots_B(xval, seed, numgens)",
		"filename": "lib/shots.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "shots_TZ",
		"usage": "shots_TZ(p)",
		"filename": "lib/shots.k",
		"fileline": 27,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "shuffle",
		"usage": "shuffle(ph)",
		"filename": "lib/basic1.k",
		"fileline": 842,
		"desc": """This function takes a phrase, splits in in 2 halves (along time)
and shuffles the result (ie. first a note from the first half, then
a note from the second half, etc.).  The timing of the original
phrase is applied to the result.
""",
	},
	{
		"type": "function",
		"name": "simpleosc_listen",
		"usage": "simpleosc_listen()",
		"filename": "lib/osc.k",
		"fileline": 50,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "simpleosc_send",
		"usage": "simpleosc_send()",
		"filename": "lib/osc.k",
		"fileline": 73,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "simulinfo",
		"usage": "simulinfo(ph)",
		"filename": "lib/basic2.k",
		"fileline": 257,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "skronk",
		"usage": "skronk(p)",
		"filename": "lib/skronk.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "skronk2",
		"usage": "skronk2(p)",
		"filename": "lib/skronk2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "slidermon",
		"usage": "slidermon()",
		"filename": "lib/perkis.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "slots",
		"usage": "slots(fn)",
		"filename": "lib/slots.k",
		"fileline": 5,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "slotsfile",
		"usage": "slotsfile()",
		"filename": "lib/slots.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "slowdown",
		"usage": "slowdown(ph)",
		"filename": "lib/slowdown.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmattime",
		"usage": "smmattime(ph, tm)",
		"filename": "lib/smmutils.k",
		"fileline": 8,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmharmonise1",
		"usage": "smmharmonise1(p, scale, tr)",
		"filename": "lib/smmutils.k",
		"fileline": 659,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmharmonise2",
		"usage": "smmharmonise2(p, scale, tr)",
		"filename": "lib/smmutils.k",
		"fileline": 293,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmharmonise3",
		"usage": "smmharmonise3(p, currchord, scale, tr)",
		"filename": "lib/smmutils.k",
		"fileline": 522,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmharmonise4",
		"usage": "smmharmonise4(p, currchord, scale, tr)",
		"filename": "lib/smmutils.k",
		"fileline": 384,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmnojumps",
		"usage": "smmnojumps(p, bargap)",
		"filename": "lib/smmutils.k",
		"fileline": 724,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmscadjust",
		"usage": "smmscadjust(mel, scale, tr)",
		"filename": "lib/smmutils.k",
		"fileline": 243,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smmsetchord",
		"usage": "smmsetchord(thischord, scale, key)",
		"filename": "lib/smmutils.k",
		"fileline": 764,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "smtptest",
		"usage": "smtptest()",
		"filename": "lib/sockutil.k",
		"fileline": 20,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "snapshot",
		"usage": "snapshot()",
		"filename": "lib/page.k",
		"fileline": 271,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "snipper",
		"usage": "snipper()",
		"filename": "lib/snipper.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "snipper_task_loop",
		"usage": "snipper_task_loop()",
		"filename": "lib/snipper.k",
		"fileline": 332,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "snipper_task_main",
		"usage": "snipper_task_main(chantomap)",
		"filename": "lib/snipper.k",
		"fileline": 241,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sock_client",
		"usage": "sock_client(port)",
		"filename": "lib/sock.k",
		"fileline": 63,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sock_server",
		"usage": "sock_server(port)",
		"filename": "lib/sock.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sock_test",
		"usage": "sock_test(port)",
		"filename": "lib/sock.k",
		"fileline": 100,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "spiralout",
		"usage": "spiralout(nnts, x, y)",
		"filename": "lib/gifjam.k",
		"fileline": 115,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "spliteven",
		"usage": "spliteven(ph, leng)",
		"filename": "lib/util1.k",
		"fileline": 1233,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "splitonstarts",
		"usage": "splitonstarts(ph, minlength, fixedsize)",
		"filename": "lib/util1.k",
		"fileline": 1328,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "splitonstarts_orig",
		"usage": "splitonstarts_orig(ph, minlength, fixedsize)",
		"filename": "lib/util1.k",
		"fileline": 1267,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "spread",
		"usage": "spread(ph,num,rtime,rfactor)",
		"filename": "lib/basic1.k",
		"fileline": 1269,
		"desc": """Return phrase ph "spread" num times, with rtime delay between
each iteration, and with the volume of each iteration decreased
by rfactor.  A "spread" is like an echo, except that notes are
repeated in BOTH directions, forward and back.
""",
	},
	{
		"type": "function",
		"name": "stackhack",
		"usage": "stackhack(n)",
		"filename": "lib/example2.k",
		"fileline": 55,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "starrynight",
		"usage": "starrynight()",
		"filename": "lib/starrynight.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "startcs",
		"usage": "startcs()",
		"filename": "lib/csound.k",
		"fileline": 62,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "startmsg",
		"usage": "startmsg()",
		"filename": "lib/basic2.k",
		"fileline": 253,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "status",
		"usage": "status([str])",
		"filename": "lib/util1.k",
		"fileline": 476,
		"desc": """When called with no arguments, this function prints a list of all
currently-running tasks.  If a string argument is given, the list
will only contain those tasks whose stacktrace (the output of
taskinfo(tid,"trace")) contains that string.
""",
	},
	{
		"type": "function",
		"name": "step",
		"usage": "step(ph,stepdur)",
		"filename": "lib/basic1.k",
		"fileline": 658,
		"desc": """Convert a phrase to be in step time, ie. all notes with the same
spacing and duration.  Overlapped notes (no matter how small the
overlap) are played at the same time.
""",
	},
	{
		"type": "function",
		"name": "step_16",
		"usage": "step_16(p)",
		"filename": "lib/basic2.k",
		"fileline": 731,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "step_32",
		"usage": "step_32(p)",
		"filename": "lib/basic2.k",
		"fileline": 732,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "step_32_4b",
		"usage": "step_32_4b(p)",
		"filename": "lib/expresso.k",
		"fileline": 112,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "step_8",
		"usage": "step_8(p)",
		"filename": "lib/basic2.k",
		"fileline": 730,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "stochgen",
		"usage": "stochgen(ph, chunksize)",
		"filename": "lib/stochgen.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "stop",
		"usage": "stop()",
		"filename": "lib/util1.k",
		"fileline": 366,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "stopmsg",
		"usage": "stopmsg()",
		"filename": "lib/basic2.k",
		"fileline": 255,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "strbits",
		"usage": "strbits(s)",
		"filename": "lib/alphafun.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "strindex",
		"usage": "strindex(s1, s2)",
		"filename": "lib/util2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "strip",
		"usage": "strip(ph)",
		"filename": "lib/basic1.k",
		"fileline": 694,
		"desc": """Strip off any leading and trailing rests from a phrase
""",
	},
	{
		"type": "function",
		"name": "stripsystext",
		"usage": "stripsystext(ph, t)",
		"filename": "lib/smmutils.k",
		"fileline": 38,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "strnotes",
		"usage": "strnotes(s)",
		"filename": "lib/vary.k",
		"fileline": 52,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "stutter",
		"usage": "stutter(ph, wid, num)",
		"filename": "lib/vary.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "stutterrand",
		"usage": "stutterrand(ph)",
		"filename": "lib/vary.k",
		"fileline": 25,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "suffixof",
		"usage": "suffixof(fname)",
		"filename": "lib/read1.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sussect",
		"usage": "sussect(time,channel)",
		"filename": "lib/basic2.k",
		"fileline": 113,
		"desc": """Generate a phrase with controller messages that press the sustain
pedal on the specified channel and let it up after the specified
amount of time.
""",
	},
	{
		"type": "function",
		"name": "sustainnotes",
		"usage": "sustainnotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 579,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "swapnote",
		"usage": "swapnote(ph)",
		"filename": "lib/basic1.k",
		"fileline": 820,
		"desc": """Swap every two notes in the phrase ph.
""",
	},
	{
		"type": "function",
		"name": "sweeptool",
		"usage": "sweeptool(toolfunc, ...)",
		"filename": "lib/windutil.k",
		"fileline": 357,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "syncphr",
		"usage": "syncphr(phrase)",
		"filename": "lib/basic2.k",
		"fileline": 134,
		"desc": """This function returns a copy of the specified phrase, shifting
the starting time so that it is as close as possible to 0 (but not
less than 0).  The amount by which the time is shifted must be a
multiple of lng (which, if not specified, is the length of the Met.
This is typically used when you want to play a phrase that has
been taken from the middle of some other phrase.  The goal is
that the playback should still be synchronized to the current Met.
""",
	},
	{
		"type": "function",
		"name": "synctostart",
		"usage": "synctostart(qnt)",
		"filename": "lib/realutil.k",
		"fileline": 348,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tail",
		"usage": "tail(ph, n, lim)",
		"filename": "lib/util1.k",
		"fileline": 709,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_advance",
		"usage": "task_advance(o)",
		"filename": "lib/waid.k",
		"fileline": 482,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_bmx_sweep",
		"usage": "task_bmx_sweep(obj, n, dir, lim)",
		"filename": "lib/wboomix.k",
		"fileline": 335,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_controllermon",
		"usage": "task_controllermon()",
		"filename": "lib/controllermon.k",
		"fileline": 6,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_eargame",
		"usage": "task_eargame()",
		"filename": "lib/eargame.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_echoplex",
		"usage": "task_echoplex(scale, drumchan)",
		"filename": "lib/echoplex.k",
		"fileline": 200,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_echoplex_drumloop",
		"usage": "task_echoplex_drumloop(tm)",
		"filename": "lib/echoplex.k",
		"fileline": 272,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_echoplex_loop",
		"usage": "task_echoplex_loop(tm)",
		"filename": "lib/echoplex.k",
		"fileline": 251,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_example5",
		"usage": "task_example5()",
		"filename": "lib/example5.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_example8",
		"usage": "task_example8()",
		"filename": "lib/example8.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_gesturemon",
		"usage": "task_gesturemon()",
		"filename": "lib/gesture.k",
		"fileline": 432,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_ggrab",
		"usage": "task_ggrab()",
		"filename": "lib/gesture.k",
		"fileline": 772,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_ginterval",
		"usage": "task_ginterval(key, scalename)",
		"filename": "lib/gesture.k",
		"fileline": 975,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_glinn",
		"usage": "task_glinn(key, scalename)",
		"filename": "lib/gesture.k",
		"fileline": 665,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_gscale",
		"usage": "task_gscale(key, scalename)",
		"filename": "lib/gesture.k",
		"fileline": 504,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_keymap",
		"usage": "task_keymap()",
		"filename": "lib/keymapdemo.k",
		"fileline": 23,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_korg_filter",
		"usage": "task_korg_filter()",
		"filename": "lib/korg.k",
		"fileline": 332,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_korg_mon",
		"usage": "task_korg_mon(f, k)",
		"filename": "lib/korg.k",
		"fileline": 485,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_korg_router",
		"usage": "task_korg_router()",
		"filename": "lib/korgrouter.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_launchrand",
		"usage": "task_launchrand()",
		"filename": "lib/launchpad.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_loop",
		"usage": "task_loop(p, tm)",
		"filename": "lib/realutil.k",
		"fileline": 230,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_midimon",
		"usage": "task_midimon(verbose)",
		"filename": "lib/midimon.k",
		"fileline": 35,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_midirouter",
		"usage": "task_midirouter()",
		"filename": "lib/midirouter.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_monitor",
		"usage": "task_monitor()",
		"filename": "lib/realutil.k",
		"fileline": 255,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_radio",
		"usage": "task_radio()",
		"filename": "lib/radio.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_remapper",
		"usage": "task_remapper(chantomap)",
		"filename": "lib/remapper.k",
		"fileline": 65,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_remapper_checkallowed",
		"usage": "task_remapper_checkallowed()",
		"filename": "lib/remapper.k",
		"fileline": 48,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_remapper_quit",
		"usage": "task_remapper_quit(o, mf)",
		"filename": "lib/remapper.k",
		"fileline": 43,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_rootmon",
		"usage": "task_rootmon()",
		"filename": "lib/rootmon.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "task_slidermon",
		"usage": "task_slidermon()",
		"filename": "lib/perkis.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tempoinfo",
		"usage": "tempoinfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 62,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "temponote",
		"usage": "temponote(t)",
		"filename": "lib/basic2.k",
		"fileline": 664,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tension",
		"usage": "tension(na, nb)",
		"filename": "lib/util1.k",
		"fileline": 1001,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test1f",
		"usage": "test1f()",
		"filename": "lib/util1.k",
		"fileline": 1502,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test_connect",
		"usage": "test_connect()",
		"filename": "lib/sock.k",
		"fileline": 31,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test_listen",
		"usage": "test_listen(port)",
		"filename": "lib/sock.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test_loop",
		"usage": "test_loop(x)",
		"filename": "lib/sock.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test_melodymerge",
		"usage": "test_melodymerge()",
		"filename": "lib/melodymerge.k",
		"fileline": 42,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "test_monitor",
		"usage": "test_monitor()",
		"filename": "lib/realutil.k",
		"fileline": 262,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "testgauss",
		"usage": "testgauss(lim)",
		"filename": "lib/util1.k",
		"fileline": 1494,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "testgenerateclock",
		"usage": "testgenerateclock()",
		"filename": "lib/realutil.k",
		"fileline": 105,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "testit",
		"usage": "testit()",
		"filename": "lib/example2.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "testnoiseval",
		"usage": "testnoiseval()",
		"filename": "lib/util1.k",
		"fileline": 1510,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "testrand",
		"usage": "testrand(lim)",
		"filename": "lib/util1.k",
		"fileline": 1486,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "text2note",
		"usage": "text2note(s)",
		"filename": "lib/melodymerge.k",
		"fileline": 113,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "textfunc",
		"usage": "textfunc(str, just)",
		"filename": "lib/util1.k",
		"fileline": 801,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "thincontrol",
		"usage": "thincontrol(origp, mintm)",
		"filename": "lib/basic2.k",
		"fileline": 506,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "thinit",
		"usage": "thinit(p, mintm)",
		"filename": "lib/basic2.k",
		"fileline": 461,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tick",
		"usage": "tick(t, nt)",
		"filename": "lib/realutil.k",
		"fileline": 92,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "timesigsinfo",
		"usage": "timesigsinfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 50,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tjtalg",
		"usage": "tjtalg()",
		"filename": "lib/tjtalg.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "togesturein",
		"usage": "togesturein(gtype, xf, yf, contact, dev, finger)",
		"filename": "lib/gesture.k",
		"fileline": 253,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "togglemet",
		"usage": "togglemet()",
		"filename": "lib/util1.k",
		"fileline": 167,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tonerow",
		"usage": "tonerow(p)",
		"filename": "lib/basic2.k",
		"fileline": 780,
		"desc": """Better version of tonerow, works on all types of notes.
Return a tone row of the notes in phrase p.
Each note in the original phrase appears exactly
once in the result, but in a random position.
The original time/duration of the notes is retained.
""",
	},
	{
		"type": "function",
		"name": "tonerow_old",
		"usage": "tonerow_old(p)",
		"filename": "lib/basic2.k",
		"fileline": 741,
		"desc": """Return a tone row of the notes in phrase p.
Each note in the original phrase appears exactly
once in the result, but in a random position.
The original time/duration of the notes is retained.
""",
	},
	{
		"type": "function",
		"name": "tooldesc",
		"usage": "tooldesc(nt)",
		"filename": "lib/toolholder.k",
		"fileline": 499,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "toolhelp",
		"usage": "toolhelp(toolname)",
		"filename": "lib/gridinit.k",
		"fileline": 86,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "toolize",
		"usage": "toolize(p, wphr, t1, t2, tooltype, ...)",
		"filename": "lib/wgroup.k",
		"fileline": 2956,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "toolnotes",
		"usage": "toolnotes(p)",
		"filename": "lib/util2.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "toolnotesdump",
		"usage": "toolnotesdump(tnts)",
		"filename": "lib/toolholder.k",
		"fileline": 506,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "toolnotesrestore",
		"usage": "toolnotesrestore(st, notifyobj)",
		"filename": "lib/toolholder.k",
		"fileline": 534,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tooltypes",
		"usage": "tooltypes(ti)",
		"filename": "lib/mkmenus.k",
		"fileline": 557,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tooltypesall",
		"usage": "tooltypesall()",
		"filename": "lib/mkmenus.k",
		"fileline": 529,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "total_expresso",
		"usage": "total_expresso(transforms, gen, seed1, p, ntracks, patches, scalem, verbose, autostep, autoapply, autolength, applyphr)",
		"filename": "lib/expresso.k",
		"fileline": 119,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "trans_rand_forever",
		"usage": "trans_rand_forever()",
		"filename": "lib/snipper.k",
		"fileline": 195,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_arpeggio",
		"usage": "transform_arpeggio(x)",
		"filename": "lib/short.k",
		"fileline": 78,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_echo2",
		"usage": "transform_echo2(x)",
		"filename": "lib/short.k",
		"fileline": 68,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_echo4",
		"usage": "transform_echo4(x)",
		"filename": "lib/short.k",
		"fileline": 67,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_fractal",
		"usage": "transform_fractal(x)",
		"filename": "lib/short.k",
		"fileline": 76,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_none",
		"usage": "transform_none(x)",
		"filename": "lib/short.k",
		"fileline": 73,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_null",
		"usage": "transform_null(x)",
		"filename": "lib/short.k",
		"fileline": 71,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_preecho",
		"usage": "transform_preecho(x)",
		"filename": "lib/short.k",
		"fileline": 69,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_preecho2",
		"usage": "transform_preecho2(x)",
		"filename": "lib/short.k",
		"fileline": 70,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_reverse",
		"usage": "transform_reverse(x)",
		"filename": "lib/short.k",
		"fileline": 82,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_slow",
		"usage": "transform_slow(x)",
		"filename": "lib/short.k",
		"fileline": 72,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_spread",
		"usage": "transform_spread(x)",
		"filename": "lib/short.k",
		"fileline": 81,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_step",
		"usage": "transform_step(x)",
		"filename": "lib/short.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_step2",
		"usage": "transform_step2(x)",
		"filename": "lib/short.k",
		"fileline": 75,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_stutter",
		"usage": "transform_stutter(x)",
		"filename": "lib/short.k",
		"fileline": 77,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_thin",
		"usage": "transform_thin(x)",
		"filename": "lib/short.k",
		"fileline": 80,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transform_tonerow",
		"usage": "transform_tonerow(x)",
		"filename": "lib/short.k",
		"fileline": 79,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transpose",
		"usage": "transpose(phrase,amount)",
		"filename": "lib/basic1.k",
		"fileline": 711,
		"desc": """Transposes the phrase by the specified amount.
""",
	},
	{
		"type": "function",
		"name": "transposeseqinplace",
		"usage": "transposeseqinplace(p, seq)",
		"filename": "lib/basic1.k",
		"fileline": 1118,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "transposeseqrepeat",
		"usage": "transposeseqrepeat(p, seq)",
		"filename": "lib/basic1.k",
		"fileline": 1108,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "trrackpatch",
		"usage": "trrackpatch(ch,bank,prog)",
		"filename": "lib/trrack.k",
		"fileline": 7,
		"desc": """Return sysex that changes a parts bank/program.
Assumes that the 16 parts are assigned to channels 1-16.
ch is 1-based
bank is 0-based
prog is 0-based
""",
	},
	{
		"type": "function",
		"name": "tsiginfo",
		"usage": "tsiginfo(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 123,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tsiginfo2",
		"usage": "tsiginfo2(ph)",
		"filename": "lib/smmutils.k",
		"fileline": 149,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "txpatches",
		"usage": "txpatches()",
		"filename": "lib/realutil.k",
		"fileline": 205,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "txperfs",
		"usage": "txperfs()",
		"filename": "lib/realutil.k",
		"fileline": 208,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typealot",
		"usage": "typealot(fname)",
		"filename": "lib/typealot.k",
		"fileline": 22,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typealot_prompt",
		"usage": "typealot_prompt(prompt)",
		"filename": "lib/typealot.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typealot_read",
		"usage": "typealot_read(fname)",
		"filename": "lib/typealot.k",
		"fileline": 88,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typealot_write",
		"usage": "typealot_write(fname)",
		"filename": "lib/typealot.k",
		"fileline": 102,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typo",
		"usage": "typo(fname, timer)",
		"filename": "lib/typo.k",
		"fileline": 18,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typob",
		"usage": "typob(fname, timer, t)",
		"filename": "lib/typob.k",
		"fileline": 15,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typoc",
		"usage": "typoc(fname, timer, t)",
		"filename": "lib/typoc.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "typoh",
		"usage": "typoh(fname, timer, t)",
		"filename": "lib/typoh.k",
		"fileline": 11,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "udp_listen",
		"usage": "udp_listen()",
		"filename": "lib/sock.k",
		"fileline": 117,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "udp_listen2",
		"usage": "udp_listen2()",
		"filename": "lib/sock.k",
		"fileline": 124,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "udp_test_send",
		"usage": "udp_test_send()",
		"filename": "lib/sock.k",
		"fileline": 131,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ungrabmouse",
		"usage": "ungrabmouse(w)",
		"filename": "lib/windutil.k",
		"fileline": 468,
		"desc": """This is the complement to grabmouse(), releasing the mouse so that
mouse events are distributed normally.  The w (window) argument
should be the same as that passed to grabmouse().
""",
	},
	{
		"type": "function",
		"name": "ungrabmousefifo",
		"usage": "ungrabmousefifo(fifo)",
		"filename": "lib/windutil.k",
		"fileline": 499,
		"desc": """This is the complement to grabmouse(), releasing the mouse so that
mouse events are distributed normally.  The fifo argument should be
the fifo that was created and returned by grabmouse().
""",
	},
	{
		"type": "function",
		"name": "uniqnum",
		"usage": "uniqnum()",
		"filename": "lib/util1.k",
		"fileline": 292,
		"desc": """This function returns a new unique number.  Useful for inventing
id numbers for menus, or for any other purpose.
""",
	},
	{
		"type": "function",
		"name": "uniqtrackname",
		"usage": "uniqtrackname()",
		"filename": "lib/wphrase.k",
		"fileline": 1030,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "unkorgmon",
		"usage": "unkorgmon(k, f)",
		"filename": "lib/midimon.k",
		"fileline": 13,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "unregicontrol",
		"usage": "unregicontrol(o)",
		"filename": "lib/util1.k",
		"fileline": 396,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "unregiprogram",
		"usage": "unregiprogram(o)",
		"filename": "lib/util1.k",
		"fileline": 440,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "updatelib",
		"usage": "updatelib(forceit, forcerekeylib, path, reread)",
		"filename": "lib/updatelib.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "usecell",
		"usage": "usecell(y, x)",
		"filename": "lib/gifjam.k",
		"fileline": 164,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var1",
		"usage": "var1(p)",
		"filename": "lib/var.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var10",
		"usage": "var10(str)",
		"filename": "lib/var.k",
		"fileline": 160,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var2",
		"usage": "var2(p)",
		"filename": "lib/var.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var3",
		"usage": "var3(p, ...)",
		"filename": "lib/var.k",
		"fileline": 21,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var4",
		"usage": "var4(p)",
		"filename": "lib/var.k",
		"fileline": 44,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var4b",
		"usage": "var4b(p)",
		"filename": "lib/var.k",
		"fileline": 57,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var5",
		"usage": "var5(p)",
		"filename": "lib/var.k",
		"fileline": 47,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var5b",
		"usage": "var5b(p)",
		"filename": "lib/var.k",
		"fileline": 50,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var6",
		"usage": "var6(p, nnotes)",
		"filename": "lib/var.k",
		"fileline": 74,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var7",
		"usage": "var7(p)",
		"filename": "lib/var.k",
		"fileline": 98,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var7b",
		"usage": "var7b(p)",
		"filename": "lib/var.k",
		"fileline": 86,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var8",
		"usage": "var8(p)",
		"filename": "lib/var.k",
		"fileline": 110,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "var9",
		"usage": "var9(str)",
		"filename": "lib/var.k",
		"fileline": 122,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "vidstart",
		"usage": "vidstart()",
		"filename": "lib/video.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "vidtest",
		"usage": "vidtest()",
		"filename": "lib/video.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "virus_parameter",
		"usage": "virus_parameter(pg, ch, param, val)",
		"filename": "lib/virusb.k",
		"fileline": 1178,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "virus_partoutput",
		"usage": "virus_partoutput(ch, v)",
		"filename": "lib/virusb.k",
		"fileline": 1183,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "virus_partvolume",
		"usage": "virus_partvolume(ch, v)",
		"filename": "lib/virusb.k",
		"fileline": 1186,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "virusbpatch",
		"usage": "virusbpatch(part,bank,prog)",
		"filename": "lib/virusb.k",
		"fileline": 9,
		"desc": """Return sysex that changes a parts bank/program.
Assumes that the 16 parts are assigned to channels 1-16.
ch is 1-based
bank is 1-based
prog is 0-based
""",
	},
	{
		"type": "function",
		"name": "virusbunpatch",
		"usage": "virusbunpatch(p)",
		"filename": "lib/virusb.k",
		"fileline": 28,
		"desc": """If p is a patch change message, return its name.
Return "" if it's not a patch message.
""",
	},
	{
		"type": "function",
		"name": "virusreq1",
		"usage": "virusreq1(dd, bb, ss)",
		"filename": "lib/realutil.k",
		"fileline": 266,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "virustest",
		"usage": "virustest(dd, bb, ss)",
		"filename": "lib/realutil.k",
		"fileline": 318,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "volmonitor",
		"usage": "volmonitor(notify, echorest)",
		"filename": "lib/monitor.k",
		"fileline": 2,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "volumenotes",
		"usage": "volumenotes(ph)",
		"filename": "lib/basic2.k",
		"fileline": 597,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "vvvv",
		"usage": "vvvv()",
		"filename": "lib/vvvv.k",
		"fileline": 0,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "vvvvlooper",
		"usage": "vvvvlooper()",
		"filename": "lib/vvvvlooper.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitdown",
		"usage": "waitdown(f)",
		"filename": "lib/windutil.k",
		"fileline": 9,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitforstart",
		"usage": "waitforstart(o, sq)",
		"filename": "lib/realutil.k",
		"fileline": 326,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitncall",
		"usage": "waitncall(tm, f, ...)",
		"filename": "lib/util1.k",
		"fileline": 691,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitneval",
		"usage": "waitneval(tm, s)",
		"filename": "lib/util1.k",
		"fileline": 704,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitnmethod",
		"usage": "waitnmethod(tm, o, meth, ...)",
		"filename": "lib/util1.k",
		"fileline": 696,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitnput",
		"usage": "waitnput(tmout, f, v)",
		"filename": "lib/util1.k",
		"fileline": 686,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitnsweep",
		"usage": "waitnsweep(o, type)",
		"filename": "lib/windutil.k",
		"fileline": 17,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "waitup",
		"usage": "waitup(f)",
		"filename": "lib/windutil.k",
		"fileline": 1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "warrange",
		"usage": "warrange(args)",
		"filename": "lib/warrange.k",
		"fileline": 4,
		"desc": """This is used to let you interactively rearrange windows.
""",
	},
	{
		"type": "function",
		"name": "wbroadcast",
		"usage": "wbroadcast()",
		"filename": "lib/windutil.k",
		"fileline": 383,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wcascade_mon",
		"usage": "wcascade_mon(gb)",
		"filename": "lib/wcascade.k",
		"fileline": 651,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wcopy",
		"usage": "wcopy()",
		"filename": "lib/windutil.k",
		"fileline": 203,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wdelete",
		"usage": "wdelete()",
		"filename": "lib/windutil.k",
		"fileline": 167,
		"desc": """This utility lets you point to and delete an object.
""",
	},
	{
		"type": "function",
		"name": "wdump",
		"usage": "wdump()",
		"filename": "lib/windutil.k",
		"fileline": 393,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "web_xpress",
		"usage": "web_xpress(nbars, gen, ntracks, patches, seed1, factor)",
		"filename": "lib/expresso.k",
		"fileline": 41,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "webexpresso",
		"usage": "webexpresso(gen, ntracks, patches, seed1, fn, x, ...)",
		"filename": "lib/expresso.k",
		"fileline": 12,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "webexpresso_perc",
		"usage": "webexpresso_perc(gen, ntracks, patches, seed1, fn, x, ...)",
		"filename": "lib/expresso.k",
		"fileline": 258,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wecho4x_outputs",
		"usage": "wecho4x_outputs()",
		"filename": "lib/wecho4x.k",
		"fileline": 861,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wechox_outputs",
		"usage": "wechox_outputs()",
		"filename": "lib/wechox.k",
		"fileline": 613,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wgenepool_mon",
		"usage": "wgenepool_mon(gb)",
		"filename": "lib/wgene.k",
		"fileline": 778,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wgrabbag_mon",
		"usage": "wgrabbag_mon(gb)",
		"filename": "lib/wgrabbag.k",
		"fileline": 898,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "whelp",
		"usage": "whelp()",
		"filename": "lib/windutil.k",
		"fileline": 45,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "winvis",
		"usage": "winvis()",
		"filename": "lib/mkmenus.k",
		"fileline": 657,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wmax",
		"usage": "wmax(dir)",
		"filename": "lib/windutil.k",
		"fileline": 147,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wmove",
		"usage": "wmove(o, m, eraseit)",
		"filename": "lib/windutil.k",
		"fileline": 292,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_downarrow",
		"usage": "wnudge_downarrow()",
		"filename": "lib/wnudge.k",
		"fileline": 68,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_leftarrow",
		"usage": "wnudge_leftarrow()",
		"filename": "lib/wnudge.k",
		"fileline": 77,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_leftarrow2",
		"usage": "wnudge_leftarrow2()",
		"filename": "lib/wnudge.k",
		"fileline": 86,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_rightarrow",
		"usage": "wnudge_rightarrow()",
		"filename": "lib/wnudge.k",
		"fileline": 100,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_rightarrow2",
		"usage": "wnudge_rightarrow2()",
		"filename": "lib/wnudge.k",
		"fileline": 109,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnudge_uparrow",
		"usage": "wnudge_uparrow()",
		"filename": "lib/wnudge.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wnull_null",
		"usage": "wnull_null()",
		"filename": "lib/wnull.k",
		"fileline": 7,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "works26",
		"usage": "works26()",
		"filename": "lib/typo.k",
		"fileline": 14,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wpack",
		"usage": "wpack(args)",
		"filename": "lib/wpack.k",
		"fileline": 6,
		"desc": """This is used to let you interactively pack windows.
""",
	},
	{
		"type": "function",
		"name": "wpastetool",
		"usage": "wpastetool()",
		"filename": "lib/windutil.k",
		"fileline": 280,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wportmap1_inputs",
		"usage": "wportmap1_inputs(o, po)",
		"filename": "lib/wportmap1.k",
		"fileline": 79,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wportmap1_outputs",
		"usage": "wportmap1_outputs(o, po)",
		"filename": "lib/wportmap1.k",
		"fileline": 108,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wportmap2_inputs",
		"usage": "wportmap2_inputs(o, po)",
		"filename": "lib/wportmap2.k",
		"fileline": 78,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wportmap2_outputs",
		"usage": "wportmap2_outputs(o, po, ch)",
		"filename": "lib/wportmap2.k",
		"fileline": 107,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wresize",
		"usage": "wresize()",
		"filename": "lib/windutil.k",
		"fileline": 122,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wrestore",
		"usage": "wrestore()",
		"filename": "lib/windutil.k",
		"fileline": 417,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "writelines",
		"usage": "writelines(p, fn, yzoom, doborder)",
		"filename": "lib/writelines.k",
		"fileline": 4,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "writemf",
		"usage": "writemf(ph, fname)",
		"filename": "lib/util1.k",
		"fileline": 278,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "writephr",
		"usage": "writephr(ph, fname)",
		"filename": "lib/util1.k",
		"fileline": 268,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wselect",
		"usage": "wselect()",
		"filename": "lib/windutil.k",
		"fileline": 34,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wsh",
		"usage": "wsh()",
		"filename": "lib/wsh.k",
		"fileline": 39,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wsh2000",
		"usage": "wsh2000()",
		"filename": "lib/wsh.k",
		"fileline": 3,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wsh2001",
		"usage": "wsh2001()",
		"filename": "lib/wsh.k",
		"fileline": 29,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wshowdump",
		"usage": "wshowdump()",
		"filename": "lib/windutil.k",
		"fileline": 373,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wsnarf",
		"usage": "wsnarf()",
		"filename": "lib/windutil.k",
		"fileline": 241,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wsnarftool",
		"usage": "wsnarftool()",
		"filename": "lib/windutil.k",
		"fileline": 260,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wswap",
		"usage": "wswap()",
		"filename": "lib/windutil.k",
		"fileline": 179,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wtimer_task",
		"usage": "wtimer_task(o, m)",
		"filename": "lib/wtimer.k",
		"fileline": 104,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wwwalg1",
		"usage": "wwwalg1(word, leng)",
		"filename": "lib/www.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wwwalg2",
		"usage": "wwwalg2(word)",
		"filename": "lib/www.k",
		"fileline": 28,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wwwechovariety",
		"usage": "wwwechovariety(w)",
		"filename": "lib/wwwtools.k",
		"fileline": 884,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "wwwpolishit",
		"usage": "wwwpolishit(w)",
		"filename": "lib/wwwtools.k",
		"fileline": 916,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "xpress",
		"usage": "xpress(nbars, gen, ntracks, patches, seed1, factor)",
		"filename": "lib/expresso.k",
		"fileline": 58,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "xpress2",
		"usage": "xpress2()",
		"filename": "lib/expresso.k",
		"fileline": 47,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "xymid",
		"usage": "xymid(sz)",
		"filename": "lib/windutil.k",
		"fileline": 30,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "xystr",
		"usage": "xystr(xyarray)",
		"filename": "lib/util1.k",
		"fileline": 639,
		"desc": """This function is used when you want to print(the value of an xyarray.
It returns a string version of the specified xyarray.
For example, xystr(xy(0,0,4,4)) would equal "0,0,4,4".
It works for 2-element xyarrays (i.e. with subscripts "x" and "y")
as well as 4-element xyarrays ("x0", "y0", "x1", "y1").
""",
	},
	{
		"type": "function",
		"name": "yuri",
		"usage": "yuri()",
		"filename": "lib/yuri.k",
		"fileline": 19,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "zoomoutandredraw",
		"usage": "zoomoutandredraw(o)",
		"filename": "lib/mkmenus.k",
		"fileline": 3,
		"desc": """""",
	},
]


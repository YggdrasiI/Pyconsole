#!/usr/bin/env python3
# -*- coding: utf-8 -*-

try:
	lib_dict
except NameError:
	lib_dict = dict()

lib_dict['build-in'] = [
	{
		"type": "variable",
		"name": "Abortonerr",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When set to 1, KeyKit will abort when an error occurs. The default is 0.""",
	},
	{
		"type": "variable",
		"name": "Abortonint",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When set to 1, KeyKit will abort when an interrupt is received. The default is 1.""",
	},
	{
		"type": "function",
		"name": "acos",
		"usage": """acos(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "ANYWHERE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "function",
		"name": "argv",
		"usage": """argv(argnum [, argnum2])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Arraysort",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When set to 1, the index values in the "for ( i in arr )" statement will be processed in sorted order. The default is 0, so that the order of index values is not sorted.""",
	},
	{
		"type": "variable",
		"name": "ARROW",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "function",
		"name": "ascii",
		"usage": """ascii(integer-or-string)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "ascii",
		"usage": """ascii(integer-or-string)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "asin",
		"usage": """asin(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "atan",
		"usage": """atan(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "attribarray",
		"usage": """attribarray(s)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Autoresize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When set to 1, resizing the main KeyKit window will result in the proportionate resizing of all the individual tool windows. Default is 0, so that making the main window bigger will get you more space for new tools rather than just making the existing tools bigger.""",
	},
	{
		"type": "variable",
		"name": "Bendoffset",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number controls the vertical offset of the beginning of pitch-bend controller lines in the Misc window. Default is 64.""",
	},
	{
		"type": "variable",
		"name": "Bendrange",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number controls the relative size of pitch-bend controller lines in the Misc window. Default is 16384.""",
	},
	{
		"type": "function",
		"name": "bitmap",
		"usage": """bitmap(keyword, ...)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "BORDER",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for style().""",
	},
	{
		"type": "function",
		"name": "browsefiles",
		"usage": """browsefiles(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "BRUSH",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "BUSY",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "BUTTON",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for style().""",
	},
	{
		"type": "variable",
		"name": "BUTTON12DOWN",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON12DRAG",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON12UP",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON1DOWN",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON1DRAG",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON1UP",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON2DOWN",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON2DRAG",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "BUTTON2UP",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "Chancolors",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "CHANPRESSURE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "chdir",
		"usage": """chdir(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Checkcount",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This controls the frequency of garbage collection activities. Default is 20.""",
	},
	{
		"type": "variable",
		"name": "CLEAR",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for draw().""",
	},
	{
		"type": "variable",
		"name": "Clicks",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The number of clicks per beat. Default is 96.""",
	},
	{
		"type": "variable",
		"name": "Clicksperclock",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When Sync!=0, this is the number of KeyKit clicks per MIDI clock. Default is 1.""",
	},
	{
		"type": "variable",
		"name": "CLOCK",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "Clocksperclick",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When Sync!=0, this is the number of MIDI clocks per KeyKit click. Default is 1. To avoid confusion when adjusting Clicksperclock and Clocksperclick you should ensure that at least one of those two variables has a value of 1.""",
	},
	{
		"type": "function",
		"name": "close",
		"usage": """close(fifo)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "CLOSEST",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "function",
		"name": "color",
		"usage": """color(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Colorfunc",
		"usage": """Colorfunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "function",
		"name": "colormix",
		"usage": """colormix(n, r, g, b)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Colornotes",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Colors",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This is the number of colors (including black and white) available.""",
	},
	{
		"type": "variable",
		"name": "Consecho",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Consechofifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Consinfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Consolefifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The automatically-opened fifo that can be used to read characters from the console.""",
	},
	{
		"type": "variable",
		"name": "Consoutfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Consupdown",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "CONTROLLER",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "coreleft",
		"usage": """coreleft(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cos",
		"usage": """cos(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "CROSS",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Current",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This phrase contains all currently-depressed notes.""",
	},
	{
		"type": "function",
		"name": "currtime",
		"usage": """currtime()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "cut",
		"usage": """cut(phrase, type, ...)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "CUT_CHANNEL",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "CUT_FLAGS",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "CUT_NOTTYPE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "CUT_TIME",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "CUT_TYPE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "Debug",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "debug",
		"usage": """debug(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugdraw",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debuggesture",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debuginst",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugkill",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugkill1",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugmalloc",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugmidi",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugmouse",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugoff",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugrun",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Debugwait",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Defoutport",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Defpriority",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This is the default priority of new tasks (though normally, tasks inherit the priority of the task that spawns them).""",
	},
	{
		"type": "variable",
		"name": "Defrelease",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Devmidi",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Directinput",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Dirseparator",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the machine-dependent value that separates directory entries within a pathname. For example, on Unix, it is "/".""",
	},
	{
		"type": "variable",
		"name": "DRAG",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Dragquant",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number is used to quantize the dragging of notes with the Group tool.""",
	},
	{
		"type": "variable",
		"name": "DRAW",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Drawcount",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Echoport",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Eof",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This value is returned when you do a get() on a closed (or nonexistent) fifo.""",
	},
	{
		"type": "variable",
		"name": "Erasechar",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "error",
		"usage": """error(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Errorfunc",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The function specified by this pointer is automatically called when a non-fatal execution error occurs.""",
	},
	{
		"type": "function",
		"name": "exit",
		"usage": """exit(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Exitfunc",
		"usage": """Exitfunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "function",
		"name": "exp",
		"usage": """exp(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Fakewrap",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fifoctl",
		"usage": """fifoctl(fifo, cmd [, arg])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "fifosize",
		"usage": """fifosize(fifo)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "filetime",
		"usage": """filetime(cmd)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Filter",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The value of this variable is a collection of bitflags that determines what MIDI messages are filtered out of received MIDI input. Macros for the bit values that can be set in the value of Filter are: CHANPRESSURE, CONTROLLER, PROGRAM, PRESSURE, PITCHBEND, SYSEX, POSITION, SONG, STARTSTOPCONT, and CLOCK. Default value is 0, i.e. nothing is filtered.""",
	},
	{
		"type": "function",
		"name": "finishoff",
		"usage": """finishoff()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "float",
		"usage": """float(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "flush",
		"usage": """flush(fifo)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Font",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the name of the font to be used. Default is machine-dependent, and some machines may completely ignore it.""",
	},
	{
		"type": "variable",
		"name": "Forceinputport",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "funkey",
		"usage": """funkey(function-key-num, function-to-call)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "garbcollect",
		"usage": """garbcollect()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "get",
		"usage": """get(fifo)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Grablimit",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Graphics",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number is non-zero whenever graphics mode is enabled.""",
	},
	{
		"type": "variable",
		"name": "Icon",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "INCLUSIVE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "Initconfig",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Inputistty",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "integer",
		"usage": """integer(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Interrupt",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Intrfunc",
		"usage": """Intrfunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "variable",
		"name": "Inverse",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "INVOKE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Isofuncwarn",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Keypath",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the list of directories in which to search for KeyKit function libraries. Default is machine-dependent, usually computed on the fly by the executable, though you can override it by defining a KEYPATH environment variable. Note: if you change Keypath after KeyKit has started executing, you need to call the rekeylib() function in order to rescan all the directories for their keylib.k files - otherwise the change will be ineffective.""",
	},
	{
		"type": "variable",
		"name": "Keyroot",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "kill",
		"usage": """kill(tid)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "KILL",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for kill().""",
	},
	{
		"type": "variable",
		"name": "Killchar",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "LEFTRIGHT",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "function",
		"name": "limitsof",
		"usage": """limitsof(phrase)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Loadverbose",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, the dynamic loading of each KeyKit function is announced. Default is 0.""",
	},
	{
		"type": "function",
		"name": "lock",
		"usage": """lock(name [, test])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "log",
		"usage": """log(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "log10",
		"usage": """log10(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Lowcore",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When the amount of free memory falls below this number, warnings begin to be issued to encourage exiting. Default is 50000.""",
	},
	{
		"type": "function",
		"name": "lsdir",
		"usage": """lsdir(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Machine",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string holds the machine type (e.g. "win", "unix", "amiga").""",
	},
	{
		"type": "variable",
		"name": "Maxatonce",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This controls how many simultaneously-depressed notes can be handled on MIDI input. Default value is 256.""",
	},
	{
		"type": "function",
		"name": "mdep",
		"usage": """mdep(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "MENU_BACKUP",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for menudo().""",
	},
	{
		"type": "variable",
		"name": "MENU_DELETE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for menudo().""",
	},
	{
		"type": "variable",
		"name": "MENU_MOVE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for menudo().""",
	},
	{
		"type": "variable",
		"name": "MENU_NOCHOICE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for menudo().""",
	},
	{
		"type": "variable",
		"name": "MENU_UNDEFINED",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for menudo().""",
	},
	{
		"type": "variable",
		"name": "MENUBUTTON",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for style().""",
	},
	{
		"type": "variable",
		"name": "Menujump",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, moving the mouse into a menu's scroll bar will cause the menu to immediately jump to that position. Otherwise, scroll bar movement is only relative. Default is 0. If you have trouble interacting with the scroll bar, try setting this to 1.""",
	},
	{
		"type": "variable",
		"name": "Menuscrollwidth",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number controls the width of the scroll bar in scrolling menus. Default is 20. If you have trouble getting on the scroll bar, increase this value.""",
	},
	{
		"type": "variable",
		"name": "Menusize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This is the default maximum number of items in a pop-up menu. When a menu becomes larger than this, it will display a scroll bar. Default is 12.""",
	},
	{
		"type": "variable",
		"name": "Menuymargin",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Merge",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, MIDI input is merged into MIDI output. Default is 1.""",
	},
	{
		"type": "variable",
		"name": "Mergefilter",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero (and if Merge is non-zero), this value is a bitmask used to determine which channels are not merged from MIDI input to MIDI output. For example, if the value of Mergefilter is 41&lt;&lt;4, then channel 5 will not be merged. Any number of bits in Mergefilter can be set.""",
	},
	{
		"type": "variable",
		"name": "Mfformat",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The value of this variable is the type (0,1,2) of the last MIDI file read with midifile().""",
	},
	{
		"type": "variable",
		"name": "Mfsysextype",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("input", "close", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("input", "open", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("input", "isopen", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("input", "list/open/close/isopen", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("output", "close", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("output", "open", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("output", "isopen", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("output", "list/open/close/isopen", midi_port_number)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midi",
		"usage": """midi("portmap", "inport", chan, "outport")""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "midibytes",
		"usage": """midibytes(byte1, byte2, byte3...)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "MIDIBYTES",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "Midififo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The automatically-opened fifo that can be used to read notes from MIDI input.""",
	},
	{
		"type": "function",
		"name": "midifile",
		"usage": """midifile(filename)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Midifilenoteoff",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Midiinfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Midioutfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Midithrottle",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "milliclock",
		"usage": """milliclock()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Millicount",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Millires",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Milliwarn",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Minbardx",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Monitorfifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Mousedisable",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Mousefifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Mousefifo",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The automatically-opened fifo that can be used to read events from the mouse. The items read from this fifo are arrays - the index values are "button", "x", and "y".""",
	},
	{
		"type": "variable",
		"name": "Mousefifolimit",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Mousemoveevents",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "mousewarp",
		"usage": """mousewarp(x, y)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "MOVING",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Values of action() types.""",
	},
	{
		"type": "variable",
		"name": "Musicpath",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the list of directories in which to search for music files. Default is machine-dependent.""",
	},
	{
		"type": "function",
		"name": "nargs",
		"usage": """nargs()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "NOBORDER",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for style().""",
	},
	{
		"type": "variable",
		"name": "NORMAL",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "variable",
		"name": "NOTE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "NOTEOFF",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "NOTEON",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "NOTHING",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Noval",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Now",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The current time, in clicks.""",
	},
	{
		"type": "variable",
		"name": "Nowoffset",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "nullfunc",
		"usage": """nullfunc(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Nullval",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Numinst1",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Numinst2",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "object",
		"usage": """object(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "objectinfo",
		"usage": """objectinfo(object, type)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "objectinfo",
		"usage": """objectinfo(object, type)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "objectlist",
		"usage": """objectlist()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Objectoffset",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Offsetfilter",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero (and if Offsetpitch is non-zero), this value is a bitmask used to determine which channels are not pitch-shifted. For example, if the value of Offsetfilter is 1&lt;&lt;9, then channel 10 will not be affected. (And, in fact, 1&lt;&lt;9 is the default value of Offsetfilter.) Any number of bits in Offsetfilter can be set.""",
	},
	{
		"type": "variable",
		"name": "Offsetpitch",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, all scheduled MIDI output will be pitch-shifted by the value of Offsetpitch.""",
	},
	{
		"type": "variable",
		"name": "Offsetportfilter",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldnargs",
		"usage": """oldnargs(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldtypeof",
		"usage": """oldtypeof(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "oldxy",
		"usage": """oldxy(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "onerror",
		"usage": """onerror(function)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "onexit",
		"usage": """onexit(function)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Onoffmerge",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "open",
		"usage": """open(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Optimize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Panraster",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "pathsearch",
		"usage": """pathsearch(file [, path])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Pathseparator",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the character that separates the components of Keypath. Default is ":".""",
	},
	{
		"type": "function",
		"name": "phdump",
		"usage": """phdump()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "phrase",
		"usage": """phrase(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "PHRASE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for window().""",
	},
	{
		"type": "variable",
		"name": "Phraseflashnotes",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If this value is non-zero, notes within phrase windows are flashed as they are played. Default is 1. If your CPU is too busy, setting this to 0 can help a bit.""",
	},
	{
		"type": "variable",
		"name": "PITCHBEND",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "POINT",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "function",
		"name": "popup",
		"usage": """popup(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "POSITION",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "pow",
		"usage": """pow(x, y)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Prepoll",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "PRESSEDBUTTON",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for style().""",
	},
	{
		"type": "variable",
		"name": "PRESSURE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "Printend",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "printf",
		"usage": """printf(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Printsep",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Printsplit",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When long phrase values are printed, they are broken up on separate lines (each line terminated with a backslash), and Printsplit is the number of characters on each line. The default value is 77. To disable splitting of lines entirely, set Printsplit to 0.""",
	},
	{
		"type": "function",
		"name": "priority",
		"usage": """priority(task, priority)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "PROGRAM",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "prstack",
		"usage": """prstack()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "put",
		"usage": """put(fifo, data)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rand",
		"usage": """rand(n1 [, n2])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "readphr",
		"usage": """readphr(fname)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "realtime",
		"usage": """realtime(phrase [, time [, repeat [, monitor] ] ])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "reboot",
		"usage": """reboot(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Rebootfunc",
		"usage": """Rebootfunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "variable",
		"name": "Recfilter",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Recinput",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Record",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When non-zero, recording of MIDI input is enabled. Default is 1.""",
	},
	{
		"type": "variable",
		"name": "Recorded",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This phrase collects all MIDI input (when Record is non-zero).""",
	},
	{
		"type": "variable",
		"name": "Recsched",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """When non-zero, scheduled MIDI output is included in the Recorded phrase. Default is 0.""",
	},
	{
		"type": "variable",
		"name": "Recsysex",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Redrawfunc",
		"usage": """Redrawfunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "variable",
		"name": "Redrawignoretime",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "refunc",
		"usage": """refunc(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "rekeylib",
		"usage": """rekeylib(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Resizefix",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Resizefunc",
		"usage": """Resizefunc = ?""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """Global variable""",
	},
	{
		"type": "variable",
		"name": "Resizeignoretime",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Saveglobalsize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "screen",
		"usage": """screen(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "setmouse",
		"usage": """setmouse(type)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Showbar",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """The number of clicks between vertical measure bars. Default is 4b.""",
	},
	{
		"type": "variable",
		"name": "Showsync",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Showtext",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sin",
		"usage": """sin(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sizeof",
		"usage": """sizeof(anything)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Slashcheck",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sleeptill",
		"usage": """sleeptill(time)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "SONG",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "split",
		"usage": """split(phrase-or-string)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sprintf",
		"usage": """sprintf(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sqrt",
		"usage": """sqrt(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "STARTSTOPCONT",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "STORE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for draw().""",
	},
	{
		"type": "function",
		"name": "string",
		"usage": """string(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "subbytes",
		"usage": """subbytes(MIDIBYTES-phrase, start, length)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "substr",
		"usage": """substr(string, start, length)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "SubstrCount",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "SWEEP",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Sweepquant",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number is used to quantize the sweeping of areas with sweep() and gridsweep().""",
	},
	{
		"type": "function",
		"name": "symbolnamed",
		"usage": """symbolnamed(string)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "sync",
		"usage": """sync()""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Sync",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, time is advanced from clocks on MIDI input instead of being driven by the computer's clock. This allows synchronization with other MIDI devices (e.g. a drum machine or sequencer). Default is 0.""",
	},
	{
		"type": "variable",
		"name": "SYSEX",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "variable",
		"name": "SYSEXTEXT",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for note type.""",
	},
	{
		"type": "function",
		"name": "system",
		"usage": """system(cmd)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tan",
		"usage": """tan(n)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Taskaddr",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "taskinfo",
		"usage": """taskinfo("list")""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "tempo",
		"usage": """tempo(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Tempotrack",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "TEXT",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for window().""",
	},
	{
		"type": "variable",
		"name": "Textscrollsize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Throttle",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This determins how many KeyKit instructions (internal interpreted instructions, not KeyKit statements) are executed per each check for realtime activity. Default value is 100.""",
	},
	{
		"type": "variable",
		"name": "Throttle2",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Trace",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "TRUNCATE",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for cut().""",
	},
	{
		"type": "function",
		"name": "typeof",
		"usage": """typeof(anything)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "unlock",
		"usage": """unlock(name)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "UPDOWN",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for setmouse() and sweep().""",
	},
	{
		"type": "variable",
		"name": "Usewindfifos",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Version",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This string is the KeyKit version number (e.g. "6.0a").""",
	},
	{
		"type": "variable",
		"name": "Volstem",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """If non-zero, ``volume stems'' are displayed on notes. Default is 0.""",
	},
	{
		"type": "variable",
		"name": "Volstemsize",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """This number controls the relative scale of volume stems. Default is 4.""",
	},
	{
		"type": "function",
		"name": "wait",
		"usage": """wait(tid)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Warningsleep",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Warnnegative",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "windobject",
		"usage": """windobject(objectid, [type])""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "function",
		"name": "windowobject",
		"usage": """windowobject(?)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "Windowsys",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """""",
	},
	{
		"type": "variable",
		"name": "XOR",
		"usage": """""",
		"filename": "sym.c",
		"fileline": -1,
		"desc": """Value for draw().""",
	},
	{
		"type": "function",
		"name": "xy",
		"usage": """xy(x, y)""",
		"filename": "bltin.c",
		"fileline": -1,
		"desc": """""",
	},
]

